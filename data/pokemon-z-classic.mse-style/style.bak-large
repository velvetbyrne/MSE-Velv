mse version: 2.0.0
game: pokemon
full name: Classic, Gym, & Neo Series
short name: Classic
icon: card-sample.jpg
position hint: 087

version: 2018-07-22
depends on:
	package: pokemon.mse-game
	version: 2018-07-22
depends on:
	package: pokemon-a-energy.mse-symbol-font
	version: 2018-06-28
depends on:
	package: pokemon-a-color.mse-symbol-font
	version: 2016-09-10
depends on:
	package: pokemon-a-lg-color.mse-symbol-font
	version: 2018-06-19
depends on:
	package: pokemon-a-rule-classic.mse-symbol-font
	version: 2018-06-28
depends on:
	package: pokemon-a-rule-classic-behind.mse-symbol-font
	version: 2018-06-28
depends on:
	package: pokemon-a-title.mse-symbol-font
	version: 2018-07-02
depends on:
	package: pokemon-b-common.mse-include
	version: 2018-07-04

#By: Imp Elemental Spirit Guide

#expand_size()==2
#border included
card width: 736
card height: 1026
card dpi: 294

#expand_size()==1
#card width: 368
#card height: 513
#card dpi: 147

#NOTES: The shiny pokemon reminder is only available for basic card stages as originally it was only on the basic pokemon.  It wasn't hard to make shiny card frames and producers might still be interested in them.
#Actual card width is 2.5", height is 3.5" almost exactly
############################################################## Extra scripts
init script:
	##############################These two equations were originally used for centering and placing the different frames and text so that they matched the original card.
	##############################			They have been kept in here because they would allow a different resolution of card should such thing apply
	##############################                  Be careful to change the card size when altering these value
	expand_size := { 2 }
	is_not_blur := { expand_size()==2 }
	# 2 is the size of the actual images used
	# to watch 2 , card width 736, height 750, expand_size==2, slide_up == 0 or 276
	# for 2   card width: 736, card height: 1026, card dpi: 294
	# for 1.5 card width: 552, card height:  770, card dpi: 220
	# for 1.4 card width: 515, card height:  717, card dpi: 205
	# for 1   card width: 368, card height:  513, card dpi: 147
	slide_left := { 0 }
	slide_up := { 0 }
	x_left := { to_int(input * expand_size()) - slide_left() }
	y_top := { to_int(input * expand_size()) - slide_up() }
	fun_expand_size := { to_int(input * expand_size()) }
	fun_expand_font := { input * expand_size() }
	fun_decompress := { input / expand_size() }
	###############################Equations for transfering between templates
	template := { 1 }
	stage := { card.stage_baby }
	stage_default := { if card.stage_baby=="" or card.stage_baby=="Baby" then "Basic" else card.stage_base }
	text_option_filter_1 := { text_option_filter(value) }
	text_option_filter_2 := { text_option_filter(card.text_options_1) } + replace@(match: "Default Pokemon Power Color", replace: "Default PokeBody and PokePower Color") + replace@(match: "HP Color the Same as Pokemon Power", replace: "")
	text_option_filter_3 := { text_option_filter(card.text_options_1) } + replace@(match: "Default Pokemon Power Color", replace: "Default Ability Color") + replace@(match: "HP Color the Same as Pokemon Power", replace: "")
	##############################These equations make sure that the cost for the classic template and the modern template match in spite of being different fields
	cost_new_1_placekeep := { card.cost_classic_1 }
	cost_new_2_placekeep := { card.cost_classic_2 }
	cost_new_3_placekeep := { card.cost_classic_3 }
	############################### Equations for symbol text coloration
	############################### Tag equations for the symbol fonts
	is_outline_energy := { is_outline() }
	is_outline_rule := { is_outline() }
	is_two_tone_rule := { is_two_tone() }
	is_wt_rule := { is_wt_text() }
	is_outline_title := { is_outline() }
	is_wt_title := { is_wt_top() }
	is_ec_pbp := { "true" }
	is_sm_ab := { "true" }
	is_ab_gold := { contains(card.general_options_01, match: "Shiny Pokemon") or contains(card.general_options_01, match: "Standard Pokemon") }
	is_dpp_free := { contains(styling.Ability_and_Energy_Icons, match: "Use Transparent Free Energy Icon (aka No Energy)") }
	gx_color := { "Gold" }
	############################### Other diagnostic equations
	############################## Equations to centralize the mask settings for Dual-Types
	dual_mask := { if card.dual_blend_type=="Dark EX Series" then "/pokemon-b-common.mse-include/mask-p-split-darkg1.png"
		else if card.dual_blend_type=="Metal EX Series" then "/pokemon-b-common.mse-include/mask-p-split-metalg1.png"
		else "/pokemon-b-common.mse-include/mask-p-split-ss.png" }
	dual_mask_reverse := { if card.dual_blend_type=="Dark EX Series" then "/pokemon-b-common.mse-include/mask-p-split-darkg1-reverse.png"
		else if card.dual_blend_type=="Metal EX Series" then "/pokemon-b-common.mse-include/mask-p-split-metalg1-reverse.png"
		else "/pokemon-b-common.mse-include/mask-p-split-ss-reverse.png" }
	blend_mask := { if card.dual_blend_type=="Dark EX Series" then "/pokemon-b-common.mse-include/mask-p-blend-darkg1.png"
		else if card.dual_blend_type=="Metal EX Series" then "/pokemon-b-common.mse-include/mask-p-blend-metalg1.png"
		else "/pokemon-b-common.mse-include/mask-p-split-ss.png" }
	blend_mask_reverse := { if card.dual_blend_type=="Dark EX Series" then "/pokemon-b-common.mse-include/mask-p-blend-darkg1-reverse.png"
		else if card.dual_blend_type=="Metal EX Series" then "/pokemon-b-common.mse-include/mask-p-blend-metalg1-reverse.png"
		else "/pokemon-b-common.mse-include/mask-p-split-ss-reverse.png" }
	##############################Equations for the backgrounds
	texture_type_1 := { if background_type_1()=="User Defined" then to_string(card.color_texture_1)
		else if card.texture_type_1=="Default" then "Wizards"
		else to_string(card.texture_type_1) }
	texture_type_2 := { if background_type_2()=="User Defined" then to_string(card.color_texture_2)
		else if card.texture_type_2=="Default" then "Wizards"
		else to_string(card.texture_type_2) }
	colored_pokemon_suffix_1 := { to_string(card.color_texture_1) } + replace@(match: " Black Text", replace: "") + replace@(match: " White Text", replace: "")
	colored_pokemon_suffix_2 := { to_string(card.color_texture_2) } + replace@(match: " Black Text", replace: "") + replace@(match: " White Text", replace: "")
	background_type_1 := { to_string(card.card_color_1) }
	background_type_2 := { to_string(card.card_color_2) }
	is_image_1 := { (is_pokemon() and contains(texture_type_1(), match: "User Image")) or (is_energy() and contains(basic_energy_suffix(), match: "User Image")) }
	is_image_2 := { (card.card_type=="Dual-Type" and contains(texture_type_2(), match: "User Image")) }
	is_gym := { styling.Card_Face=="Gym" }
	is_neo := { styling.Card_Face=="Neo" }
	##############################Equations for the frames
	face_suffix := { if styling.Card_Face=="Neo" then "-neo" else "-classic" }
	frame_suffix := { if contains(card.general_options_01, match: "Dark Pokemon") then "-dark"
		else if contains(card.general_options_01, match: "Light Pokemon") then "-light"
		else if contains(card.general_options_01, match: "Shiny Pokemon") then "-shiny"
		else "" }
	############################### Equations for text coloration
	############################### Text color equations to determin the color and types of text
	ability_color := { if (contains(card.text_options_1, match: "Default") and ((card.card_color_1=="Fire" or card.card_color_1=="Fairy") or (card.card_color_1=="Psychic" or (card.card_color_1=="Fighting" and (card.texture_type_1=="Nintendo" or card.texture_type_1=="SunMoon"))))) or contains(card.text_options_1, match: "Purple") then rgb(89,46,132)
				else if contains(card.text_options_1, match: "Yellow") then rgb(255,242,19)
				else if contains(card.text_options_1, match: "Dark Red") then rgb(134,35,38)
				else if contains(card.text_options_1, match: "Green") then rgb(2,146,64)
				else rgb(198,34,12) }
	is_outline := { (contains(card.text_options_1, match: "Outline Text") or contains(card.art_options, match: "Full Art") or contains(card.art_options, match: "Popout Art (for Advanced Users)")) or
		(is_energy() and card.energy_type=="Basic" and 
			(basic_energy_suffix()=="User Image" or (basic_energy_suffix()=="Lightning" or (background_type_1()=="Metal" and card.metal_texture=="Nintendo" and
			((basic_energy_suffix()=="SunMoon" or basic_energy_suffix()=="Classic") or ((basic_energy_suffix()=="Lightning" or basic_energy_suffix()=="BW") or (basic_energy_suffix()=="Capsule" or basic_energy_suffix()=="Special"))))))) }
	is_two_tone := { card.card_type=="Dual-Type" and not(contains(card.text_options_1, match: "Body Fade Box")) and not(is_outline()) and not(is_dark_1()==is_dark_2()) }
	is_wt_text := { (card.card_type=="Pokemon" and (is_dark_1() and not(contains(card.text_options_1, match: "Body Fade Box"))) and not(is_outline())) or
			((card.card_type=="Dual-Type" and not(is_outline()) and ((is_dark_1() and is_dark_2() and not(contains(card.text_options_1, match: "Body Fade Box"))))) or
			(is_energy() and card.energy_type=="Basic") and (((background_type_1()=="Dark" and (basic_energy_suffix()=="SunMoon" or basic_energy_suffix()=="Special")) or (basic_energy_suffix()=="SmStars" and not(background_type_1()=="Colorless")) or (basic_energy_suffix()=="LgStars" and not(background_type_1()=="Colorless") and not(background_type_1()=="Lightning"))))
				 or contains(card.basic_texture, match: "White Text")) }
	is_wt_top := { ((card.card_type=="Pokemon" and is_dark_1() and not(is_outline())) or
			(card.card_type=="Dual-Type" and not(is_outline()) and is_dark_1()) or
			(is_energy() and card.energy_type=="Basic" and  
				(((background_type_1()=="Dark" and (basic_energy_suffix()=="SunMoon" or basic_energy_suffix()=="Special")) or (basic_energy_suffix()=="SmStars" and not(background_type_1()=="Colorless"))) or
				((basic_energy_suffix()=="LgStars" and not(background_type_1()=="Colorless") and not(background_type_1()=="Lightning")) or contains(basic_energy_suffix(), match: "White Text"))))) }
	is_dark_1 := { is_pokemon() and
		((background_type_1()=="Dark" or 
			((background_type_1()=="Dragon" and not(texture_type_1()=="SunMoon")) or 
				(texture_type_1()=="ISG" and (background_type_1()=="Fighting" or background_type_1()=="Grass")))) or
		(contains(texture_type_1(), match: "White Text"))) }
	is_dark_2 := { ((background_type_2()=="Dark" or 
			((background_type_2()=="Dragon" and not(texture_type_2()=="SunMoon")) or 
				(texture_type_2()=="ISG" and (background_type_2()=="Fighting" or background_type_2()=="Grass")))) or
		(contains(texture_type_2(), match: "White Text"))) }
	rarity_color := { (is_wt_top() and not(card.card_type=="Dual-Type"))
		or (card.card_type=="Dual-Type" and not(is_outline()) and (is_dark_1() and card.dual_blend_type=="Dark EX Series") or (is_dark_2() and not(card.dual_blend_type=="Dark EX Series"))) }
	##############################Equations to centralize the information for the pokemon energy symbol so that User Defined and dual texts are synchronized.
	energy_left := { if is_energy() then 38 else 308 }
	energy_top := { if is_energy() then 24 else if styling.Card_Face=="Neo" then 26 else 29 }
	energy_left_difference := { 9 }
	energy_right_difference := { 9 }
	energy_width := { if is_energy() then 43 else if styling.Card_Face=="Neo" then 26 else 29 }
	###############################################Equations that define spacing and text for attack
	#######Determinines if it is an ability/pokemon power for classic
	is_bad_baby := { stage()=="Baby" and not(styling.Card_Face=="Neo") and contains(styling.Automated_Text_Usage, match: "Baby Stage Rule Reminder") }
	is_ability_classic_1 := { is_bad_baby() or contains(card.rule_text_1, match:"mon Power:") }
	is_ability_classic_2 := { contains(card.rule_text_2, match:"mon Power:") }
	is_ability_classic_3 := { contains(card.rule_text_3, match:"mon Power:") }
	#######Determines if the number of lines of rule text are currently being used
	rule_line_1 := { if is_bad_baby() then card_style.rule_reminder_1_1.content_lines - (if length(to_text(card.rule_reminder_1_1))==0 and card_style.rule_reminder_1_1.content_lines==1 then 1 else 0)
		else card_style.rule_text_1.content_lines - (if length(to_text(card.rule_text_1))==0 and card_style.rule_text_1.content_lines==1 then 1 else 0) }
	rule_line_2 := { card_style.rule_text_2.content_lines - (if length(to_text(card.rule_text_2))==0 and card_style.rule_text_2.content_lines==1 then 1 else 0) }
	rule_line_3 := { card_style.rule_text_3.content_lines - (if length(to_text(card.rule_text_3))==0 and card_style.rule_text_3.content_lines==1 then 1 else 0) }
	rule_lines := { rule_line_1() + rule_line_2() + rule_line_3() }
	#######Determines how many attacks have been input
	attack_no := { if length(to_text(card.cost_classic_3))!=0 or length(to_text(card.damage_3))!=0 or length(to_text(card.rule_text_3))!=0 then 3
		else if length(to_text(card.cost_classic_2))!=0 or length(to_text(card.damage_2))!=0 or length(to_text(card.rule_text_2))!=0 then 2
		else 1 }
	#######The height of the attack dividers for Classic
	top_height := { if attack_no()==1 and styling.Card_Face=="Neo" then 298 else 292 }
	divider_height_1 := { if attack_no()==1 then if styling.Card_Face=="Neo" then 410 else 392
		else if attack_no()==2
			then if styling.Card_Face=="Neo"
				then if to_int((if is_ability_classic_2() then 0.75 else if length(to_text(card.damage_2))==0 then 0.839 else 1)*length(to_text(card.rule_text_2))+(if is_ability_classic_1() then 0.75 else if length(to_text(card.damage_1))==0 then 0.839 else 1)*length(to_text(if is_bad_baby() then card.rule_reminder_1_1 else card.rule_text_1)))<=269 then 350
				else 350-to_int(0.089*(((if is_ability_classic_2() then 0.75 else if length(to_text(card.damage_2))==0 then 0.839 else 1)*length(to_text(card.rule_text_2)))-((if is_ability_classic_1() then 0.75 else if length(to_text(card.damage_1))==0 then 0.839 else 1)*length(to_text(if is_bad_baby() then card.rule_reminder_1_1 else card.rule_text_1)))))
			else if (if is_ability_classic_2() then 0.77 else if length(to_text(card.damage_2))==0 then 0.83 else 1)*length(to_text(card.rule_text_2))+(if is_ability_classic_1() then 0.77 else if length(to_text(card.damage_1))==0 then 0.83 else 1)*length(to_text(if is_bad_baby() then card.rule_reminder_1_1 else card.rule_text_1))>=269 then 353-0.0153*((if is_ability_classic_2() then 0.77 else if length(to_text(card.damage_2))==0 then 0.83 else 1)*length(to_text(card.rule_text_2))-(if is_ability_classic_1() then 0.77 else if length(to_text(card.damage_1))==0 then 0.83 else 1)*length(to_text(if is_bad_baby() then card.rule_reminder_1_1 else card.rule_text_1))) else 354
		else if styling.Card_Face=="Neo" then 333 else 335 }
	divider_height_2 := { if styling.Card_Face=="Neo" then if attack_no()==3 then 375 else if attack_no()==2 then 415 else 419 else if attack_no()==3 then 378 else 416 }
	bottom_height := { if attack_no()==2 or not(styling.Card_Face=="Neo") then 421 else 419 }
	############################## Three equations dependent upon styling options to modify filter text for the classic face to change card color
	rule_text_filter_1 := { text_filter(value) } +
		remove_tag@(tag: "<color") +
		replace@(match: "<b>", replace: { if is_ability_classic_1() then "<b><color:"+ability_color()+">" else "<b>" } ) +
		replace@(match: "</b>", replace: { if not(is_ability_classic_1()) then "</b>" else "</b></color>" })
	rule_text_filter_2 := { text_filter(value) } +
		remove_tag@(tag: "<color") +
		replace@(match: "<b>", replace: { if is_ability_classic_2() then "<b><color:"+ability_color()+">" else "<b>" } ) +
		replace@(match: "</b>", replace: { if not(is_ability_classic_2()) then "</b>" else "</b></color>" })
	rule_text_filter_3 := { text_filter(value) } +
		remove_tag@(tag: "<color") +
		replace@(match: "<b>", replace: { if is_ability_classic_3() then "<b><color:"+ability_color()+">" else "<b>" } ) +
		replace@(match: "</b>", replace: { if not(is_ability_classic_3()) then "</b>" else "</b></color>" })
	decolor_text_1 := { (card.rule_text_1) } + remove_tag@(tag: "<color")
	decolor_text_2 := { (card.rule_text_2) } + remove_tag@(tag: "<color")
	decolor_text_3 := { (card.rule_text_3) } + remove_tag@(tag: "<color")
	#################Determines spacing for reminder text at the top (equals out left and right)
	evo_field_width_1 := { if contains(styling.Automated_Text_Usage, match: "Evolution Reminder") then fun_decompress(card_style.evolution_reminder_1.content_width)
		else fun_decompress(card_style.evolution_text_1.content_width) }
	evo_field_width_evo := { fun_decompress(card_style.evolution_entry.content_width) }
	evo_field_width_2 := { if contains(styling.Automated_Text_Usage, match: "Evolution Reminder") then fun_decompress(card_style.evolution_reminder_2.content_width)
		else fun_decompress(card_style.evolution_text_2.content_width) }
	evo_total_width := { (if evo_field_width_1()<=10 then 10 else evo_field_width_1()) +
		(if contains(styling.Automated_Text_Usage, match: "Evolution Reminder") then if evo_field_width_evo()<=10 then 10 else evo_field_width_evo() else 0) +
		(if evo_field_width_2()<=10 then 10 else evo_field_width_2()) }
	evo_goal := { 250-(if card.card_type=="Dual-Type" and card.dual_blend_type=="Steam Siege" then 7 else 0) }
	evo_width_1 := { if evo_field_width_1()<=10 then 10
			else if evo_total_width()>=evo_goal() then evo_goal()*(evo_field_width_1()/evo_total_width())
			else evo_field_width_1() }
	evo_width_evo := { if evo_field_width_evo()<=10 then 10
			else if evo_total_width()>=evo_goal() then evo_goal()*(evo_field_width_evo()/evo_total_width())
			else evo_field_width_evo() }
	evo_width_2 := { if evo_field_width_2()<=50 then 50
		else if evo_total_width()>=evo_goal() then evo_goal()*(evo_field_width_2()/evo_total_width())
		else evo_field_width_2()+23 }
	###################################################### Functions to centralize information for all text fields allowing two-tone & outline texts
	#######Card Name (remder size)
	card_name_left := { x_left(if is_pokemon() then if stage()=="Basic" or (stage()=="Baby" and styling.Card_Face=="Neo") then 34 else 97 else if is_trainer() then 40 else 25) }
	card_name_top := { y_top(if is_pokemon() then if styling.Card_Face=="Neo" then 35 else 39 else if is_trainer() then 92 else 377) }
	card_name_width := { fun_expand_size(if is_pokemon() then if stage()=="Basic" then if fun_decompress(card_style.hp.content_width)>=10 then 266-(if card.card_type=="Dual-Type" then energy_left_difference() else 0)-fun_decompress(card_style.hp.content_width) else 251-(if card.card_type=="Dual-Type" then energy_left_difference() else 0) else if fun_decompress(card_style.hp.content_width)>=10 then 203-(if card.card_type=="Dual-Type" then energy_left_difference() else 0)-fun_decompress(card_style.hp.content_width) else 188-(if card.card_type=="Dual-Type" then energy_left_difference() else 0)
		else if is_trainer() then if card.trainer=="Tool" or card.trainer=="Stadium" or card.trainer=="Supporter" then 293-fun_decompress(card_style.title_reminder_1_1.content_width) else if fun_decompress(card_style.hp.content_width)>=10 then 281.5-fun_decompress(card_style.hp.content_width) else if styling.Card_Face=="Neo" then 279 else 272	else if styling.Card_Face=="Classic" then 318
		else if fun_decompress(card_style.card_name.content_width)>=50 and fun_decompress(card_style.card_name.content_width)<223 then fun_decompress(card_style.card_name.content_width)+7.75 
		else if fun_decompress(card_style.card_name.content_width)>=223 then 230 
		else 60) }
	card_name_height := { fun_expand_size(if is_energy() and not(card.energy_type=="Special") then 0 else 24) }
	card_name_visible := { if is_energy() and not(card.energy_type=="Special") then "no" else "yes" }
	card_name_outline_blur := { card_name_visible() and is_outline() and not(is_not_blur()) }
	card_name_outline_visible := { card_name_visible() and is_outline() and set.resolution=="large" and is_not_blur() }
	card_name_font := { if styling.Card_Face=="Neo" or is_energy() or is_pokemon() then "PokeTitleNeo" else "PokeTitleOrig" }
	card_name_weight := { "normal" }
	card_name_style := { "normal" }
	card_name_size := { fun_expand_font(if is_energy() then 15 else if is_pokemon() then 19.5 else 18.5) }
	card_name_align := { "bottom shrink-overflow" }
	card_name_symbol_font := { "pokemon-a-title" }
	card_name_symbol_size := { fun_expand_font(140) }

	#######HP Number or for Neo Trainers the (Goldenrod Game Corner) Text
	hp_left := { x_left(if is_pokemon() then if fun_decompress(card_style.hp.content_width)>=10 then 300-(if card.card_type=="Dual-Type" then energy_left_difference() else 0)-fun_decompress(card_style.hp.content_width) else 285-(if card.card_type=="Dual-Type" then energy_left_difference() else 0) else if fun_decompress(card_style.hp.content_width)>=10 then (if (is_trainer() and card.trainer=="User Defined") or styling.Card_Face=="Neo" then 333 else 323.5)-fun_decompress(card_style.hp.content_width) else if styling.Card_Face=="Neo" then 321 else 314) }
	hp_top := { y_top(if is_pokemon() then if styling.Card_Face=="Neo" then 30 else 38 else if not(styling.Card_Face=="Neo") and card.trainer=="User Defined" then 82 else 94) }
	hp_width := { fun_expand_size(if is_pokemon() then if fun_decompress(card_style.hp.content_width)>=10 then fun_decompress(card_style.hp.content_width)+6.5 else 15 else if fun_decompress(card_style.hp.content_width)>=10 then fun_decompress(card_style.hp.content_width)+(if styling.Card_Face=="Neo" then 3 else if card.trainer=="User Defined" then 1 else 6.5) else 15) }
	hp_height := { fun_expand_size(if is_pokemon() then 24 else if is_trainer() and card.trainer=="Item" then if styling.Card_Face=="Neo" then 19 else 24 else if is_trainer() and card.trainer=="User Defined" then 19 else 0) }
	hp_size := { fun_expand_font(if is_trainer() then if styling.Card_Face=="Neo" then 9.5 else if card.trainer=="User Defined" then 12.5 else 18.5 else if styling.Card_Face=="Neo" then 12.5 else 17) }
	hp_font := { if is_trainer() and (card.trainer=="User Defined" or styling.Card_Face=="Neo") then "Humanist521BT" else "PokeTitleNeo" }
	hp_visible := { if is_pokemon() or (is_trainer() and ((card.trainer=="Item" or card.trainer=="User Defined") or styling.Card_Face=="Neo")) then true else false }
	hp_outline_visible := { hp_visible() and is_outline() and is_not_blur() }
	hp_outline_blur := { hp_visible() and is_outline() and not(is_not_blur()) }
	hp_weight := { "normal" }
	hp_style := { "normal" }
	hp_align := { "bottom right shrink-overflow" }
	hp_color := { if is_pokemon() then if styling.Card_Face=="Neo" then if is_wt_top() then rgb(255,255,255) else rgb(0,0,0) else if contains(card.text_options_1, match: "HP Color the Same as Pokemon Power") then ability_color() else rgb(198,34,12) else if is_trainer() then if styling.Card_Face=="Classic" then rgb(198,34,12) else rgb(0,0,0) else rgb(0,0,0) }

	#######Pokedex text entry
	pokedex1_left := { x_left(if styling.Card_Face=="Neo" then 69 else 55) }
	pokedex1_top := { y_top(if styling.Card_Face=="Neo" then 275 else 277) }
	pokedex1_width := { fun_expand_size(if styling.Card_Face=="Neo" then 227 else 260) }
	pokedex1_height := { fun_expand_size(if is_pokemon() and not(contains(card.art_options, match: "Full Art")) then 16 else 0) }
	pokedex1_align := { "middle center shrink-overflow" }
	pokedex1_visible := { is_pokemon() and not(contains(card.art_options, match: "Full Art")) }
	pokedex1_outline_visible := { pokedex1_visible() and is_outline() and is_not_blur() }
	pokedex1_outline_blur := { pokedex1_visible() and is_outline() and not(is_not_blur()) }
	pokedex1_two_tone_visible := { pokedex1_visible() and is_two_tone() }
	pokedex1_font := { "Humanist521BT" }
	pokedex1_weight := { "bold" }
	pokedex1_style := { "italic" }
	pokedex1_size := { fun_expand_font(if styling.Card_Face=="Neo" then 8.7 else 9) }
	pokedex1_color := { rgb(0,0,0) }

	#######Pokedex code entry for Gym Pokemon
	pokedex2_left := { x_left(25) }
	pokedex2_top := { y_top(471) }
	pokedex2_width := { fun_expand_size(100) }
	pokedex2_height := { fun_expand_size(if is_pokemon() and styling.Card_Face=="Gym" then 10 else 0) }
	pokedex2_align := { "middle left shrink-overflow" }
	pokedex2_visible := { is_pokemon() and styling.Card_Face=="Gym" }
	pokedex2_outline_visible := { pokedex2_visible() and styling.Card_Face=="Gym" and is_outline() and is_not_blur() }
	pokedex2_outline_blur := { pokedex2_visible() and styling.Card_Face=="Gym" and is_outline() and not(is_not_blur()) }
	pokedex2_two_tone_visible := { pokedex2_visible() and styling.Card_Face=="Gym" and is_two_tone() }
	pokedex2_font := { "Humanist521BT" }
	pokedex2_weight := { "bold" }
	pokedex2_style := { "italic" }
	pokedex2_size := { fun_expand_font(8) }
	pokedex2_color := { if styling.Card_Face=="Gym" and is_two_tone() then rgba(0,0,0,0) else if styling.Card_Face=="Gym" and is_wt_top() then rgb(255,255,255) else rgb(0,0,0) }

	#######Reminder text explaining what this pokemone evolved from
	evolution_left := { x_left(if styling.Card_Face=="Neo" then if stage()=="Baby" then 35 else 82 else 79) }
	evolution_top := { y_top(if styling.Card_Face=="Neo" then if stage()=="Baby" then 332 else 14 else 17) }
	evolution_width := { fun_expand_size(evo_width_1()) }
	evolution_size := { fun_expand_font(7.8) }
	evolution_font := { "Humanist521BT" }
	evolution_weight := { "bold" }
	evolution_style := { "italic" }
	evolution_align := { "bottom left shrink-overflow" }
	evolution_color := { if stage()=="Baby" and styling.Card_Face=="Neo" then if is_two_tone() then rgba(0,0,0,0) else if is_wt_text() then rgb(255,255,255) else rgb(0,0,0) else if is_wt_top() then rgb(255,255,255) else rgb(0,0,0) }
	evolution_visible := { is_pokemon() and not(stage()=="Basic") }
	evolution_outline_visible := { evolution_visible() and is_outline() and is_not_blur() }
	evolution_outline_blur := { evolution_visible() and is_outline() and not(is_not_blur()) }
	evolution_outline_separator := { if contains(styling.Automated_Text_Usage, match: "Evolution Reminder") then card.evolution_reminder_1 else card.evolution_text_1 }
	evolution_two_tone_visible := { evolution_visible() and is_two_tone() and stage()=="Baby" and styling.Card_Face=="Neo" }
	evolution_height := { fun_expand_size(if evolution_visible() then 15 else 0) }
	evolution_rem_visible := { evolution_visible() and contains(styling.Automated_Text_Usage, match: "Evolution Reminder") }
	evolution_rem_height := { fun_expand_size(if evolution_rem_visible() then 15 else 0) }
	evolution_txt_visible := { evolution_visible() and not(contains(styling.Automated_Text_Usage, match: "Evolution Reminder")) }
	evolution_txt_height := { fun_expand_size(if evolution_txt_visible() then 15 else 0) }
	evo_left := { x_left(if styling.Card_Face=="Neo" then if stage()=="Baby" then 35+evo_width_1() else 82+evo_width_1() else 79+evo_width_1()) }
	evo_width := { fun_expand_size(evo_width_evo()) }
	evo_height := { fun_expand_size(if contains(styling.Automated_Text_Usage, match: "Evolution Reminder") and is_pokemon() and not(stage()=="Basic") then 15 else 0) }
	evo_visible := { if is_pokemon() and not(stage()=="Basic") then true else false }
	evo_outline_visible := { evo_visible() and is_outline() and is_not_blur() }
	evo_outline_blur := { evo_visible() and is_outline() and not(is_not_blur()) }
	evo_two_tone_visible := { evo_visible() and is_two_tone() and stage()=="Baby" and styling.Card_Face=="Neo" }

	#######Reminder text above the energy symbol and pokemon trainer type line
	evorule_left := { x_left(if stage()=="Baby" and styling.Card_Face=="Neo" then 44+evo_width_1()+(if contains(styling.Automated_Text_Usage, match: "Evolution Reminder") then evo_width_evo() else 0)
		else 340-evo_width_2()-(if card.card_type=="Dual-Type" and card.dual_blend_type=="Steam Siege" then 7 else 0)) }
	evorule_top := { y_top(if styling.Card_Face=="Neo" then if stage()=="Baby" then 332 else 14 else 17) }
	evorule_width := { fun_expand_size(evo_width_2()) }
	evorule_font := { if stage()=="Baby" and styling.Card_Face=="Neo" then "Humanist521BT" else "GillSans" }
	evorule_weight := { if is_pokemon() and stage()=="Baby" and styling.Card_Face=="Neo" then "Bold" else "normal" }
	evorule_style := { "normal" }
	evorule_size := { fun_expand_font(if stage()=="Baby" and styling.Card_Face=="Neo" then 7.8 else 8) }
	evorule_align := { if is_pokemon() and stage()=="Baby" and styling.Card_Face=="Neo" then "bottom left shrink-overflow" else "bottom right shrink-overflow" }
	evorule_color := { if stage()=="Baby" and styling.Card_Face=="Neo" then if is_two_tone() then rgba(0,0,0,0) else if is_wt_text() then rgb(255,255,255) else rgb(0,0,0) else if is_wt_top() then rgb(255,255,255) else rgb(0,0,0) }
	evorule_visible := { is_pokemon() }
	evorule_outline_visible := { evorule_visible() and is_outline() and is_not_blur() }
	evorule_outline_blur := { evorule_visible() and is_outline() and not(is_not_blur()) }
	evorule_outline_separator := { if contains(styling.Automated_Text_Usage, match: "Evolution Reminder") then card.evolution_reminder_2 else card.evolution_text_2 }
	evorule_two_tone_visible := { evorule_visible() and is_two_tone() and stage()=="Baby" and styling.Card_Face=="Neo" }
	evorule_height := { fun_expand_size(if evorule_visible() then 15 else 0) }
	evorule_rem_visible := { evorule_visible() and contains(styling.Automated_Text_Usage, match: "Evolution Reminder") }
	evorule_rem_height := { fun_expand_size(if evorule_rem_visible() then 15 else 0) }
	evorule_txt_visible := { evorule_visible() and not(contains(styling.Automated_Text_Usage, match: "Evolution Reminder")) }
	evorule_txt_height := { fun_expand_size(if evorule_txt_visible() then 15 else 0) }

	#######Pokemon Stage Title for Neo & basic pokemon for Classic / Card Sub-Type for Trainers / Special Energy Sub-Bar
	title_1_left := { x_left(if is_trainer() then 333-fun_decompress(card_style.title_reminder_1_1.content_width) 
		else if is_energy() then if fun_decompress(card_style.card_name.content_width)>=50 and fun_decompress(card_style.card_name.content_width)<223 then fun_decompress(card_style.card_name.content_width)+30.75 else if fun_decompress(card_style.card_name.content_width)>=223 then 260 else 83 
		else if styling.Card_Face=="Neo" then 253 else if stage()=="Basic" then 37 else 36) }
	title_1_top := { y_top(if is_trainer() then if styling.Card_Face=="Neo" then 93 else 82 
		else if is_energy() then 376 
		else if styling.Card_Face=="Neo" then 51 else if stage()=="Basic" then 26 else 31) }
	title_1_width := { fun_expand_size(if is_trainer() then fun_decompress(card_style.title_reminder_1_1.content_width)+1 else if is_energy() then 80 else if styling.Card_Face=="Neo" then 75 else 67) }
	title_1_font := { "Humanist521BT" }
	title_1_weight := { if is_trainer() or is_energy() then "normal" else "bold" }
	title_1_style := { if is_pokemon() and styling.Card_Face=="Neo" then "italic" else "normal" }
	title_1_size := { fun_expand_font(if is_trainer() then 12.5 else if is_energy() then 10 else if styling.Card_Face=="Neo" then 7 else 8) }
	title_1_align := { if styling.Card_Face=="Neo" or is_trainer() or is_energy() then "bottom right shrink-overflow" else "left bottom shrink-overflow" }
	title_1_color := { if not(styling.Card_Face=="Neo") and stage()=="Basic" and is_wt_top() and is_pokemon() then rgb(255,255,255) else rgb(0,0,0) }
	title_1_outline_visible := { (is_trainer() or is_energy() or (is_pokemon() and not(styling.Card_Face=="Neo") and stage()=="Basic")) and is_outline() and is_not_blur() }
	title_1_outline_blur := { (is_trainer() or is_energy() or (is_pokemon() and not(styling.Card_Face=="Neo") and stage()=="Basic")) and is_outline() and not(is_not_blur()) }
	title_1_outline_separator := { if is_trainer() or is_energy() or contains(styling.Automated_Text_Usage, match: "Stage Title") then card.title_reminder_1_1 else card.title_text_1 }
	title_1_height := { fun_expand_size(if is_trainer() then 19 else if is_energy() and card.energy_type=="Special" and not(styling.Card_Face=="Classic") then 24 else if is_pokemon() and (styling.Card_Face=="Neo" or stage()=="Basic") then 10 else 0) }
	title_rem_1_visible := { is_trainer() or is_energy() or (is_pokemon() and contains(styling.Automated_Text_Usage, match: "Stage Title") and (styling.Card_Face=="Neo" or stage()=="Basic")) }
	title_rem_1_height := { fun_expand_size(if is_trainer() then 19 else if is_energy() and card.energy_type=="Special" and not(styling.Card_Face=="Classic") then 24 else if is_pokemon() and (styling.Card_Face=="Neo" or stage()=="Basic") and contains(styling.Automated_Text_Usage, match: "Stage Title") then 10 else 0) }
	title_txt_1_visible := { is_pokemon() and not(contains(styling.Automated_Text_Usage, match: "Stage Title")) and (styling.Card_Face=="Neo" or stage()=="Basic") }
	title_txt_1_height := { fun_expand_size( if (is_pokemon() and not(styling.Card_Face=="Neo") and stage()=="Basic" and not(contains(styling.Automated_Text_Usage, match: "Stage Title"))) then 10 else 0) }

	#######Pokemon Stage Title for evolved pokemon - Classic
	title_2_left := { x_left(if styling.Card_Face=="Neo" then 20 else 36) }
	title_2_top := { y_top(if styling.Card_Face=="Neo" then 20 else 31) }
	title_2_width := { fun_expand_size(if styling.Card_Face=="Neo" then 37 else 67) }
	title_2_font := { "Humanist521BDCdn" }
	title_2_weight := { "normal" }
	title_2_style := { "normal" }
	title_2_size := { fun_expand_font(8) }
	title_2_align := { if styling.Card_Face=="Neo" then "bottom left shrink-overflow" else "left bottom shrink-overflow" }
	title_2_visible := { is_pokemon() and (stage()=="Stage 1" or stage()=="Stage 2" or (stage()=="Baby" and not(styling.Card_Face=="Neo"))) }
	title_2_outline_visible := { title_2_visible() and (is_outline() or is_wt_top()) and is_not_blur() }
	title_2_outline_blur := { title_2_visible() and (is_outline() or is_wt_top()) and not(is_not_blur()) }
	title_2_outline_separator := { if contains(styling.Automated_Text_Usage, match: "Stage Title") then card.title_reminder_2_1 else card.title_text_2 }
	#################all title 2 outline fields are place in the z-index -5 to be below the frame
	title_2_height := { fun_expand_size(if title_2_visible() then 10 else 0) }
	title_rem_2_visible := { title_2_visible() and contains(styling.Automated_Text_Usage, match: "Stage Title") }
	title_rem_2_height := { fun_expand_size(if title_rem_2_visible() then 10 else 0) }
	title_txt_2_visible := { title_2_visible() and not(contains(styling.Automated_Text_Usage, match: "Stage Title")) }
	title_txt_2_height := { fun_expand_size(if title_txt_2_visible() then 10 else 0) }

	#######Reminder text that Baby Pokemon are basic Pokemon as well
	ability_1_left := { x_left(82) }
	ability_1_top := { y_top(14) }
	ability_1_width := { fun_expand_size(258-(if card.card_type=="Dual-Type" and card.dual_blend_type=="Steam Siege" then 7 else 0)) }
	ability_1_size := { fun_expand_font(7.8) }
	ability_1_font := { "Humanist521BT" }
	ability_1_weight := { "bold" }
	ability_1_style := { "normal" }
	ability_1_align := { "bottom right shrink-overflow" }
	ability_1_color := { if is_wt_top() then rgb(255,255,255) else rgb(0,0,0) }
	ability_1_visible := { is_pokemon() and stage()=="Baby" and styling.Card_Face=="Neo" }
	ability_1_outline_visible := { ability_1_visible() and is_outline() and is_not_blur() }
	ability_1_outline_blur := { ability_1_visible() and is_outline() and not(is_not_blur()) }
	ability_1_outline_separator := { if contains(styling.Automated_Text_Usage, match: "Evolution Reminder") then card.ability_reminder_1_1 else card.ability_text_1 }
	ability_1_height := { fun_expand_size(if ability_1_visible() then 15 else 0) }
	ability_rem_1_visible := { ability_1_visible() and contains(styling.Automated_Text_Usage, match: "Evolution Reminder") }
	ability_rem_1_height := { fun_expand_size(if ability_rem_1_visible() then 15 else 0) }
	ability_txt_1_visible := { ability_1_visible() and not(contains(styling.Automated_Text_Usage, match: "Evolution Reminder")) }
	ability_txt_1_height := { fun_expand_size(if ability_txt_1_visible() then 15 else 0) }

	#######Reminder text about the Shiny Pokemon Rule
	ability_2_left := { x_left(82) }
	ability_2_top := { y_top(14) }
	ability_2_width := { fun_expand_size(258-(if card.card_type=="Dual-Type" and card.dual_blend_type=="Steam Siege" then 7 else 0)) }
	ability_2_size := { fun_expand_font(7.8) }
	ability_2_font := { "Humanist521BT" }
	ability_2_weight := { "normal" }
	ability_2_style := { "normal" }
	ability_2_align := { "bottom right shrink-overflow" }
	ability_2_color := { if is_wt_top() then rgb(255,255,255) else rgb(0,0,0) }
	ability_2_visible := { is_pokemon() and contains(card.general_options_01, match: "Shiny Pokemon") and stage()=="Basic" }
	ability_2_outline_visible := { ability_2_visible() and is_outline() and is_not_blur() }
	ability_2_outline_blur := { ability_2_visible() and is_outline() and not(is_not_blur()) }
	ability_2_outline_separator := { if contains(styling.Automated_Text_Usage, match: "Shiny Pokemon Reminder") then card.ability_reminder_2_1 else card.ability_text_2 }
	ability_2_height := { fun_expand_size(if ability_2_visible() then 15 else 0) }
	ability_rem_2_visible := { ability_2_visible() and contains(styling.Automated_Text_Usage, match: "Shiny Pokemon Reminder") }
	ability_rem_2_height := { fun_expand_size(if ability_rem_2_visible() then 15 else 0) }
	ability_txt_2_visible := { ability_2_visible() and not(contains(styling.Automated_Text_Usage, match: "Shiny Pokemon Reminder")) }
	ability_txt_2_height := { fun_expand_size(if ability_txt_2_visible() then 15 else 0) }

	#######Multi-line reminder text explaining the baby pokemon's auto defense ability and explaining how to use the different trainer cards.
	special_rule_left := { x_left(if is_pokemon() and stage()=="Baby" and styling.Card_Face=="Neo" then 98 else 54) }
	special_rule_top := { y_top(if is_pokemon() and stage()=="Baby" and styling.Card_Face=="Neo" then 299 else 319) }
	special_rule_width := { fun_expand_size(if is_pokemon() and stage()=="Baby" and styling.Card_Face=="Neo" then 234 else 262) }
	special_rule_align := { "middle left" }
	special_rule_font := { "Humanist521BDCdn" }
	special_rule_weight := { "normal" }
	special_rule_style := { if is_pokemon() and stage()=="Baby" and styling.Card_Face=="Neo" then "italic" else "normal" }
	special_rule_size := { fun_expand_font(if is_pokemon() and stage()=="Baby" and styling.Card_Face=="Neo" then 6 else 9) }
	special_rule_lh_soft := { if is_pokemon() and stage()=="Baby" and styling.Card_Face=="Neo" then 1.1 else 0.8 }
	special_rule_color := { if is_pokemon() and stage()=="Baby" and styling.Card_Face=="Neo" then rgb(198,34,12) else rgb(0,0,0) }
	special_rule_outline_visible := { (is_trainer() and not(card.trainer=="Item")) and is_outline() and is_not_blur() }
	special_rule_outline_blur := { (is_trainer() and not(card.trainer=="Item")) and is_outline() and not(is_not_blur()) }
	special_rule_outline_separator := { if (is_trainer() and (card.trainer=="User Defined" or not(contains(styling.Automated_Text_Usage, match: "Trainer Play Rule Reminder")))) or (is_pokemon() and not(contains(styling.Automated_Text_Usage, match: "Baby Stage Rule Reminder")) and styling.Card_Face=="Neo") then card.special_rule_text_1 else card.special_rule_reminder_1_1 }
	special_rule_height := { fun_expand_size(if is_pokemon() and stage()=="Baby" and styling.Card_Face=="Neo" then 30
		else if is_trainer() and (card.trainer=="Tool" or card.trainer=="Stadium" or card.trainer=="Supporter") then 34.4/3*to_int((length(to_text(special_rule_outline_separator()))-1)/50+1)+6 
		else 0) }
	special_rule_rem_visible := { (is_pokemon() and stage()=="Baby" and contains(styling.Automated_Text_Usage, match: "Baby Stage Rule Reminder") and styling.Card_Face=="Neo") or 
		(is_trainer() and (card.trainer=="Tool" or card.trainer=="Stadium" or card.trainer=="Supporter") and contains(styling.Automated_Text_Usage, match: "Trainer Play Rule Reminder")) }
	special_rule_rem_height := { fun_expand_size(if is_pokemon() and stage()=="Baby" and contains(styling.Automated_Text_Usage, match: "Baby Stage Rule Reminder") and styling.Card_Face=="Neo" then 30
		else if is_trainer() and (card.trainer=="Tool" or card.trainer=="Stadium" or card.trainer=="Supporter") and contains(styling.Automated_Text_Usage, match: "Trainer Play Rule Reminder") then 34.4/3*to_int((length(to_text(card.special_rule_reminder_1_1))-1)/50+1)+6 
		else 0) }
	special_rule_txt_visible := { (is_pokemon() and stage()=="Baby" and styling.Card_Face=="Neo" and not(contains(styling.Automated_Text_Usage, match: "Baby Stage Rule Reminder"))) or 
		(is_trainer() and (((card.trainer=="Tool" or card.trainer=="Stadium" or card.trainer=="Supporter") and not(contains(styling.Automated_Text_Usage, match: "Trainer Play Rule Reminder"))) or card.trainer=="User Defined")) }
	special_rule_txt_height := { fun_expand_size(if is_pokemon() and stage()=="Baby" and not(contains(styling.Automated_Text_Usage, match: "Baby Stage Rule Reminder")) then 30 
		else if is_trainer() and (((card.trainer=="Tool" or card.trainer=="Stadium" or card.trainer=="Supporter") and not(contains(styling.Automated_Text_Usage, match: "Trainer Play Rule Reminder"))) or card.trainer=="User Defined") then 34.4/3*to_int((length(to_text(card.special_rule_text_1))-1)/50+1)+6 
		else 0) }

	#######Weakness/Resistance/Retreat Cost Title Lines
	weak_ov_left := { x_left(if styling.Card_Face=="Classic" then 40 else if styling.Card_Face=="Gym" then 25 else 36) }
	weak_ov_top := { y_top(if styling.Card_Face=="Classic" then 421 else if styling.Card_Face=="Gym" then 429 else 421) }
	weak_ov_width := { fun_expand_size(60) }
	weak_ov_height := { fun_expand_size(12) }
	res_ov_left := { x_left(if styling.Card_Face=="Classic" then 165 else if styling.Card_Face=="Gym" then 126 else 159) }
	res_ov_top := { y_top(if styling.Card_Face=="Classic" then 422 else if styling.Card_Face=="Gym" then 429 else 421) }
	res_ov_width := { fun_expand_size(60) }
	res_ov_height := { fun_expand_size(12) }
	ret_ov_left := { x_left(if styling.Card_Face=="Classic" then 280 else if styling.Card_Face=="Gym" then 25 else 276) }
	ret_ov_top := { y_top(if styling.Card_Face=="Classic" then 421 else if styling.Card_Face=="Gym" then 449 else 421) }
	ret_ov_width := { fun_expand_size(140) }
	ret_ov_height := { fun_expand_size(14) }
	wrr_ov_size := { fun_expand_font(8) }
	wrr_ov_visible := { if is_pokemon() then true else false }
	wrr_ov_outline_visible := { wrr_ov_visible() and is_outline() and is_not_blur() }
	wrr_ov_outline_blur := { wrr_ov_visible() and is_outline() and not(is_not_blur()) }
	wrr_ov_align := { "left middle" }
	wrr_ov_font := { "GillSansCdn" }
	wrr_ov_weight := { "bold" }
	wrr_ov_style := { "normal" }

	#######Weakness & Special Energy Color Field
	weak_left := { x_left(if is_pokemon() then if styling.Card_Face=="Gym" then 75 else if styling.Card_Face=="Neo" then 49 else 53 else 33) }
	weak_top := { y_top(if is_pokemon() then if styling.Card_Face=="Gym" then 424 else 431 else 22) }
	weak_width := { fun_expand_size(if is_pokemon() then if styling.Card_Face=="Gym" then 46 else 55 else 79) }
	weak_height := { fun_expand_size(if is_pokemon() then if styling.Card_Face=="Gym" then 18 else 23 else if is_energy() and card.energy_type=="Special" then 51 else 0) }
	weak_visible := { if is_pokemon() or (is_energy() and card.energy_type=="Special") then true else false }
	weak_font := { "PokeTitleOrig" }
	weak_outline_visible := { weak_visible() and is_outline() and is_not_blur() }
	weak_outline_blur := { weak_visible() and is_outline() and not(is_not_blur()) }
	weak_size := { fun_expand_font(if is_pokemon() then 8 else 16) }
	weak_weight := { "normal" }
	weak_style := { "normal" }
	weak_symbol_font := { "pokemon-a-energy" }
	weak_symbol_size := { fun_expand_font(if is_energy() then if fun_decompress(card_style.weakness.content_width)>=57 then 38 else 42 else if styling.Card_Face=="Gym" then if is_outline() then 18 else 16 else if is_outline() then 22 else 20) }
	weak_align := { if is_pokemon() and styling.Card_Face=="Gym" then "middle left" else "bottom left" }

	#######Resistance
	resist_left := { x_left(if styling.Card_Face=="Classic" then 176 else if styling.Card_Face=="Neo" then 172 else 185) }
	resist_top := { y_top(if styling.Card_Face=="Gym" then 424 else 431) }
	resist_width := { fun_expand_size(if styling.Card_Face=="Gym" then 46 else 58) }
	resist_height := { fun_expand_size(if is_pokemon() then if styling.Card_Face=="Gym" then 18 else 23 else 0) }
	resist_visible := { if is_pokemon() then true else false}
	resist_font := { "PokeTitleOrig" }
	resist_outline_visible := { resist_visible() and is_outline() and is_not_blur() }
	resist_outline_blur := { resist_visible() and is_outline() and not(is_not_blur()) }
	resist_size := { fun_expand_font(if styling.Card_Face=="Neo" then 9 else 8) }
	resist_weight := { "normal" }
	resist_style := { "normal" }
	resist_symbol_font := { "pokemon-a-energy" }
	resist_symbol_size := { fun_expand_font(if styling.Card_Face=="Gym" then if is_outline() then 18 else 16 else if is_outline() then 22 else 20) }
	resist_align := { if styling.Card_Face=="Gym" then "bottom left" else "middle left" }

	#######Retreat Cost
	retreat_left := { x_left(if styling.Card_Face=="Classic" then 272 else if styling.Card_Face=="Neo" then 270 else 136) }
	retreat_top := { y_top(if styling.Card_Face=="Classic" then 431 else if styling.Card_Face=="Neo" then 424 else 445) }
	retreat_width := { fun_expand_size(if styling.Card_Face=="Neo" then 72 else 68) }
	retreat_height := { fun_expand_size(if is_pokemon() then if styling.Card_Face=="Gym" then 18 else if styling.Card_Face=="Classic" then 23 else 30 else 0) }
	retreat_visible := { if is_pokemon() then true else false}
	retreat_symbol_font := { "pokemon-a-energy" }
	retreat_symbol_size := { fun_expand_font(if styling.Card_Face=="Gym" then if is_outline() then 18 else 16 else if is_outline() then 21.5 else 19.5) }
	retreat_align := { if styling.Card_Face=="Gym" then "bottom left shrink-overflow" else "bottom center shrink-overflow" }

	######Flavor Text
	flavor_left := { x_left(if styling.Card_Face=="Neo" then 42 else 41) }
	flavor_top := { y_top(459) }
	flavor_width := { fun_expand_size(if styling.Card_Face=="Neo" then 284 else 290) }
	flavor_height := { fun_expand_size(if is_pokemon() and (styling.Card_Face=="Classic" or styling.Card_Face=="Neo") then 20 else 0) }
	flavor_visible := { if is_pokemon() and (styling.Card_Face=="Classic" or styling.Card_Face=="Neo") then true else false }
	flavor_align := { "middle left shrink-overflow" }
	flavor_font := { "Humanist521BT" }
	flavor_outline_visible := { flavor_visible() and is_outline() and is_not_blur() }
	flavor_outline_blur := { flavor_visible() and is_outline() and not(is_not_blur()) }
	flavor_weight := { "bold" }
	flavor_style := { "italic" }
	flavor_size := { fun_expand_font(if styling.Card_Face=="Neo" then 7.8 else 8.9) }
	flavor_lh_soft := { if styling.Card_Face=="Neo" then 0.8 else 0.9 }

	#######Artist
	ill_left := { x_left(20) }
	ill_top := { y_top(if is_energy() then 479 else 484) }
	ill_width := { fun_expand_size(98) }
	ill_height := { fun_expand_size(10) }
	ill_size := { fun_expand_font(6) }
	ill_font := { "GillSansCdn" }
	ill_weight := { "bold" }
	ill_style := { "normal" }
	ill_align := { "bottom left" }
	ill_color := { if is_two_tone() then rgba(0,0,0,0) 
		else if is_wt_top() and not(card.card_type=="Dual-Type") then rgb(255,255,255)
		else if card.card_type=="Dual-Type" and not(is_outline()) and (is_dark_1() and not(card.dual_blend_type=="Dark EX Series")) or (is_dark_2() and card.dual_blend_type=="Dark EX Series") then rgb(255,255,255)
		else rgb(0,0,0) }
	ill_outline_separator := { if contains(card.text_options_1, match: "Use Primary Set Artist") then set.artist else card.illustrator }
	ill_outline_visible := { is_outline() and not(is_energy() and card.energy_type=="Basic" and not(basic_energy_suffix()=="Special" or basic_energy_suffix()=="User Image")) and is_not_blur() }
	ill_outline_blur := { is_outline() and not(is_energy() and card.energy_type=="Basic" and not(basic_energy_suffix()=="Special" or basic_energy_suffix()=="User Image")) and not(is_not_blur()) }

	#######Copyright
	copy_left := { x_left(118) }
	copy_top := { y_top(if is_energy() then 479 else 485) }
	copy_width := { fun_expand_size(172) }
	copy_height := { fun_expand_size(10) }
	copy_size := { fun_expand_font(6) }
	copy_font := { "GillSansCdn" }
	copy_weight := { "normal" }
	copy_style := { "normal" }
	copy_align := { "bottom center" }
	copy_color := { if is_two_tone() then rgba(0,0,0,0) 
		else if is_wt_top() and not(card.card_type=="Dual-Type") then rgb(255,255,255) 
		else if card.card_type=="Dual-Type" and not(is_outline()) and is_dark_2() then rgb(255,255,255)
		else rgb(0,0,0) }
	copy_outline_visible := { is_outline() and contains(set.visibility_options, match: "Visible Copyright on all cards") and is_not_blur() }
	copy_outline_blur := { is_outline() and contains(set.visibility_options, match: "Visible Copyright on all cards") and not(is_not_blur()) }
	copy_outline_separator := { if contains(card.text_options_1, match: "Use Primary Set Artist") then set.copyright else card.copyright }

	#######Card Number
	card_no_left := { x_left(if is_energy() then 290 else if is_trainer() then 292 else 292) }
	card_no_top := { y_top(if is_energy() then 473 else 479) }
	card_no_width := { fun_expand_size(44) }
	card_no_height := { fun_expand_size(16) }
	card_no_size := { fun_expand_font(7) }
	card_no_font := { "GillSansCdn" }
	card_no_style := { "normal" }
	card_no_weight := { "bold" }
	card_no_align := { "bottom right" }
	card_no_color := { if is_two_tone() then rgba(0,0,0,0) 
		else if rarity_color() then rgb(255,255,255) 
		else rgb(0,0,0) }
	card_no_outline_visible := { is_outline() and contains(set.visibility_options, match: "Visible Card Numbers on all cards") and is_not_blur() }
	card_no_outline_blur := { is_outline() and contains(set.visibility_options, match: "Visible Card Numbers on all cards") and not(is_not_blur()) }

	#######Rules text for trainers and energy
	rule_np_1_left := { x_left((if is_trainer() then 56 else 26)-(if styling.Card_Face=="Neo" then 2 else 0)) }
	rule_np_1_top := { y_top(if is_trainer() then if card.trainer=="Tool" or card.trainer=="Stadium" or card.trainer=="Supporter" then if contains(styling.Automated_Text_Usage, match: "Trainer Play Rule Reminder") then 320+fun_decompress(card_style.special_rule_reminder_1_1.content_height) else 320+(if fun_decompress(card_style.special_rule_text_1.content_height)==0 then 14.33 else fun_decompress(card_style.special_rule_text_1.content_height)) else if card.trainer=="User Defined" then 320+(if fun_decompress(card_style.special_rule_text_1.content_height)==0 then 14.33 else fun_decompress(card_style.special_rule_text_1.content_height)) else 312 else 402) }
	rule_np_1_width := { fun_expand_size(if is_trainer() then 262 else 309) }
	rule_np_1_height := { fun_expand_size(if is_pokemon() or (is_energy() and not(card.energy_type=="Special")) then 0 else if is_trainer() then if card.trainer=="Tool" or card.trainer=="Stadium" or card.trainer=="Supporter" then if contains(styling.Automated_Text_Usage, match: "Trainer Play Rule Reminder") then 140-fun_decompress(card_style.special_rule_reminder_1_1.content_height) else 140-(if fun_decompress(card_style.special_rule_text_1.content_height)==0 then 14.33 else fun_decompress(card_style.special_rule_text_1.content_height)) else if card.trainer=="User Defined" then 140-(if fun_decompress(card_style.special_rule_text_1.content_height)==0 then 14.33 else fun_decompress(card_style.special_rule_text_1.content_height)) else 143 else 68) }
	rule_np_1_visible := { if (is_energy() and card.energy_type=="Special") or is_trainer() then true else false }
	rule_np_1_size := { fun_expand_font(if is_energy() then 10 else if is_trainer() then 15 else if styling.Card_Face=="Neo" then 12.5 else 13.7) }
	rule_np_1_align := { if is_trainer() then if card_style.rule_np_1.content_lines>=2 then "left top" else "center top" else if card_style.rule_np_1.content_lines>=2 then "left middle" else "center middle" }
	rule_np_1_font := { if is_trainer() then "Humanist521BDCdn" else "GillSans" }
	rule_np_1_outline_visible := { rule_np_1_visible() and is_outline() and is_not_blur() }
	rule_np_1_outline_blur := { rule_np_1_visible() and is_outline() and not(is_not_blur()) }
	rule_np_1_weight := { if is_energy() then "bold" else "normal" }
	rule_np_1_style := { "normal" }
	rule_np_1_symbol_font := { "pokemon-a-rule-classic" }
	rule_np_1_symbol_font_tt := { "pokemon-a-rule-classic-behind" }
	rule_np_1_symbol_size := { fun_expand_font(if is_energy() then 11 else 20) }
	rule_np_1_lh_hard := { if is_energy() then 1 else 1.4 }
	rule_np_1_lh_soft := { if is_energy() then 0.8 else 0.8 }

	#######Attack Costs
	cost_1_left := { x_left(if is_pokemon() then 24 else 35) }
	cost_1_top := { y_top(if stage()=="Baby" then if styling.Card_Face=="Neo" then 348 else 355 else top_height()+1) }
	cost_1_width := { fun_expand_size(46) }
	cost_1_height := { fun_expand_size(if is_pokemon() and not(is_ability_classic_1()) then if stage()=="Baby" then if styling.Card_Face=="Neo" then 73 else 66 else divider_height_1()-top_height() else 0) }
	cost_1_visible := { if is_pokemon() and not(is_ability_classic_1()) then true else false }
	cost_2_left := { x_left(24) }
	cost_2_top := { y_top(divider_height_1()+1) }
	cost_2_width := { fun_expand_size(46) }
	cost_2_height := { fun_expand_size(if is_pokemon() and not(is_ability_classic_2()) and not(stage()=="Baby" and styling.Card_Face=="Neo") then divider_height_2()-divider_height_1() else 0) }
	cost_2_visible := { if is_pokemon() and not(is_ability_classic_2()) and not(stage()=="Baby" and styling.Card_Face=="Neo") then true else false }
	cost_3_left := { x_left(24) }
	cost_3_top := { y_top(divider_height_2()+1) }
	cost_3_width := { fun_expand_size(46) }
	cost_3_height := { fun_expand_size(if is_pokemon() and not(is_ability_classic_3()) and attack_no()>=2 and not(stage()=="Baby") then bottom_height()-divider_height_2() else 0) }
	cost_3_visible := { if is_pokemon() and not(is_ability_classic_3()) and attack_no()>=2 and not(stage()=="Baby") then true else false }
	cost_align := { "middle center" }
	cost_symbol_font := { "pokemon-a-energy" }
	cost_symbol_size := { fun_expand_size(21) }

	#######Attack Damage
	damage_1_left := { x_left(if styling.Card_Face=="Neo" then if length(to_text(card.damage_1))==0 then 331 else 290 else 297) }
	damage_1_top := { y_top(if stage()=="Baby" then if styling.Card_Face=="Neo" then 348 else 355 else top_height()+1) }
	damage_1_width := { fun_expand_size(if styling.Card_Face=="Neo" then if length(to_text(card.damage_1))==0 then 20 else 50 else 48) }
	damage_1_height := { fun_expand_size(if is_pokemon() and not(is_ability_classic_1()) then if stage()=="Baby" then if styling.Card_Face=="Neo" then 73 else 66 else divider_height_1()-top_height() else 0) }
	damage_1_visible := { if is_pokemon() and not(is_ability_classic_1()) then true else false }
	damage_1_outline_visible := { damage_1_visible() and is_outline() and is_not_blur() }
	damage_1_outline_blur := { damage_1_visible() and is_outline() and not(is_not_blur()) }
	damage_2_left := { x_left(if styling.Card_Face=="Neo" then if length(to_text(card.damage_2))==0 then 331 else 290 else 297) }
	damage_2_top := { y_top(divider_height_1()+1) }
	damage_2_width := { fun_expand_size(if styling.Card_Face=="Neo" then if length(to_text(card.damage_2))==0 then 20 else 50 else 48) }
	damage_2_height := { fun_expand_size(if is_pokemon() then if not(is_ability_classic_2()) and not(stage()=="Baby" and styling.Card_Face=="Neo") then divider_height_2()-divider_height_1() else 0 else 0) }
	damage_2_visible := { if is_pokemon() and not(is_ability_classic_2()) and not(stage()=="Baby" and styling.Card_Face=="Neo") then true else false }
	damage_2_outline_visible := { damage_2_visible() and is_outline() and is_not_blur() }
	damage_2_outline_blur := { damage_2_visible() and is_outline() and not(is_not_blur()) }
	damage_3_left := { x_left(if styling.Card_Face=="Neo" then if length(to_text(card.damage_3))==0 then 331 else 290 else 297) }
	damage_3_top := { y_top(divider_height_2()+1) }
	damage_3_width := { fun_expand_size(if styling.Card_Face=="Neo" then if length(to_text(card.damage_3))==0 then 20 else 50 else 48) }
	damage_3_height := { fun_expand_size(if is_pokemon() and attack_no()>=2 and not(is_ability_classic_3()) and not(stage()=="Baby") then bottom_height()-divider_height_2() else 0) }
	damage_3_visible := { if is_pokemon() then if attack_no()>=2 and not(is_ability_classic_3()) and not(stage()=="Baby") then true else false }
	damage_3_outline_visible := { damage_3_visible() and is_outline() and is_not_blur() }
	damage_3_outline_blur := { damage_3_visible() and is_outline() and not(is_not_blur()) }
	damage_align := { "middle left" }
	damage_font := { "GillSans" }
	damage_weight := { "normal" }
	damage_style := { "normal" }
	damage_size := { fun_expand_font(if styling.Card_Face=="Neo" then 22 else 20) }

	#######Attack rules text and title
	rule_1_left := { x_left(if is_ability_classic_1() then if styling.Card_Face=="Neo" then 39 else 50 else 72) }
	rule_1_top := { y_top(if is_pokemon() and stage()=="Baby" and styling.Card_Face=="Neo" then 348 else top_height()+1) }
	rule_1_width := { fun_expand_size(if is_pokemon() and styling.Card_Face=="Neo" then if is_ability_classic_1() then 292 else if length(to_text(card.damage_1))==0 then 259 else 217 else if is_pokemon() then if is_ability_classic_1() then 267 else 221 else 0) }
	rule_1_height := { fun_expand_size(if is_pokemon() then if stage()=="Baby" and styling.Card_Face=="Neo" then 73 else if is_bad_baby() then 0 else divider_height_1()-top_height() else 0) }
	rule_1_visible := { if is_pokemon() and not(is_bad_baby()) then true else false }
	rule_1_align := { if rule_line_1()<=1 then "middle center" else "middle left" }
	rule_rem_1_height := { fun_expand_size(if is_pokemon() and is_bad_baby() then divider_height_1()-top_height() else 0) }
	rule_rem_1_visible := { if is_pokemon() and is_bad_baby() then true else false }
	rule_1_outline_separator := { if is_bad_baby() then card.rule_reminder_1_1 else card.rule_text_1 }
	rule_all_1_height := { if is_bad_baby() then rule_rem_1_height() else rule_1_height() }
	rule_1_outline_visible := { (if is_bad_baby() then rule_rem_1_visible() else rule_1_visible()) and is_outline() and is_not_blur() }
	rule_1_outline_blur := { (if is_bad_baby() then rule_rem_1_visible() else rule_1_visible()) and is_outline() and not(is_not_blur()) }
	rule_1_two_tone_visible := { (if is_bad_baby() then rule_rem_1_visible() else rule_1_visible()) and is_two_tone() }
	rule_2_left := { x_left(if is_ability_classic_2() then if styling.Card_Face=="Neo" then 39 else 50 else 72) }
	rule_2_top := { y_top(divider_height_1()+1) }
	rule_2_width := { fun_expand_size(if is_pokemon() and styling.Card_Face=="Neo" then if is_ability_classic_2() then 292 else if length(to_text(card.damage_2))==0 then 259 else 217 else if is_pokemon() then if is_ability_classic_2() then 267 else 221 else 0) }
	rule_2_height := { fun_expand_size(if is_pokemon() and not(stage()=="Baby" and styling.Card_Face=="Neo") then divider_height_2()-divider_height_1() else 0) }
	rule_2_visible := { if is_pokemon() and not(stage()=="Baby" and styling.Card_Face=="Neo") then true else false }
	rule_2_outline_visible := { rule_2_visible() and is_outline() and is_not_blur() }
	rule_2_outline_blur := { rule_2_visible() and is_outline() and not(is_not_blur()) }
	rule_2_align := { if rule_line_2()<=1 then "middle center" else if styling.Card_Face=="Neo" then "middle left" else "middle left justify" }
	rule_3_left := { x_left(if is_ability_classic_3() then if styling.Card_Face=="Neo" then 39 else 50 else 72) }
	rule_3_top := { y_top(divider_height_2()+1) }
	rule_3_width := { fun_expand_size(if is_pokemon() and styling.Card_Face=="Neo" then if is_ability_classic_3() then 292 else if length(to_text(card.damage_3))==0 then 259 else 217 else if is_pokemon() then if is_ability_classic_3() then 267 else 221 else 0) }
	rule_3_height := { fun_expand_size(if is_pokemon() and attack_no()>=2 and not(stage()=="Baby") then bottom_height()-divider_height_2() else 0) }
	rule_3_visible := {if is_pokemon() and attack_no()>=2 and not(stage()=="Baby") then true else false }
	rule_3_outline_visible := { rule_3_visible() and is_outline() and is_not_blur() }
	rule_3_outline_blur := { rule_3_visible() and is_outline() and not(is_not_blur()) }
	rule_3_align := { if rule_line_3()<=1 then "middle center" else if styling.Card_Face=="Neo" then "middle left" else "middle left justify" }
	rule_size := { fun_expand_font(if styling.Card_Face=="Neo" then 12 else 13.7) }
	rule_font := { "PokeRuleClassic" }
	rule_weight := { "normal" }
	rule_style := { "normal" }
	rule_symbol_font := { "pokemon-a-rule-classic" }
	rule_symbol_font_tt := { "pokemon-a-rule-classic-behind" }
	rule_symbol_size := { fun_expand_font(18) }
	rule_lh_hard := { if is_energy() then 1 else 1.4 }
	rule_lh_soft := { 1 }
############################################################## Styling fields
#All Card Options
styling field:
	type: choice
	name: Card Face
	description: choose between Classic / Gym and Neo card faces
	choice: Classic
	choice: Gym
	choice: Neo
styling field:
	type: multiple choice
	name: Automated Text Usage
	choice: Stage Title
	choice: Evolution Reminder
	choice: Baby Stage Rule Reminder
	choice: Trainer Play Rule Reminder
	choice: Shiny Pokemon Reminder
	initial: Stage Title, Evolution Reminder, Baby Stage Rule Reminder, Trainer Play Rule Reminder, Shiny Pokemon Reminder
styling field:
	type: multiple choice
	name: Ability and Energy Icons
	choice: Use Transparent Free Energy Icon (aka No Energy)
styling style:
	Automated Text Usage:
		render style: checklist
		direction: vertical
	Ability and Energy Icons:
		render style: checklist
		direction: vertical
	Card Face:
		render style: both
		choice images:
			Classic:	/pokemon-b-common.mse-include/icon-face-classic.png
			Gym:		/pokemon-b-common.mse-include/icon-face-gym.png
			Neo:		/pokemon-b-common.mse-include/icon-face-neo.png
############################################################## Throughout this odd number layers are reserved for shading/covering up etc.
card style:
	######################## Hidden Layer -18
	######################## this layer provids a layer to place hidden buttons and images
	######################## Some of these items are found in the extra card fields
#########User Defined color fields (there but not seen)
	energy color 1:
		left: { x_left(8) }
		top: { y_top(9) }
		width: { fun_expand_size(350) }
		height: { fun_expand_size(if ((is_energy() or is_pokemon()) and background_type_1()=="User Defined") then 495 else 0) }
		visible: { if ((is_energy() or is_pokemon()) and background_type_1()=="User Defined") then "yes" else "no" }
		mask: { if is_energy() and basic_energy_meld()=="Generations" then "/pokemon-b-common.mse-include/mask-e-Generations-1.png" else if is_energy() and background_type_1()=="User Defined" then "/pokemon-b-common.mse-include/mask-top-bottom.png" else if card.card_type=="Dual-Type" then dual_mask() else "/pokemon-b-common.mse-include/mask-blank.png" }
		z index: -19
	energy color 2:
		left: { x_left(8) }
		top: { y_top(9) }
		width: { fun_expand_size(350) }
		height: { fun_expand_size(if (card.card_type=="Dual-Type" and background_type_1()=="User Defined") or (is_energy() and basic_energy_meld()=="Generations") then 495 else 0) }
		mask: { if is_energy() and basic_energy_meld()=="Generations" then "/pokemon-b-common.mse-include/mask-e-Generations-2.png" else if card.card_type=="Dual-Type" then dual_mask_reverse() else "/pokemon-b-common.mse-include/mask-blank.png" }
		visible: { if (card.card_type=="Dual-Type" and background_type_1()=="User Defined") or (is_energy() and basic_energy_meld()=="Generations") then "yes" else "no" }
		z index: -19
	energy color 3:
		left: { x_left(8) }
		top: { y_top(9) }
		width: { fun_expand_size(350) }
		height: { fun_expand_size(if is_energy() and basic_energy_meld()=="Generations" then 495 else 0) }
		mask: { if is_energy() and basic_energy_meld()=="Generations" then "/pokemon-b-common.mse-include/mask-e-Generations-3.png" else "/pokemon-b-common.mse-include/mask-blank.png" }
		visible: { if is_energy() and basic_energy_meld()=="Generations" then "yes" else "no" }
		z index: -19
#########Image used for User Defined background image
	background pic 1:
		left: { x_left(183)-350 }
		top: { y_top(257)-495 }
		width: { 700 }
		height: { if is_image_1() then 990 else 0 }
		visible: { if is_image_1() then "yes" else "no" }
		z index: -18
		mask: { if card.card_type=="Dual-Type" then dual_mask() else if is_energy() and background_type_1()=="User Defined" then "/pokemon-b-common.mse-include/mask-bottom-top.png" else "/pokemon-b-common.mse-include/mask-blank.png" }
#########Image used for second User Defined background image
	background pic 2:
		left: { x_left(183)-350 }
		top: { y_top(257)-495 }
		width: { 700 }
		height: { if is_image_2() then 990 else 0 }
		z index: -18
		visible: { if is_image_2() then "yes" else "no" }
		mask: { dual_mask_reverse() }
	######################## Background Layer -14
	######################## this layer provids the background image modified slightly for Dual-Type (changed some z-index)
#########Blank image to separate hidden images
	blank image:
		left: { x_left(0) }
		top: { y_top(0) }
		width: { fun_expand_size(368) }
		height: { fun_expand_size(513) }
		visible: { "yes" }
		z index: -17
		render style: image
		image: { "/pokemon-b-common.mse-include/mask-blank.png" }
#########Background image everything before this is hidden
	text popout image:
		left: { x_left(8) }
		top: { y_top(9) }
		width: { fun_expand_size(350) }
		height: { fun_expand_size(495) }
		visible: { if is_two_tone() then "yes" else "no" }
		z index: -15
		render style: image
		image: 
			script: set_combine(input: if is_dark_1() then if is_dark_2() then  "/pokemon-b-common.mse-include/mask-blank.png"
						else dual_mask()
					else if is_dark_2() then dual_mask_reverse()
					else "/pokemon-b-common.mse-include/mask-blank-reverse.png"
				, combine: "difference")
#########Primary Background Image and Background Image for Black portion of Two-Tone Text
	background:
		left: { x_left(8) }
		top: { y_top(9+(if basic_energy_suffix()=="Lightning" then 10 else 0)) }
		width: { fun_expand_size(350) }
		height: { fun_expand_size(495) }
		z index: -14
		render style: image
		mask: 
			script: if card.card_type=="Dual-Type" and is_two_tone() then if is_dark_1() and not(is_dark_2()) then	dual_mask_reverse()
					else if is_dark_2() and not(is_dark_1()) then						dual_mask()
					else "/pokemon-b-common.mse-include/mask-blank.png"
				else "/pokemon-b-common.mse-include/mask-blank.png"
		image:
			script: if card.card_type=="Pokemon" then masked_blend(light: "mask-image-"+styling.Card_Face+".png", dark: masked_blend(light: if is_image_1() then card.background_pic_1
						else if texture_type_1()=="Color" and not(background_type_1()=="User Defined") or (colored_pokemon_suffix_1()=="Color" and background_type_1()=="User Defined") then recolor_image(input: "/pokemon-b-common.mse-include/blank-color.png", red: texture_color_1(), green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255))
						else if background_type_1()=="User Defined" then	recolor_image(input: "/pokemon-b-common.mse-include/back-p-colored-"+colored_pokemon_suffix_1()+".png", red: card.energy_color_1, green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255))
						else							"/pokemon-b-common.mse-include/back-p-"+texture_type_1()+"-"+background_type_1()+".png", 
					dark:  if card.card_color_1=="User Defined" then		recolor_image(input: "overlay-p-neo-colored.png", red: card.energy_color_1, green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255))
						else							("overlay-p-neo-"+background_type_1()+".png"), 
					mask: if styling.Card_Face=="Neo" then "mask-p-neo.png" else "/pokemon-b-common.mse-include/mask-blank.png"), mask: if contains(card.text_options_1, match: "Body Fade Box") then "mask-fade-"+styling.Card_Face+".png" else "/pokemon-b-common.mse-include/mask-blank-reverse.png")
				else if card.card_type=="Dual-Type" then set_combine(input: masked_blend(light: "mask-image-"+styling.Card_Face+".png", dark: masked_blend(light:
						masked_blend(light: (if is_image_1() then			card.background_pic_1
							else if texture_type_1()=="Color" and not(background_type_1()=="User Defined") or (colored_pokemon_suffix_1()=="Color" and background_type_1()=="User Defined") then recolor_image(input: "/pokemon-b-common.mse-include/blank-color.png", red: texture_color_1(), green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255))
							else if background_type_1()=="User Defined" then	recolor_image(input: "/pokemon-b-common.mse-include/back-p-colored-"+colored_pokemon_suffix_1()+".png", red: card.energy_color_1, green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255))
							else							"/pokemon-b-common.mse-include/back-p-"+texture_type_1()+"-"+background_type_1()+".png"),
						dark: if card.card_color_1=="User Defined" then			recolor_image(input: "overlay-p-neo-colored.png", red: card.energy_color_1, green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255))
							else							("overlay-p-neo-"+background_type_1()+".png"),  
						mask: if styling.Card_Face=="Neo" then "mask-p-neo.png" else "/pokemon-b-common.mse-include/mask-blank.png"), 
					dark:	masked_blend(light: (if is_image_2() then			card.background_pic_2
							else if texture_type_2()=="Color" and not(background_type_2()=="User Defined") or (colored_pokemon_suffix_2()=="Color" and background_type_2()=="User Defined") then recolor_image(input: "/pokemon-b-common.mse-include/blank-color.png", red: texture_color_2(), green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255))
							else if background_type_2()=="User Defined" then	recolor_image(input: "/pokemon-b-common.mse-include/back-p-colored-"+colored_pokemon_suffix_2()+".png", red: card.energy_color_2, green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255))
							else							"/pokemon-b-common.mse-include/back-p-"+texture_type_2()+"-"+background_type_2()+".png"),
						dark: if card.card_color_2=="User Defined" then			recolor_image(input: "overlay-p-neo-colored.png", red: card.energy_color_2, green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255))
							else							("overlay-p-neo-"+background_type_2()+".png"),
						mask: if styling.Card_Face=="Neo" then "mask-p-neo.png" else "/pokemon-b-common.mse-include/mask-blank.png"), 
					mask:	blend_mask()), mask: if contains(card.text_options_1, match: "Body Fade Box") then "mask-fade-"+styling.Card_Face+".png" else "/pokemon-b-common.mse-include/mask-blank-reverse.png"), combine: if is_two_tone() then "multiply" else "normal")
				else if is_energy()
					then if card.energy_type=="Basic"
						then if basic_energy_meld()=="mix" 
							then if background_type_1()=="Metal" and (card.metal_texture=="Nintendo" or card.metal_texture=="Wizards") then masked_blend(light: "/pokemon-b-common.mse-include/mask-blank.png", dark: masked_blend(light: recolor_image(input: "/pokemon-b-common.mse-include/back-e-colored-"+basic_energy_suffix()+".png", red: basic_color(), green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255)), dark: "/pokemon-b-common.mse-include/mask-blank-reverse.png", mask: "/pokemon-b-common.mse-include/back-e-metal-"+card.metal_texture+".png"), mask: "/pokemon-b-common.mse-include/blend-e-"+basic_energy_suffix()+".png")
							else 						masked_blend(light: "/pokemon-b-common.mse-include/mask-blank.png", dark: recolor_image(input: "/pokemon-b-common.mse-include/back-e-colored-"+basic_energy_suffix()+".png", red: basic_color(), green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255)), mask: "/pokemon-b-common.mse-include/blend-e-"+basic_energy_suffix()+".png")
						else if basic_energy_meld()=="blend" then		masked_blend(light: "/pokemon-b-common.mse-include/mask-blank.png", dark: if background_type_1()=="Metal" and (card.metal_texture=="Nintendo" or card.metal_texture=="Wizards") then "/pokemon-b-common.mse-include/back-e-metal-"+card.metal_texture+".png" else recolor_image(input: "/pokemon-b-common.mse-include/blank-color.png", red: basic_color(), green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255)), mask: "/pokemon-b-common.mse-include/blend-e-"+basic_energy_suffix()+".png")
						else if basic_energy_meld()=="back" then		"/pokemon-b-common.mse-include/back-e-"+basic_energy_suffix()+"-"+background_type_1()+".png"
						else if basic_energy_meld()=="mask" then		masked_blend(light: "/pokemon-b-common.mse-include/mask-blank.png", dark: "/pokemon-b-common.mse-include/back-e-"+background_type_1()+".png", mask: "/pokemon-b-common.mse-include/blend-e-"+basic_energy_suffix()+".png")
						else if basic_energy_meld()=="Generations"
							then if background_type_1()=="Metal" and (card.metal_texture=="Nintendo" or card.metal_texture=="Wizards") then		masked_blend(light: "/pokemon-b-common.mse-include/mask-blank.png", dark: masked_blend(light: "/pokemon-b-common.mse-include/back-e-metal-"+card.metal_texture+".png" , dark: "/pokemon-b-common.mse-include/mask-blank-reverse.png", mask: recolor_image(input: "/pokemon-b-common.mse-include/back-e-colored-Generations.png", red: basic_color(), green: basic_color_3(), blue: basic_color_2(), white: rgb(255,255,255))), mask: "/pokemon-b-common.mse-include/blend-e-classic.png")
							else						recolor_image(input: "/pokemon-b-common.mse-include/back-e-colored-Generations.png", red: basic_color(), green: basic_color_3(), blue: basic_color_2(), white: rgb(255,255,255))
						else if basic_energy_meld()=="recolor"
							then if background_type_1()=="Metal" and (card.metal_texture=="Nintendo" or card.metal_texture=="Wizards") then		masked_blend(light: "/pokemon-b-common.mse-include/mask-blank.png", dark: "/pokemon-b-common.mse-include/back-e-metal-"+card.metal_texture+".png", mask: "/pokemon-b-common.mse-include/blend-e-special.png")
							else						recolor_image(input: "/pokemon-b-common.mse-include/back-e-colored-"+basic_energy_suffix()+".png", red: basic_color(), green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255))
						else if basic_energy_meld()=="image"
							then if contains(card.basic_user_image_type, match:"Monocolor") then	masked_blend(light: "/pokemon-b-common.mse-include/mask-blank.png", dark: recolor_image(input: recolor_image(input: card.background_pic_1, red: rgb(255,0,0), green: rgb(255,0,0), blue: rgb(255,0,0), white: rgb(255,64,64)), red: basic_color(), green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255)), mask: "/pokemon-b-common.mse-include/blend-e-user"+(if contains(card.basic_user_image_type, match:"Triburst") then "-Triburst" else "")+(if contains(card.basic_user_image_type, match:"Sunburst") then "-Sunburst" else "")+(if contains(card.basic_user_image_type, match:"Centered") then "-Centered" else "")+".png")
							else 						masked_blend(light: "/pokemon-b-common.mse-include/mask-blank.png", dark: card.background_pic_1, mask: "/pokemon-b-common.mse-include/blend-e-user"+(if contains(card.basic_user_image_type, match:"Triburst") then "-Triburst" else "")+(if contains(card.basic_user_image_type, match:"Sunburst") then "-Sunburst" else "")+(if contains(card.basic_user_image_type, match:"Centered") then "-Centered" else "")+".png")
						else "/pokemon-b-common.mse-include/mask-blank.png"
					else if contains(card.art_options, match: "Faded Full Art") then "back-e-classic-energy-fade.png"
					else "back-e-classic-energy.png"
				else if is_trainer() then						"back-t-classic-trainer.png"
				else "/pokemon-b-common.mse-include/mask-blank.png"
#########Background Image for White portion of Two-Tone Text
	background 2:
		left: { x_left(8) }
		top: { y_top(9) }
		width: { fun_expand_size(350) }
		height: { fun_expand_size(if card.card_type=="Dual-Type" and is_two_tone() then 495 else 0) }
		visible: { if card.card_type=="Dual-Type" and is_two_tone() then "yes" else "no" }
		z index: -14
		render style: image
		mask: 
			script: if card.card_type=="Dual-Type" and is_two_tone() then if is_dark_1() and not(is_dark_2()) then	dual_mask()
					else if is_dark_2() and not(is_dark_1()) then						dual_mask_reverse()
					else "/pokemon-b-common.mse-include/mask-blank.png"
				else "/pokemon-b-common.mse-include/mask-blank.png"
		image:
			script: if card.card_type=="Dual-Type" then set_combine(input: masked_blend(light: "mask-image-"+styling.Card_Face+".png", dark: masked_blend(light:
						masked_blend(light: (if is_image_1() then			card.background_pic_1
							else if texture_type_1()=="Color" and not(background_type_1()=="User Defined") or (colored_pokemon_suffix_1()=="Color" and background_type_1()=="User Defined") then recolor_image(input: "/pokemon-b-common.mse-include/blank-color.png", red: texture_color_1(), green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255))
							else if background_type_1()=="User Defined" then	recolor_image(input: "/pokemon-b-common.mse-include/back-p-colored-"+colored_pokemon_suffix_1()+".png", red: card.energy_color_1, green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255))
							else							"/pokemon-b-common.mse-include/back-p-"+texture_type_1()+"-"+background_type_1()+".png"),
						dark: if card.card_color_1=="User Defined" then			recolor_image(input: "overlay-p-neo-colored.png", red: card.energy_color_1, green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255))
							else							("overlay-p-neo-"+background_type_1()+".png"),  
						mask: if styling.Card_Face=="Neo" then "mask-p-neo.png" else "/pokemon-b-common.mse-include/mask-blank.png"), 
					dark:	masked_blend(light: (if is_image_2() then			card.background_pic_2
							else if texture_type_2()=="Color" and not(background_type_2()=="User Defined") or (colored_pokemon_suffix_2()=="Color" and background_type_2()=="User Defined") then recolor_image(input: "/pokemon-b-common.mse-include/blank-color.png", red: texture_color_2(), green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255))
							else if background_type_2()=="User Defined" then	recolor_image(input: "/pokemon-b-common.mse-include/back-p-colored-"+colored_pokemon_suffix_2()+".png", red: card.energy_color_2, green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255))
							else							"/pokemon-b-common.mse-include/back-p-"+texture_type_2()+"-"+background_type_2()+".png"),
						dark: if card.card_color_2=="User Defined" then			recolor_image(input: "overlay-p-neo-colored.png", red: card.energy_color_2, green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255))
							else							("overlay-p-neo-"+background_type_2()+".png"),
						mask: if styling.Card_Face=="Neo" then "mask-p-neo.png" else "/pokemon-b-common.mse-include/mask-blank.png"), 
					mask:	blend_mask()), mask: if contains(card.text_options_1, match: "Body Fade Box") then "mask-fade-"+styling.Card_Face+".png" else "/pokemon-b-common.mse-include/mask-blank-reverse.png"), combine: if is_two_tone() then "screen" else "normal")
				else "/pokemon-b-common.mse-include/mask-blank.png"
	######################## Frame Layer -12
	######################## This layer provides the image framework underneath the image
#########Images that provide the windows for the image
	window:
		left: { x_left(8) }
		top: { y_top(9) }
		width: { fun_expand_size(350) }
		height: { fun_expand_size(if is_pokemon() or (is_energy() and card.energy_type=="Basic") then 495 else 0) }
		visible: { if is_pokemon() and not(contains(card.art_options, match: "Full Art")) or (is_energy() and card.energy_type=="Basic" and not(contains(card.art_options, match: "Full Art"))) then "yes" else "no" }
		z index: -12
		render style: image
		image:
			script: if is_pokemon() then					("window-p"+face_suffix()+frame_suffix()+".png")
				else if is_energy() and card.energy_type=="Basic" then	recolor_image(input: "frame-e.png", red: basic_color(), green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255))
				else "/pokemon-b-common.mse-include/blank.png"
	######################## Image Layer -10
	######################## This layer is for the user input image
	card image:
		left:
			script: x_left(if (contains(card.art_options, match: "Full Art")) then 13
				else if is_pokemon() then if styling.Card_Face=="Neo" then 44 else 46
				else if is_trainer() then 38
				else 15)
		top:
			script: y_top(if (contains(card.art_options, match: "Full Art")) then 13
				else if is_pokemon() then if styling.Card_Face=="Neo" then 62 else 66
				else if is_trainer() then 121
				else if card.energy_type=="Special" then 78 else 76)
		width:
			script: fun_expand_size(if (contains(card.art_options, match: "Full Art")) then 339
				else if is_pokemon() then 283
				else if is_trainer() then 294
				else 335)
		height:
			script: fun_expand_size(if (contains(card.art_options, match: "Full Art")) then 486
				else if is_pokemon() then if styling.Card_Face=="Neo" then 203 else 201
				else if is_trainer() then 165
				else if is_energy() then if card.energy_type=="Special" then 294
					else if card.energy_type=="Basic" and basic_energy_suffix()=="Special" then 248
				else 0)
		visible: { if (contains(card.art_options, match: "Full Art")) or is_pokemon() or is_trainer() or (is_energy() and (card.energy_type=="Special" or (card.energy_type=="Basic" and basic_energy_suffix()=="Special"))) then "yes" else "no" }
		mask: { if contains(card.art_options, match: "Faded Full Art") then "/pokemon-b-common.mse-include/mask-fade.png" else "/pokemon-b-common.mse-include/mask-blank.png" }
		z index: -10
	######################## Overimage Under Border Frame -8
	######################## This layer is for items between the image and the border (aka might need covered up by the border)

	######################## Border Layer -6
	######################## This layer is for the border
	border:
		left: { x_left(0) }
		top: { y_top(0) }
		width: { fun_expand_size(368) }
		height: { fun_expand_size(513) }
		z index: -6
		render style: image
		image:
			script: "/pokemon-b-common.mse-include/border-yellow.png"
	
	######################## Overborder Frame -4
	######################## This layer is for items over the border

	######################## Part of these items are found in the extra card fields

#########This image provides the basic framework that overlays the border.
	border overlay:
		left: { x_left(8) }
		top: { y_top(9) }
		width: { fun_expand_size(350) }
		height: { fun_expand_size(495) }
		z index: -4
		render style: image
		mask: { if styling.Card_Face=="Gym" then "mask-gym.png" else "/pokemon-b-common.mse-include/mask-blank.png" }
		image:
			script: if is_pokemon()
					then if stage()=="Basic" then	("frame-p"+face_suffix()+"-basic"+frame_suffix()+".png")
					else if face_suffix()=="-classic" then	("frame-p-classic-evolve"+frame_suffix()+".png")
					else if stage()=="Baby" then	("frame-p-neo-baby"+frame_suffix()+".png")
					else if stage()=="Stage 1" then	("frame-p-neo-stage1"+frame_suffix()+".png")
					else if stage()=="Stage 2" then	("frame-p-neo-stage2"+frame_suffix()+".png")
					else "/pokemon-b-common.mse-include/blank.png"
				else if is_trainer() and (contains(card.art_options, match: "Full Art") or contains(card.art_options, match: "Popout Art (for Advanced Users)")) then "frame-t-trainer.png"
				else if is_energy() and contains(card.art_options, match: "Full Art") then "frame-e-"+card.energy_type+".png"
				else "/pokemon-b-common.mse-include/blank.png"
#########The Pokedex entry field underneath the window frame placed here so that it is underneath the popout layer
#########The text listing the pokemon statistics found below the image window
	pokedex text 1:
		left: { pokedex1_left() }
		top: { pokedex1_top() }
		width: { pokedex1_width() }
		height: { pokedex1_height() }
		z index: -1
		alignment: { pokedex1_align() }
		visible: { pokedex1_visible() }
		font
			name: { pokedex1_font() }
			weight: { pokedex1_weight() }
			style: { pokedex1_style() }
			size: { pokedex1_size() }
			color: { pokedex1_color() }
	pokedex text 2:
		left: { pokedex2_left() }
		top: { pokedex2_top() }
		width: { pokedex2_width() }
		height: { pokedex2_height() }
		z index: 6
		alignment: { pokedex2_align() }
		visible: { pokedex2_visible() }
		font
			name: { pokedex2_font() }
			weight: { pokedex2_weight() }
			style: { pokedex2_style() }
			size: { pokedex2_size() }
			color: { pokedex2_color() }
	######################## Popout layers 0
	######################## This layer is for the popout image
	card popout:
		left: { x_left(0) }
		top: { y_top(0) }
		width: { fun_expand_size(368) }
		height: { fun_expand_size(if contains(card.art_options, match: "Popout Art (for Advanced Users)") then 513 else 0) }
		z index: 0
		mask:
			script: if is_energy() then ("mask-full-e-"+card.energy_type+".png")
				else if is_trainer() then "mask-full-t.png"
				else if is_pokemon()
					then if stage()=="Basic"
						then if styling.Card_Face=="Neo" then	"mask-full-p-neo-basic.png"
						else					"mask-full-p-classic.png"
					else if stage()=="Baby" and styling.Card_Face=="Neo" then	"mask-full-p-neo-baby.png"
					else if styling.Card_Face=="Neo" then		"mask-full-p-neo-evolved.png"
					else "mask-full-p-classic-evolved.png"
				else "/pokemon-b-common.mse-include/mask-blank.png"
		visible: { if contains(card.art_options, match: "Popout Art (for Advanced Users)") then "yes" else "no" }
	gym leader pic:
		left: { x_left(244) }
		top: { y_top(425) }
		width: { fun_expand_size(100) }
		height: { fun_expand_size(if is_pokemon() and styling.Card_Face=="Gym" and contains(card.general_options_01, match: "User Image for Gym Trainer (Gym Card Face Only)") then 58 else 0) }
		visible: { if is_pokemon() and styling.Card_Face=="Gym" and contains(card.general_options_01, match: "User Image for Gym Trainer (Gym Card Face Only)") then "yes" else "no" }
		z index: 1
	######################## Choice layers 2
	######################## This for choice tabs
	card type:
		left: { x_left(0) }
		top: { y_top(493) }
		width: { fun_expand_size(184) }
		height: { fun_expand_size(20) }
		z index: 2
		render style: image
		popup style: in place
		image: /pokemon-b-common.mse-include/blank.png
	art options:
		left: { x_left(185) }
		top: { y_top(493) }
		width: { fun_expand_size(184) }
		height: { fun_expand_size(20) }
		z index: 2
		render style: image
		popup style: in place
		image: /pokemon-b-common.mse-include/blank.png
	text options 1:
		left: { x_left(185) }
		top: { y_top(0) }
		width: { fun_expand_size(184) }
		height: { fun_expand_size(20) }
		z index: 2
		render style: image
		popup style: in place
		image: /pokemon-b-common.mse-include/blank.png
	general options 01:
		left: { x_left(0) }
		top: { y_top(0) }
		width: { fun_expand_size(184) }
		height: { fun_expand_size(20) }
		z index: 2
		render style: image
		popup style: in place
		image: /pokemon-b-common.mse-include/blank.png
	stage baby:
		left: { x_left(0) }
		top: { y_top(20) }
		width: { fun_expand_size(70) }
		height: { if is_pokemon() then fun_expand_size(70) else 0 }
		z index: 2
		render style: image
		popup style: in place
		visible: { if is_pokemon() then "yes" else "no" }
		image: /pokemon-b-common.mse-include/blank.png
	trainer:
		left: { x_left(0) }
		top: { y_top(20) }
		width: { fun_expand_size(70) }
		height: { fun_expand_size(if is_trainer() then 70 else 0) }
		z index: 2
		render style: image
		popup style: in place
		visible: { if is_trainer() then "yes" else "no" }
		image: /pokemon-b-common.mse-include/blank.png
	energy type:
		left: { x_left(298) }
		top: { y_top(20) }
		width: { fun_expand_size(70) }
		height: { fun_expand_size(if is_energy() then 70 else 0) }
		z index: 2
		render style: image
		popup style: in place
		visible: { if is_energy() then "yes" else "no" }
		image: /pokemon-b-common.mse-include/blank.png
	card color 1:
		left: { x_left(if card.card_type=="Dual-Type" then energy_left()-energy_left_difference() else energy_left()) }
		top: { y_top(0) }
		width: { fun_expand_size(energy_width()) }
		height: { fun_expand_size(if is_pokemon() or (is_energy() and card.energy_type=="Basic") then energy_top()+energy_width() else 0) }
		visible: { if is_pokemon() or is_energy() then "yes" else "no" }
		z index: 3
		render style: image
		popup style: in place
		image: /pokemon-b-common.mse-include/blank.png
	card color 2:
		left: { x_left(energy_left()+energy_right_difference()) }
		top: { y_top(0) }
		width: { fun_expand_size(energy_width()) }
		height: { fun_expand_size(if card.card_type=="Dual-Type" then energy_top()+energy_width() else 0) }
		visible: { if card.card_type=="Dual-Type" then "yes" else "no" }
		z index: 3
		render style: image
		popup style: in place
		image: /pokemon-b-common.mse-include/blank.png
	texture type 1:
		left: { x_left(0) }
		top: { y_top(413) }
		width: { fun_expand_size(20) }
		height: { fun_expand_size(if is_pokemon() and not(background_type_1()=="User Defined") then 80 else 0) }
		z index: 2
		render style: image
		popup style: in place
		visible: { if is_pokemon() and not(background_type_1()=="User Defined") then "yes" else "no" }
		image: /pokemon-b-common.mse-include/blank.png
	texture type 2:
		left: { x_left(348) }
		top: { y_top(413) }
		width: { fun_expand_size(20) }
		height: { fun_expand_size(if card.card_type=="Dual-Type" and not(background_type_2()=="User Defined") then 80 else 0) }
		z index: 2
		render style: image
		popup style: in place
		visible: { if card.card_type=="Dual-Type" and not(background_type_2()=="User Defined") then "yes" else "no" }
		image: /pokemon-b-common.mse-include/blank.png
	color texture 1:
		left: { x_left(0) }
		top: { y_top(413) }
		width: { fun_expand_size(20) }
		height: { fun_expand_size(if is_pokemon() and background_type_1()=="User Defined" then 80 else 0) }
		z index: 2
		render style: image
		popup style: in place
		visible: { if is_pokemon() and background_type_1()=="User Defined" then "yes" else "no" }
		image: /pokemon-b-common.mse-include/blank.png
	color texture 2:
		left: { x_left(348) }
		top: { y_top(413) }
		width: { fun_expand_size(20) }
		height: { fun_expand_size(if card.card_type=="Dual-Type" and background_type_2()=="User Defined" then 80 else 0) }
		z index: 2
		render style: image
		popup style: in place
		visible: { if card.card_type=="Dual-Type" and background_type_2()=="User Defined" then "yes" else "no" }
		image: /pokemon-b-common.mse-include/blank.png
	basic texture:
		left: { x_left(0) }
		top: { y_top(413) }
		width: { fun_expand_size(20) }
		height: { fun_expand_size(if is_energy() and card.energy_type=="Basic" then 80 else 0) }
		z index: 2
		render style: image
		popup style: in place
		visible: { if is_energy() and card.energy_type=="Basic" then "yes" else "no" }
		image: /pokemon-b-common.mse-include/blank.png
	metal texture:
		left: { x_left(348) }
		top: { y_top(413) }
		width: { fun_expand_size(20) }
		height: { fun_expand_size(if is_energy() and card.energy_type=="Basic" and card.card_color_1=="Metal" then 80 else 0) }
		z index: 2
		render style: image
		popup style: in place
		visible: { if is_energy() and card.energy_type=="Basic" and card.card_color_1=="Metal" then "yes" else "no" }
		image: /pokemon-b-common.mse-include/blank.png
	basic user image type:
		left: { x_left(348) }
		top: { y_top(413) }
		width: { fun_expand_size(20) }
		height: { fun_expand_size(if is_energy() and card.energy_type=="Basic" and basic_energy_suffix()=="User Image" then 80 else 0) }
		z index: 2
		render style: image
		popup style: in place
		visible: { if is_energy() and card.energy_type=="Basic" and basic_energy_suffix()=="User Image" then "yes" else "no" }
	dual blend type:
		left: { x_left(0) }
		top: { y_top(90) }
		width: { fun_expand_size(20) }
		height: { fun_expand_size(if card.card_type=="Dual-Type" then 80 else 0) }
		z index: 2
		render style: image
		popup style: in place
		visible: { if card.card_type=="Dual-Type" then "yes" else "no" }
		image: /pokemon-b-common.mse-include/blank.png
	######################## Overborder Frame 4
	######################## This layer is for items needed just before the user input text.

	######################## Also has materials found in the extra card fields
#########These two fields show the pokemon energy symbol.  It was converted to a symbol font to allow easy modification in the future to alternate symbols
	color text 1:
		left: { x_left(if card.card_type=="Dual-Type" then energy_left()-energy_left_difference() else energy_left()) }
		top: { y_top(energy_top()) }
		width: { fun_expand_size(energy_width()) }
		height: { fun_expand_size(if (is_pokemon() or (is_energy() and card.energy_type=="Basic")) and not(card.card_color_1=="User Defined") then energy_width() else 0) }
		visible: { if (is_pokemon() or (is_energy() and card.energy_type=="Basic")) and not(card.card_color_1=="User Defined") then "yes" else "no" }
		z index: 5
		always symbol: true
		symbol font:
			name: pokemon-a-color
			size: { fun_expand_font(energy_width()) }
	color text 1 dup:
		left: { x_left(basic_energy_left()) }
		top: { y_top(basic_energy_top()+(if basic_energy_suffix()=="Lightning" then 10 else 0)) }
		width: { fun_expand_size(basic_energy_width()) }
		height: { fun_expand_size(if is_energy() and card.energy_type=="Basic" and not(card.card_color_1=="User Defined") then basic_energy_width() else 0) }
		visible: { is_energy() and card.energy_type=="Basic" and not(card.card_color_1=="User Defined") }
		z index: 5
		always symbol: true
		symbol font:
			name: pokemon-a-lg-color
			size: { fun_expand_font(basic_energy_width()) }
	color text 2:
		left: { x_left(energy_left()+energy_right_difference()) }
		top: { y_top(energy_top()) }
		width: { fun_expand_size(energy_width()) }
		height: { fun_expand_size(if card.card_type=="Dual-Type" and not(card.card_color_2=="User Defined") then energy_width() else 0) }
		z index: 3
		visible: { if (card.card_type=="Dual-Type" and not(card.card_color_2=="User Defined")) then "yes" else "no" }
		always symbol: true
		symbol font:
			name: pokemon-a-color
			size: { fun_expand_font(energy_width()) }
#########These two fields allow a user input energy orb image
	energy orb pic 1:
		left: { x_left(if card.card_type=="Dual-Type" then energy_left()-energy_left_difference() else energy_left()) }
		top: { y_top(energy_top()) }
		width: { fun_expand_size(energy_width()) }
		height: { fun_expand_size(if ((is_pokemon() or (is_energy() and card.energy_type=="Basic")) and card.card_color_1=="User Defined") then energy_width() else 0) }
		visible: { if ((is_pokemon() or (is_energy() and card.energy_type=="Basic")) and card.card_color_1=="User Defined") then "yes" else "no" }
		z index: 6
	energy orb pic 2:
		left: { x_left(energy_left()+energy_right_difference()) }
		top: { y_top(energy_top()) }
		width: { fun_expand_size(energy_width()) }
		height: { fun_expand_size(if card.card_type=="Dual-Type" and card.card_color_2=="User Defined" then energy_width() else 0) }
		z index: 4
		visible: { if card.card_type=="Dual-Type" and card.card_color_2=="User Defined" then "yes" else "no" }
#########Evolution Pokemon text found above the evolution image
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	title reminder 2 1:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_rem_2_height() }
		z index: 4
		visible: { title_rem_2_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(0,0,0)
	title text 2:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_txt_2_height() }
		z index: 4
		visible: { title_txt_2_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(0,0,0)
#########Set Symbol
	set:
		left: { x_left(if is_pokemon() then 322 else if is_trainer() then 288 else 324) }
		top: { y_top(if is_pokemon() then 274 else if is_trainer() then 457 else 455) }
		width: { fun_expand_size(23) }
		height: { fun_expand_size(23) }
		z index: 4
		visible: { contains(set.visibility_options, match: "Visible Set Symbol") and not(contains(set.visibility_options, match: "User image for set symbol")) }
		render style: image
		choice images:
			common: script: symbol_variation(symbol: set.symbol, border_radius: if set.include_border_on_set_symbol=="yes" then 0.1 else 0, fill_color: set.set_symbol_fill_color, border_color: set.set_symbol_border_color)
	set symbol:
		left: { x_left(if is_pokemon() then 322 else if is_trainer() then 288 else 324) }
		top: { y_top(if is_pokemon() then 274 else if is_trainer() then 457 else 455) }
		width: { fun_expand_size(23) }
		height: { fun_expand_size(23) }
		z index: 4
		visible: { contains(set.visibility_options, match: "Visible Set Symbol") and contains(set.visibility_options, match: "User image for set symbol") }
		render style: image
		image: { set.symbol_image }
	######################## First Text Frame 6
	######################## This layer is for input text

	######################## Also has materials found in the extra card fields
#########card number
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	card number:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { if contains(set.visibility_options, match: "Visible Card Numbers on all cards") then card_no_height() else 0 }
		z index: 6
		alignment: { card_no_align() }
		visible: { if contains(set.visibility_options, match: "Visible Card Numbers on all cards") then "yes" else "no" }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: { card_no_color() }
#########Illustrator name
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	illustrator:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { if contains(card.text_options_1, match: "Use Primary Set Artist") then 0 else ill_height() }
		z index: 6
		alignment: { ill_align() }
		visible: { not(contains(card.text_options_1, match: "Use Primary Set Artist")) and not(is_energy() and card.energy_type=="Basic" and not(basic_energy_suffix()=="Special" or basic_energy_suffix()=="User Image")) }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: { ill_color() }
#########Copyright
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	copyright:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { if contains(set.visibility_options, match: "Visible Copyright on all cards") and not(contains(card.text_options_1, match: "Use Set Copyright")) then copy_height() else 0 }
		z index: 6
		alignment: { copy_align() }
		visible: { if contains(set.visibility_options, match: "Visible Copyright on all cards") and not(contains(card.text_options_1, match: "Use Set Copyright")) then "yes" else "no" }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: { copy_color() }
#########Rarity Symbol
	rarity:
		left: { x_left((if is_energy() then 336 else 338)-(if is_outline() then 1 else 0)) }
		top: { y_top((if is_energy() then 480 else 486)-(if is_outline() then 1 else 0)) }
		height: { fun_expand_size(7+(if is_outline() then 2 else 0)) }
		width: { fun_expand_size(7+(if is_outline() then 2 else 0)) }
		z index: 6
		render style: image
		visible: { if contains(set.visibility_options, match: "Visible Rarity symbol on all cards") then "yes" else "no" }
		choice images:
			common:		{ if is_outline() then "/pokemon-b-common.mse-include/rarity-out-common.png" else if rarity_color() then "/pokemon-b-common.mse-include/rarity-wt-common.png" else "/pokemon-b-common.mse-include/rarity-bk-common.png" }
			uncommon:	{ if is_outline() then "/pokemon-b-common.mse-include/rarity-out-uncommon.png" else if rarity_color() then "/pokemon-b-common.mse-include/rarity-wt-uncommon.png" else "/pokemon-b-common.mse-include/rarity-bk-uncommon.png" }
			rare:		{ if is_outline() then "/pokemon-b-common.mse-include/rarity-out-rare.png" else if rarity_color() then "/pokemon-b-common.mse-include/rarity-wt-rare.png" else "/pokemon-b-common.mse-include/rarity-bk-rare.png" }
			extra rare:	{ if is_outline() then "/pokemon-b-common.mse-include/rarity-out-erare.png" else if rarity_color() then "/pokemon-b-common.mse-include/rarity-wt-erare.png" else "/pokemon-b-common.mse-include/rarity-bk-erare.png" }
#########Text overlay that says "weakness"
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	weakoverlay:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 6
		visible: { wrr_ov_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: { if is_two_tone() then rgba(0,0,0,0) else if is_wt_text() then rgb(255,255,255) else rgb(0,0,0) }
#########Text overlay that says "resistance"
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	resoverlay:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 6
		visible: { wrr_ov_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: { if is_two_tone() then rgba(0,0,0,0) else if is_wt_text() then rgb(255,255,255) else rgb(0,0,0) }
#########Text overlay that says "retreat cost"
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	retoverlay:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 6
		visible: { wrr_ov_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: { if is_two_tone() then rgba(0,0,0,0) else if is_wt_text() then rgb(255,255,255) else rgb(0,0,0) }
#########Card Title
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	card name:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_visible() }
		z index: 6
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: { if is_wt_top() then rgb(255,255,255) else rgb(0,0,0) }
#########HP Text
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	hp:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 6
		alignment: { hp_align() }
		visible: { hp_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: { hp_color() }
#########The Weakness for pokemon and doubles as the top energy top marker for energy
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	weakness:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 6
		always symbol: true
		visible: { weak_visible() }
		alignment: { weak_align() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: { if is_two_tone() then rgba(0,0,0,0) else if is_wt_text() then rgb(255,255,255) else rgb(0,0,0) }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
#########The resistance for pokemon
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	resistance:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 6
		always symbol: true
		visible: { resist_visible() }
		alignment: { resist_align() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: { if is_two_tone() then rgba(0,0,0,0) else if is_wt_text() then rgb(255,255,255) else rgb(0,0,0) }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
#########The retreat cost fot pokemon uses a poke-a-energy symbol font only,
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	retreat cost:
		left: { retreat_left() }
		top: { retreat_top() }
		width: { retreat_width() }
		height: { retreat_height() }
		z index: 6
		visible: { retreat_visible() }
		symbol font:
			name: { retreat_symbol_font() }
			size: { retreat_symbol_size() }
		always symbol: true
		alignment: { retreat_align() }
#########Flavor Text
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	flavor text:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 6
		visible: { flavor_visible() }
		alignment: { flavor_align() }
		font:
			name: { flavor_font() }
			scale down to: 6
			weight: { flavor_weight() }
			style: { flavor_style() }
			size: { flavor_size() }
			color: { if is_two_tone() then rgba(0,0,0,0) else if is_wt_text() then rgb(255,255,255) else rgb(0,0,0) }
		line height soft: { flavor_lh_soft() }
#########The pokemon this one evolves from
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	evolution reminder 1:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_rem_height() }
		alignment: { evolution_align() }
		z index: 6
		visible: { evolution_rem_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: { evolution_color() }
	evolution text 1:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_txt_height() }
		alignment: { evolution_align() }
		z index: 6
		visible: { evolution_txt_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: { evolution_color() }
######### User input, the actual pokemon it is evolved from
	evolution entry:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 6
		visible: { evo_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: { evolution_color() }
#########This is the reminder text explaining the action to take for this evolution
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	evolution reminder 2:
		left: { evorule_left() }
		top: { evorule_top() }
		width: { evorule_width() }
		height: { evorule_rem_height() }
		visible: { evorule_rem_visible() }
		alignment: { evorule_align() }
		z index: 6
		font:
			name: { evorule_font() }
			weight: { evorule_weight() }
			style: { evorule_style() }
			size: { evorule_size() }
			color: { evorule_color() }
	evolution text 2:
		left: { evorule_left() }
		top: { evorule_top() }
		width: { evorule_width() }
		height: { evorule_txt_height() }
		visible: { evorule_txt_visible() }
		alignment: { evorule_align() }
		z index: 6
		font:
			name: { evorule_font() }
			weight: { evorule_weight() }
			style: { evorule_style() }
			size: { evorule_size() }
			color: { evorule_color() }
#########Image showing the evolution line of the evolved pokemon
	evolution pic:
		left: { x_left(if is_energy() and card.energy_type=="Basic" and card.card_color_1=="User Defined" then basic_energy_left() else if styling.Card_Face=="Neo" then if stage()=="Baby" then 38 else 16 else 32) }
		top: { y_top(if is_energy() and card.energy_type=="Basic" and card.card_color_1=="User Defined" then basic_energy_top() else if styling.Card_Face=="Neo" then if stage()=="Baby" then 297 else 29 else 40) }
		width: { fun_expand_size(if is_energy() and card.energy_type=="Basic" and card.card_color_1=="User Defined" then basic_energy_width() else if styling.Card_Face=="Neo" then if stage()=="Baby" then 41 else 45 else 45) }
		height: { fun_expand_size(if is_energy() and card.energy_type=="Basic" and card.card_color_1=="User Defined" then basic_energy_width() else if is_pokemon() then if stage()=="Basic" then 0 else if styling.Card_Face=="Neo" then if stage()=="Baby" then 37 else 43 else 40 else 0) }
		z index: 6
		mask: { if is_energy() and card.energy_type=="Basic" and card.card_color_1=="User Defined" then "/pokemon-b-common.mse-include/mask-e-large.png" else if styling.Card_Face=="Neo" then "/pokemon-b-common.mse-include/mask-p-stage-evolution.png" else "/pokemon-b-common.mse-include/mask-blank.png" }
		visible: { if (is_pokemon() and not(stage()=="Basic")) or (is_energy() and card.energy_type=="Basic" and card.card_color_1=="User Defined") then "yes" else "no" }
#########Text on the stage bar & basic Pokemon for Classic/Neo
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	title reminder 1 1:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_rem_1_height() }
		z index: 6
		visible: { title_rem_1_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: { title_1_color() }
	title text 1:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_txt_1_height() }
		z index: 6
		visible: { title_txt_1_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: { title_1_color() }
#########This text explains the the rules of the trainers and the larger red text for baby pokemon
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	special rule reminder 1 1:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_rem_height() }
		z index: 6
		visible: { special_rule_rem_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: { special_rule_color() }
	special rule text 1:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_txt_height() }
		z index: 6
		visible: { special_rule_txt_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: { special_rule_color() }
#########This text explains that baby pokemon are also basic pokemon
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	ability reminder 1 1:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_rem_1_height() }
		alignment: { ability_1_align() }
		z index: 6
		visible: { ability_rem_1_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: { ability_1_color() }
	ability text 1:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_txt_1_height() }
		alignment: { ability_1_align() }
		z index: 6
		visible: { ability_txt_1_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: { ability_1_color() }
#########This text explains shiny pokemon rule.
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	ability reminder 2 1:
		left: { ability_2_left() }
		top: { ability_2_top() }
		width: { ability_2_width() }
		height: { ability_rem_2_height() }
		alignment: { ability_2_align() }
		z index: 6
		visible: { ability_rem_2_visible() }
		font:
			name: { ability_2_font() }
			weight: { ability_2_weight() }
			style: { ability_2_style() }
			size: { ability_2_size() }
			color: { ability_2_color() }
	ability text 2:
		left: { ability_2_left() }
		top: { ability_2_top() }
		width: { ability_2_width() }
		height: { ability_txt_2_height() }
		alignment: { ability_2_align() }
		z index: 6
		visible: { ability_txt_2_visible() }
		font:
			name: { ability_2_font() }
			weight: { ability_2_weight() }
			style: { ability_2_style() }
			size: { ability_2_size() }
			color: { ability_2_color() }
######################## Rule Text everything that follows within this layer is Attack/Rule Text on the cards.
#########Rules text used by energy and trainers, kept separate from pokemon because of the scale down issue
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	rule np 1:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 6
		visible: { rule_np_1_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: { rgb(0,0,0) }
#########The next field lists the cost of the first attack
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	cost classic 1:
		left: { cost_1_left() }
		top: { cost_1_top() }
		width: { cost_1_width() }
		height: { cost_1_height() }
		z index: 6
		visible: { cost_1_visible() }
		alignment: { cost_align() }
		always symbol: true
		symbol font:
			name: { cost_symbol_font() }
			size: { cost_symbol_size() }
#########This shows the 1st attacks damage
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	damage 1:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 6
		visible: { damage_1_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: { if is_two_tone() then rgba(0,0,0,0) else if is_wt_text() then rgb(255,255,255) else rgb(0,0,0) }
#########This field is the title and rules text
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	rule text 1:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_1_height() }
		z index: 6
		visible: { rule_1_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: { if is_two_tone() then rgba(0,0,0,0) else if is_wt_text() then rgb(255,255,255) else rgb(0,0,0) }
	rule reminder 1 1:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_rem_1_height() }
		z index: 6
		visible: { rule_rem_1_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: { if is_two_tone() then rgba(0,0,0,0) else if is_wt_text() then rgb(255,255,255) else rgb(0,0,0) }
#########The next fields lists the cost of the second attack
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	cost classic 2:
		left: { cost_2_left() }
		top: { cost_2_top() }
		width: { cost_2_width() }
		height: { cost_2_height() }
		z index: 6
		visible: { cost_2_visible() }
		alignment: { cost_align() }
		always symbol: true
		symbol font:
			name: { cost_symbol_font() }
			size: { cost_symbol_size() }
#########This shows the 2nd attacks damage
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	damage 2:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 6
		visible: { damage_2_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: { if is_two_tone() then rgba(0,0,0,0) else if is_wt_text() then rgb(255,255,255) else rgb(0,0,0) }
#########This field is the title and rules text
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	rule text 2:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 6
		visible: { rule_2_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: { if is_two_tone() then rgba(0,0,0,0) else if is_wt_text() then rgb(255,255,255) else rgb(0,0,0) }
#########The next field lists the cost of the third attack
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	cost classic 3:
		left: { cost_3_left() }
		top: { cost_3_top() }
		width: { cost_3_width() }
		height: { cost_3_height() }
		z index: 6
		visible: { cost_3_visible() }
		alignment: { cost_align() }
		always symbol: true
		symbol font:
			name: { cost_symbol_font() }
			size: { cost_symbol_size() }
#########This shows the 3rd attacks damage
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	damage 3:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 6
		visible: { damage_3_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: { if is_two_tone() then rgba(0,0,0,0) else if is_wt_text() then rgb(255,255,255) else rgb(0,0,0) }
#########This field is the title and rules text
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	rule text 3:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 6
		visible: { rule_3_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: { if is_two_tone() then rgba(0,0,0,0) else if is_wt_text() then rgb(255,255,255) else rgb(0,0,0) }

	######################## Choice layers 8
	######################## This layer displays the informational text for the use of this tool template
#########This is the image field to show the notification for the tournament placement
	place:
		left: { x_left(if is_pokemon() then 48 else if is_trainer() then 42 else 22) }
		top: { y_top(if is_pokemon() then if styling.Card_Face=="Neo" then 248 else 251 else if is_trainer() then 270 else 357) }
		width: { fun_expand_size(94) }
		height: { fun_expand_size(if contains(card.art_options, match: "Add Tournament Place Icons") then 14 else 0) }
		visible: { if contains(card.art_options, match: "Add Tournament Place Icons") then "yes" else "no" }
		z index: 8
		render style: image
		popup style: in place
		choice images:
			1st:	/pokemon-b-common.mse-include/place-1.png
			2nd:	/pokemon-b-common.mse-include/place-2.png
			3rd:	/pokemon-b-common.mse-include/place-3.png
			4th:	/pokemon-b-common.mse-include/place-4.png
			5th:	/pokemon-b-common.mse-include/place-5.png
			6th:	/pokemon-b-common.mse-include/place-6.png
			7th:	/pokemon-b-common.mse-include/place-7.png
			8th:	/pokemon-b-common.mse-include/place-8.png
############################################################## Extra Card Fields ################################################################################################3
############################# Non-User Input Choice Fields for Images
extra card field:
	type: choice
	name: gym trainer
	show statistics: false
	card list allow: false
	choice: sabrina
	choice: misty
	choice: giovanni
	choice: koga
	choice: team rocket
	choice: erika
	choice: brock
	choice: blaine
	choice: lt surge
extra card field:
	type: choice
	name: crown 1
	show statistics: false
	card list allow: false
	editable: false
	save value: false
	choice: crown
extra card field:
	type: choice
	name: crown 2
	show statistics: false
	card list allow: false
	editable: false
	save value: false
	choice: crown
extra card field:
	type: choice
	name: bar
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	choice: bar
extra card field:
	type: choice
	name: bar 2
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	choice: bar
extra card field:
	type: choice
	name: bar 3
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	choice: bar
extra card field:
	type: choice
	name: bar 4
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	choice: bar
extra card field:
	type: choice
	name: bar 5
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	choice: bar
extra card field:
	type: choice
	name: bar 6
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	choice: bar
extra card field:
	type: choice
	name: bar 7
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	choice: bar
extra card field:
	type: choice
	name: bar 8
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	choice: bar
extra card field:
	type: choice
	name: bar 9
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	choice: bar
extra card field:
	type: choice
	name: bar 10
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	choice: bar

extra card style:
	######################## Background Layer -14
	######################## this layer provids the background image modified slightly for Dual-Type (changed some z-index)
	gym trainer:
		left: { x_left(244) }
		top: { y_top(425) }
		width: { fun_expand_size(100) }
		height: { fun_expand_size(if is_pokemon() and styling.Card_Face=="Gym" and not(contains(card.general_options_01, match: "User Image for Gym Trainer (Gym Card Face Only)")) then 58 else 0) }
		visible: { if is_pokemon() and styling.Card_Face=="Gym" and not(contains(card.general_options_01, match: "User Image for Gym Trainer (Gym Card Face Only)")) then "yes" else "no" }
		render style: image
		popup style: in place
		z index: 1
		choice images:
			sabrina:	gym-icon-sabrina.png
			misty:		gym-icon-misty.png
			koga:		gym-icon-koga.png
			giovanni:	gym-icon-giovanni.png
			team rocket:	gym-icon-rocket.png
			koga:		gym-icon-koga.png
			erika:		gym-icon-erika.png
			brock:		gym-icon-brock.png
			blaine:		gym-icon-blaine.png
			lt surge:	gym-icon-ltsurge.png
	crown 1:
		left: { x_left(if card.card_type=="Dual-Type" then energy_left()-4-energy_left_difference() else energy_left()-4) }
		top: { y_top(energy_top()-6) }
		width: { fun_expand_size(energy_width()+7) }
		height: { fun_expand_size(energy_width()-5) }
		z index: 2
		render style: image
		visible: { is_pokemon() and contains(card.general_options_01, match: "Crown Over Left or Single") }
		image:
			script: "crown.png"
	crown 2:
		left: { x_left(energy_left()-5+energy_right_difference()) }
		top: { y_top(energy_top()-6) }
		width: { fun_expand_size(energy_width()+7) }
		height: { fun_expand_size(energy_width()-5) }
		z index: 1
		render style: image
		visible: { card.card_type=="Dual-Type" and contains(card.general_options_01, match: "Crown Over Right") }
		image:
			script: "crown.png"
	######################## Overborder Frame 4
	######################## This layer is for items needed just before the user input text.
#########These bars used for various things
	bar:
		left: { x_left((if is_trainer() then 34 else 25)-(if is_outline() then 1 else 0)) }
		top: { y_top((if is_energy() then 400 else 420)-(if is_outline() then 1 else 0)) }
		width: { fun_expand_size(319+(if is_outline() then 2 else 0)) }
		height: { fun_expand_size(if (is_pokemon() or (is_energy() and card.energy_type=="Special")) and not(is_two_tone()) then 2+(if is_outline() then 2 else 0) else 0) }
		visible: { if (is_pokemon() or (is_energy() and card.energy_type=="Special")) and not(is_two_tone()) then "yes" else "no" }
		z index: 6
		render style: image
		image: { if is_outline() then "/pokemon-b-common.mse-include/bar-outline.png" else if is_wt_text() then "/pokemon-b-common.mse-include/bar-wt.png" else "/pokemon-b-common.mse-include/bar-bk.png" }
	bar 2:
		left: { x_left(27-(if is_outline() then 1 else 0)) }
		top: { y_top(divider_height_1()-(if is_outline() then 2 else 1)) }
		width: { fun_expand_size(315+(if is_outline() then 2 else 0)) }
		height: { fun_expand_size(if is_pokemon() and attack_no()>=2 and not(stage()=="Baby" and styling.Card_Face=="Neo") and not(is_two_tone()) then 2+(if is_outline() then 2 else 0) else 0) }
		z index: 6
		visible: { if is_pokemon() and attack_no()>=2 and not(stage()=="Baby" and styling.Card_Face=="Neo") and not(is_two_tone()) then "yes" else "no" }
		render style: image
		image: { if is_outline() then "/pokemon-b-common.mse-include/bar-outline.png" else if is_wt_text() then "/pokemon-b-common.mse-include/bar-wt.png" else "/pokemon-b-common.mse-include/bar-bk.png" }
	bar 3:
		left: { x_left(27-(if is_outline() then 1 else 0)) }
		top: { y_top(divider_height_2()-(if is_outline() then 2 else 1)) }
		width: { fun_expand_size(315+(if is_outline() then 2 else 0)) }
		height: { fun_expand_size(if is_pokemon() and attack_no()==3 and not(is_two_tone()) then 2+(if is_outline() then 2 else 0) else 0) }
		z index: 6
		visible: { if is_pokemon() and attack_no()==3 and not(is_two_tone()) then "yes" else "no" }
		render style: image
		image: { if is_outline() then "/pokemon-b-common.mse-include/bar-outline.png" else if is_wt_text() then "/pokemon-b-common.mse-include/bar-wt.png" else "/pokemon-b-common.mse-include/bar-bk.png" }
	bar 4:
		left: { x_left(27-(if is_outline() then 1 else 0)) }
		top: { y_top(444-(if is_outline() then 1 else 0)) }
		width: { fun_expand_size(196+(if is_outline() then 2 else 0)) }
		height: { fun_expand_size(if is_pokemon() and styling.Card_Face=="Gym" and not(is_two_tone()) then 2+(if is_outline() then 2 else 0) else 0) }
		z index: 6
		visible: { if is_pokemon() and styling.Card_Face=="Gym" and not(is_two_tone()) then "yes" else "no" }
		render style: image
		image: { if is_outline() then "/pokemon-b-common.mse-include/bar-outline.png" else if is_wt_text() then "/pokemon-b-common.mse-include/bar-wt.png" else "/pokemon-b-common.mse-include/bar-bk.png" }
	bar 5:
		left: { x_left(27-(if is_outline() then 1 else 0)) }
		top: { y_top(464-(if is_outline() then 1 else 0)) }
		width: { fun_expand_size(196+(if is_outline() then 2 else 0)) }
		height: { fun_expand_size(if is_pokemon() and styling.Card_Face=="Gym" and not(is_two_tone()) then 2+(if is_outline() then 2 else 0) else 0) }
		z index: 6
		visible: { if is_pokemon() and styling.Card_Face=="Gym" and not(is_two_tone()) then "yes" else "no" }
		render style: image
		image: { if is_outline() then "/pokemon-b-common.mse-include/bar-outline.png" else if is_wt_text() then "/pokemon-b-common.mse-include/bar-wt.png" else "/pokemon-b-common.mse-include/bar-bk.png" }
	bar 6:
		left: { x_left(25) }
		top: { y_top(420) }
		width: { fun_expand_size(319) }
		height: { fun_expand_size(if is_two_tone() then 2 else 0) }
		z index: -16
		visible: { if is_two_tone() then "yes" else "no" }
		render style: image
		image: { "/pokemon-b-common.mse-include/bar-bk.png" }
	bar 7:
		left: { x_left(27) }
		top: { y_top(divider_height_1()-1) }
		width: { fun_expand_size(315) }
		height: { fun_expand_size(if is_two_tone() and attack_no()>=2 and not(stage()=="Baby" and styling.Card_Face=="Neo") then 2 else 0) }
		z index: -16
		visible: { if is_two_tone() and attack_no()>=2 and not(stage()=="Baby" and styling.Card_Face=="Neo") then "yes" else "no" }
		render style: image
		image: { "/pokemon-b-common.mse-include/bar-bk.png" }
	bar 8:
		left: { x_left(27) }
		top: { y_top(divider_height_2()-1) }
		width: { fun_expand_size(315) }
		height: { fun_expand_size(if is_two_tone() and attack_no()==3 then 2 else 0) }
		z index: -16
		visible: { if is_two_tone() and attack_no()==3 then "yes" else "no" }
		render style: image
		image: { "/pokemon-b-common.mse-include/bar-bk.png" }
	bar 9:
		left: { x_left(27) }
		top: { y_top(444) }
		width: { fun_expand_size(196) }
		height: { fun_expand_size(if is_two_tone() and styling.Card_Face=="Gym" then 2 else 0) }
		z index: -16
		visible: { if is_two_tone() and styling.Card_Face=="Gym" then "yes" else "no" }
		render style: image
		image: { "/pokemon-b-common.mse-include/bar-bk.png" }
	bar 10:
		left: { x_left(27) }
		top: { y_top(464) }
		width: { fun_expand_size(196) }
		height: { fun_expand_size(if is_two_tone() and styling.Card_Face=="Gym" then 2 else 0) }
		z index: -16
		visible: { if is_two_tone() and styling.Card_Face=="Gym" then "yes" else "no" }
		render style: image
		image: { "/pokemon-b-common.mse-include/bar-bk.png" }

############################# Duplicate text files found behind the Text Popout Image for two-tone text
extra card field:
	type: text
	name: illustrator dup
	show statistics: false
	default: set.artist
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright dup
	show statistics: false
	default: set.copyright
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number 2t dup
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator 2t dup
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright 2t dup
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay 2t dup
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay 2t dup
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay 2t dup
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness 2t dup
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance 2t dup
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: flavor text 2t dup
	show statistics: false
	default: card.flavor_text
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: evolution 1 2t dup
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry 2t dup
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 2 2t dup
	show statistics: false
	default: evorule_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 2 2t dup
	show statistics: false
	default: card.pokedex_text_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: rule np 1 2t dup
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: damage 1 2t dup
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: rule text 1 2t dup
	show statistics: false
	default: rule_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: damage 2 2t dup
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: rule text 2 2t dup
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: damage 3 2t dup
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: rule text 3 2t dup
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card style:
#########Duplicate for when non-card input
	illustrator dup:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { if contains(card.text_options_1, match: "Use Primary Set Artist") then ill_height() else 0 }
		z index: 6
		alignment: { ill_align() }
		visible: { contains(card.text_options_1, match: "Use Primary Set Artist") and not(is_energy() and card.energy_type=="Basic" and not(basic_energy_suffix()=="Special" or basic_energy_suffix()=="User Image")) }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: { ill_color() }
#########Duplicate for when non-card input
	copyright dup:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { if contains(set.visibility_options, match: "Visible Copyright on all cards") and contains(card.text_options_1, match: "Use Set Copyright") then copy_height() else 0 }
		z index: 6
		alignment: { copy_align() }
		visible: { if contains(set.visibility_options, match: "Visible Copyright on all cards") and contains(card.text_options_1, match: "Use Set Copyright") then "yes" else "no" }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: { copy_color() }
	card number 2t dup:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: -16
		alignment: { card_no_align() }
		visible: { if is_two_tone() and contains(set.visibility_options, match: "Visible Card Numbers on all cards") then "yes" else "no" }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(0,0,0)
	illustrator 2t dup:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: -16
		alignment: { ill_align() }
		visible: { is_two_tone() and not(is_energy() and card.energy_type=="Basic" and not(basic_energy_suffix()=="Special" or basic_energy_suffix()=="User Image")) }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(0,0,0)
	copyright 2t dup:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: -16
		alignment: { copy_align() }
		visible: { if is_two_tone() and contains(set.visibility_options, match: "Visible Copyright on all cards") then "yes" else "no" }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(0,0,0)
	weakoverlay 2t dup:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: -16
		visible: { is_two_tone() and wrr_ov_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(0,0,0)
	resoverlay 2t dup:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: -16
		visible: { is_two_tone() and wrr_ov_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(0,0,0)
	retoverlay 2t dup:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: -16
		visible: { is_two_tone() and wrr_ov_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(0,0,0)
	weakness 2t dup:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: -16
		always symbol: true
		visible: { is_two_tone() and weak_visible() }
		alignment: { weak_align() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(0,0,0)
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
	resistance 2t dup:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: -16
		always symbol: true
		visible: { is_two_tone() and resist_visible() }
		alignment: { resist_align() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(0,0,0)
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
	flavor text 2t dup:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: -16
		visible: { is_two_tone() and flavor_visible() }
		alignment: { flavor_align() }
		font:
			name: { flavor_font() }
			scale down to: 6
			weight: { flavor_weight() }
			style: { flavor_style() }
			size: { flavor_size() }
			color: { rgb(0,0,0) }
		line height soft: { flavor_lh_soft() }
	evolution 1 2t dup:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: -16
		visible: { evolution_two_tone_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: { rgb(0,0,0) }
	evolution entry 2t dup:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: -16
		visible: { evo_two_tone_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: { rgb(0,0,0) }
	evolution 2 2t dup:
		left: { evorule_left() }
		top: { evorule_top() }
		width: { evorule_width() }
		height: { evorule_height() }
		visible: { evorule_two_tone_visible() }
		alignment: { evorule_align() }
		z index: -16
		font:
			name: { evorule_font() }
			weight: { evorule_weight() }
			style: { evorule_style() }
			size: { evorule_size() }
			color: { rgb(0,0,0) }
	pokedex text 2 2t dup:
		left: { pokedex2_left() }
		top: { pokedex2_top() }
		width: { pokedex2_width() }
		height: { pokedex2_height() }
		z index: -16
		alignment: { pokedex2_align() }
		visible: { pokedex2_two_tone_visible() }
		font
			name: { pokedex2_font() }
			weight: { pokedex2_weight() }
			style: { pokedex2_style() }
			size: { pokedex2_size() }
			color: rgb(0,0,0)
	rule np 1 2t dup:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: -16
		visible: { is_two_tone() and rule_np_1_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font_tt() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: { rgb(0,0,0) }
	damage 1 2t dup:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: -16
		visible: { is_two_tone() and damage_1_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: { rgb(0,0,0) }
	rule text 1 2t dup:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_all_1_height() }
		z index: -16
		visible: { rule_1_two_tone_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font_tt() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: { rgb(0,0,0) }
	damage 2 2t dup:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: -16
		visible: { is_two_tone() and damage_2_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: { rgb(0,0,0) }
	rule text 2 2t dup:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: -16
		visible: { is_two_tone() and rule_2_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font_tt() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: { rgb(0,0,0) }
	damage 3 2t dup:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: -16
		visible: { is_two_tone() and damage_3_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: { rgb(0,0,0) }
	rule text 3 2t dup:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: -16
		visible: { is_two_tone() and rule_3_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font_tt() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: { rgb(0,0,0) }
extra card field:
	type: text
	name: card name blur 01
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name blur 02
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name blur 03
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name blur 04
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator blur 01
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator blur 02
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator blur 03
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator blur 04
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright blur 01
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright blur 02
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright blur 03
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright blur 04
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: stuff blur 01
	show statistics: false
	default: reverse(set_filter("Extra Special Monster"))
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay blur 01
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay blur 02
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay blur 03
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay blur 04
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay blur 01
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay blur 02
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay blur 03
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay blur 04
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay blur 01
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay blur 02
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay blur 03
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay blur 04
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number blur 01
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number blur 02
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number blur 03
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number blur 04
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp blur 01
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp blur 02
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp blur 03
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp blur 04
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness blur 01
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness blur 02
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness blur 03
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness blur 04
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance blur 01
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance blur 02
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance blur 03
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance blur 04
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: flavor text blur 01
	show statistics: false
	default: card.flavor_text
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: flavor text blur 02
	show statistics: false
	default: card.flavor_text
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: flavor text blur 03
	show statistics: false
	default: card.flavor_text
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: flavor text blur 04
	show statistics: false
	default: card.flavor_text
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: evolution 1 blur 01
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 blur 02
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 blur 03
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 blur 04
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry blur 01
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry blur 02
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry blur 03
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry blur 04
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 2 blur 01
	show statistics: false
	default: evorule_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 2 blur 02
	show statistics: false
	default: evorule_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 2 blur 03
	show statistics: false
	default: evorule_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 2 blur 04
	show statistics: false
	default: evorule_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 blur 01
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 blur 02
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 blur 03
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 blur 04
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 blur 01
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 blur 02
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 blur 03
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 blur 04
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 2 blur 01
	show statistics: false
	default: card.pokedex_text_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 2 blur 02
	show statistics: false
	default: card.pokedex_text_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 2 blur 03
	show statistics: false
	default: card.pokedex_text_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 2 blur 04
	show statistics: false
	default: card.pokedex_text_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 blur 01
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 blur 02
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 blur 03
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 blur 04
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 2 blur 01
	show statistics: false
	default: ability_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 2 blur 02
	show statistics: false
	default: ability_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 2 blur 03
	show statistics: false
	default: ability_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 2 blur 04
	show statistics: false
	default: ability_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: special rule 1 blur 01
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: special rule 1 blur 02
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: special rule 1 blur 03
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: special rule 1 blur 04
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 blur 01
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 blur 02
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 blur 03
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 blur 04
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: damage 1 blur 01
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 1 blur 02
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 1 blur 03
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 1 blur 04
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: rule text 1 blur 01
	show statistics: false
	default: rule_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 1 blur 02
	show statistics: false
	default: rule_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 1 blur 03
	show statistics: false
	default: rule_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 1 blur 04
	show statistics: false
	default: rule_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: damage 2 blur 01
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 2 blur 02
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 2 blur 03
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 2 blur 04
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: rule text 2 blur 01
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 2 blur 02
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 2 blur 03
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 2 blur 04
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: damage 3 blur 01
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 3 blur 02
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 3 blur 03
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 3 blur 04
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: rule text 3 blur 01
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 3 blur 02
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 3 blur 03
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 3 blur 04
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card style:
	card name blur 01:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_blur() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	card name blur 02:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_blur() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	card name blur 03:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_blur() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	card name blur 04:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_blur() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	illustrator blur 01:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_blur() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	illustrator blur 02:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_blur() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	illustrator blur 03:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_blur() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	illustrator blur 04:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_blur() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	card number blur 01:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_blur() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	card number blur 02:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_blur() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	card number blur 03:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_blur() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	card number blur 04:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_blur() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	copyright blur 01:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_blur() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	copyright blur 02:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_blur() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	copyright blur 03:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_blur() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	copyright blur 04:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_blur() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	weakoverlay blur 01:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_blur() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	weakoverlay blur 02:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_blur() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	weakoverlay blur 03:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_blur() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	weakoverlay blur 04:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_blur() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	resoverlay blur 01:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_blur() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	resoverlay blur 02:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_blur() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	resoverlay blur 03:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_blur() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	resoverlay blur 04:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_blur() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	stuff blur 01:
		left: { x_left(322) }
		top: { y_top(496) }
		width: { fun_expand_size(33) }
		height: { fun_expand_size(14) }
		z index: 10
		font:
			name: "GillSansCdn"
			size: { fun_expand_font(12) }
			weight: "bold"
			color: rgb(191,186,47)
	retoverlay blur 01:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_blur() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	retoverlay blur 02:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_blur() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	retoverlay blur 03:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_blur() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	retoverlay blur 04:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_blur() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	hp blur 01:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_blur() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	hp blur 02:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_blur() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	hp blur 03:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_blur() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	hp blur 04:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_blur() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	weakness blur 01:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_blur() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	weakness blur 02:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_blur() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	weakness blur 03:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_blur() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	weakness blur 04:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_blur() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	resistance blur 01:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_blur() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	resistance blur 02:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_blur() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	resistance blur 03:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_blur() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	resistance blur 04:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_blur() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	flavor text blur 01:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_blur() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			scale down to: 6
			weight: { flavor_weight() }
			style: { flavor_style() }
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	flavor text blur 02:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_blur() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			scale down to: 6
			weight: { flavor_weight() }
			style: { flavor_style() }
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	flavor text blur 03:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_blur() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			weight: { flavor_weight() }
			scale down to: 6
			style: { flavor_style() }
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	flavor text blur 04:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_blur() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			weight: { flavor_weight() }
			scale down to: 6
			style: { flavor_style() }
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	evolution 1 blur 01:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_blur() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	evolution 1 blur 02:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_blur() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	evolution 1 blur 03:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_blur() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	evolution 1 blur 04:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_blur() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	evolution entry blur 01:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_blur() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	evolution entry blur 02:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_blur() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	evolution entry blur 03:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_blur() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	evolution entry blur 04:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_blur() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	evolution 2 blur 01:
		left: { evorule_left() }
		top: { evorule_top() }
		width: { evorule_width() }
		height: { evorule_height() }
		visible: { evorule_outline_blur() }
		alignment: { evorule_align() }
		z index: 5
		font:
			name: { evorule_font() }
			weight: { evorule_weight() }
			style: { evorule_style() }
			size: { evorule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	evolution 2 blur 02:
		left: { evorule_left() }
		top: { evorule_top() }
		width: { evorule_width() }
		height: { evorule_height() }
		visible: { evorule_outline_blur() }
		alignment: { evorule_align() }
		z index: 5
		font:
			name: { evorule_font() }
			weight: { evorule_weight() }
			style: { evorule_style() }
			size: { evorule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	evolution 2 blur 03:
		left: { evorule_left() }
		top: { evorule_top() }
		width: { evorule_width() }
		height: { evorule_height() }
		visible: { evorule_outline_blur() }
		alignment: { evorule_align() }
		z index: 5
		font:
			name: { evorule_font() }
			weight: { evorule_weight() }
			style: { evorule_style() }
			size: { evorule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	evolution 2 blur 04:
		left: { evorule_left() }
		top: { evorule_top() }
		width: { evorule_width() }
		height: { evorule_height() }
		visible: { evorule_outline_blur() }
		alignment: { evorule_align() }
		z index: 5
		font:
			name: { evorule_font() }
			weight: { evorule_weight() }
			style: { evorule_style() }
			size: { evorule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	title 1 blur 01:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_blur() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	title 1 blur 02:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_blur() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	title 1 blur 03:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_blur() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	title 1 blur 04:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_blur() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
#################all title 2 are place in the z-index -5 to be below the frame
	title 2 blur 01:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: -5
		visible: { title_2_outline_blur() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	title 2 blur 02:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: -5
		visible: { title_2_outline_blur() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	title 2 blur 03:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: -5
		visible: { title_2_outline_blur() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	title 2 blur 04:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: -5
		visible: { title_2_outline_blur() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	pokedex text 2 blur 01:
		left: { pokedex2_left() }
		top: { pokedex2_top() }
		width: { pokedex2_width() }
		height: { pokedex2_height() }
		z index: 5
		alignment: { pokedex2_align() }
		visible: { pokedex2_outline_blur() }
		font
			name: { pokedex2_font() }
			weight: { pokedex2_weight() }
			style: { pokedex2_style() }
			size: { pokedex2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	pokedex text 2 blur 02:
		left: { pokedex2_left() }
		top: { pokedex2_top() }
		width: { pokedex2_width() }
		height: { pokedex2_height() }
		z index: 5
		alignment: { pokedex2_align() }
		visible: { pokedex2_outline_blur() }
		font
			name: { pokedex2_font() }
			weight: { pokedex2_weight() }
			style: { pokedex2_style() }
			size: { pokedex2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	pokedex text 2 blur 03:
		left: { pokedex2_left() }
		top: { pokedex2_top() }
		width: { pokedex2_width() }
		height: { pokedex2_height() }
		z index: 5
		alignment: { pokedex2_align() }
		visible: { pokedex2_outline_blur() }
		font
			name: { pokedex2_font() }
			weight: { pokedex2_weight() }
			style: { pokedex2_style() }
			size: { pokedex2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	pokedex text 2 blur 04:
		left: { pokedex2_left() }
		top: { pokedex2_top() }
		width: { pokedex2_width() }
		height: { pokedex2_height() }
		z index: 5
		alignment: { pokedex2_align() }
		visible: { pokedex2_outline_blur() }
		font
			name: { pokedex2_font() }
			weight: { pokedex2_weight() }
			style: { pokedex2_style() }
			size: { pokedex2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	special rule 1 blur 01:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_blur() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	special rule 1 blur 02:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_blur() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	special rule 1 blur 03:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_blur() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	special rule 1 blur 04:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_blur() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	ability 1 blur 01:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_blur() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	ability 1 blur 02:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_blur() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	ability 1 blur 03:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_blur() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	ability 1 blur 04:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_blur() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	ability 2 blur 01:
		left: { ability_2_left() }
		top: { ability_2_top() }
		width: { ability_2_width() }
		height: { ability_2_height() }
		alignment: { ability_2_align() }
		z index: 5
		visible: { ability_2_outline_blur() }
		font:
			name: { ability_2_font() }
			weight: { ability_2_weight() }
			style: { ability_2_style() }
			size: { ability_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	ability 2 blur 02:
		left: { ability_2_left() }
		top: { ability_2_top() }
		width: { ability_2_width() }
		height: { ability_2_height() }
		alignment: { ability_2_align() }
		z index: 5
		visible: { ability_2_outline_blur() }
		font:
			name: { ability_2_font() }
			weight: { ability_2_weight() }
			style: { ability_2_style() }
			size: { ability_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	ability 2 blur 03:
		left: { ability_2_left() }
		top: { ability_2_top() }
		width: { ability_2_width() }
		height: { ability_2_height() }
		alignment: { ability_2_align() }
		z index: 5
		visible: { ability_2_outline_blur() }
		font:
			name: { ability_2_font() }
			weight: { ability_2_weight() }
			style: { ability_2_style() }
			size: { ability_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	ability 2 blur 04:
		left: { ability_2_left() }
		top: { ability_2_top() }
		width: { ability_2_width() }
		height: { ability_2_height() }
		alignment: { ability_2_align() }
		z index: 5
		visible: { ability_2_outline_blur() }
		font:
			name: { ability_2_font() }
			weight: { ability_2_weight() }
			style: { ability_2_style() }
			size: { ability_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	rule np 1 blur 01:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_blur() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	rule np 1 blur 02:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_blur() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	rule np 1 blur 03:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_blur() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	rule np 1 blur 04:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_blur() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	damage 1 blur 01:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_blur() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	damage 1 blur 02:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_blur() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	damage 1 blur 03:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_blur() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	damage 1 blur 04:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_blur() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	rule text 1 blur 01:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_all_1_height() }
		z index: 5
		visible: { rule_1_outline_blur() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	rule text 1 blur 02:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_all_1_height() }
		z index: 5
		visible: { rule_1_outline_blur() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	rule text 1 blur 03:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_all_1_height() }
		z index: 5
		visible: { rule_1_outline_blur() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	rule text 1 blur 04:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_all_1_height() }
		z index: 5
		visible: { rule_1_outline_blur() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	damage 2 blur 01:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_blur() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	damage 2 blur 02:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_blur() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	damage 2 blur 03:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_blur() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	damage 2 blur 04:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_blur() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	rule text 2 blur 01:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_blur() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	rule text 2 blur 02:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_blur() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	rule text 2 blur 03:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_blur() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	rule text 2 blur 04:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_blur() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	damage 3 blur 01:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_blur() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	damage 3 blur 02:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_blur() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	damage 3 blur 03:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_blur() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	damage 3 blur 04:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_blur() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	rule text 3 blur 01:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_blur() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	rule text 3 blur 02:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_blur() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	rule text 3 blur 03:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_blur() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	rule text 3 blur 04:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_blur() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
############################# Duplicate text fields for all outline text (regardless of file size, values for medium and small need to be changed to 2, from x: 2/x: -2/y: 2/y: -2 to x: 2/x: -2/y: 2/y: -2)
############################# (None for Retreat Cost / pokedex2)
extra card field:
	type: text
	name: card number out 01
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number out 02
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number out 03
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number out 04
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator out 01
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator out 02
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator out 03
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator out 04
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright out 01
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright out 02
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright out 03
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright out 04
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay out 01
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay out 02
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay out 03
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay out 04
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay out 01
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay out 02
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay out 03
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay out 04
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay out 01
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay out 02
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay out 03
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay out 04
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name out 01
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name out 02
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name out 03
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name out 04
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp out 01
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp out 02
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp out 03
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp out 04
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness out 01
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness out 02
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness out 03
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness out 04
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance out 01
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance out 02
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance out 03
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance out 04
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: flavor text out 01
	show statistics: false
	default: card.flavor_text
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: flavor text out 02
	show statistics: false
	default: card.flavor_text
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: flavor text out 03
	show statistics: false
	default: card.flavor_text
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: flavor text out 04
	show statistics: false
	default: card.flavor_text
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: evolution 1 out 01
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 out 02
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 out 03
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 out 04
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry out 01
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry out 02
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry out 03
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry out 04
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 2 out 01
	show statistics: false
	default: evorule_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 2 out 02
	show statistics: false
	default: evorule_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 2 out 03
	show statistics: false
	default: evorule_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 2 out 04
	show statistics: false
	default: evorule_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 out 01
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 out 02
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 out 03
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 out 04
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 out 01
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 out 02
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 out 03
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 out 04
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 2 out 01
	show statistics: false
	default: card.pokedex_text_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 2 out 02
	show statistics: false
	default: card.pokedex_text_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 2 out 03
	show statistics: false
	default: card.pokedex_text_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 2 out 04
	show statistics: false
	default: card.pokedex_text_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 out 01
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 out 02
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 out 03
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 out 04
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 2 out 01
	show statistics: false
	default: ability_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 2 out 02
	show statistics: false
	default: ability_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 2 out 03
	show statistics: false
	default: ability_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 2 out 04
	show statistics: false
	default: ability_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: special rule 1 out 01
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: special rule 1 out 02
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: special rule 1 out 03
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: special rule 1 out 04
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 out 01
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 out 02
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 out 03
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 out 04
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: damage 1 out 01
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 1 out 02
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 1 out 03
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 1 out 04
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: rule text 1 out 01
	show statistics: false
	default: rule_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 1 out 02
	show statistics: false
	default: rule_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 1 out 03
	show statistics: false
	default: rule_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 1 out 04
	show statistics: false
	default: rule_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: damage 2 out 01
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 2 out 02
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 2 out 03
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 2 out 04
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: rule text 2 out 01
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 2 out 02
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 2 out 03
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 2 out 04
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: damage 3 out 01
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 3 out 02
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 3 out 03
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 3 out 04
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: rule text 3 out 01
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 3 out 02
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 3 out 03
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 3 out 04
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card style:
	card number out 01:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_visible() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	card number out 02:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_visible() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	card number out 03:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_visible() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	card number out 04:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_visible() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	illustrator out 01:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_visible() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	illustrator out 02:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_visible() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	illustrator out 03:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_visible() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	illustrator out 04:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_visible() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	copyright out 01:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_visible() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	copyright out 02:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_visible() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	copyright out 03:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_visible() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	copyright out 04:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_visible() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	weakoverlay out 01:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	weakoverlay out 02:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	weakoverlay out 03:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	weakoverlay out 04:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	resoverlay out 01:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	resoverlay out 02:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	resoverlay out 03:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	resoverlay out 04:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	retoverlay out 01:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	retoverlay out 02:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	retoverlay out 03:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	retoverlay out 04:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	card name out 01:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_visible() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	card name out 02:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_visible() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	card name out 03:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_visible() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	card name out 04:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_visible() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	hp out 01:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	hp out 02:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	hp out 03:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	hp out 04:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	weakness out 01:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_visible() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	weakness out 02:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_visible() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	weakness out 03:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_visible() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	weakness out 04:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_visible() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	resistance out 01:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_visible() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	resistance out 02:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_visible() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	resistance out 03:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_visible() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	resistance out 04:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_visible() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	flavor text out 01:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_visible() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			scale down to: 6
			weight: { flavor_weight() }
			style: { flavor_style() }
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	flavor text out 02:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_visible() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			scale down to: 6
			weight: { flavor_weight() }
			style: { flavor_style() }
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	flavor text out 03:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_visible() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			weight: { flavor_weight() }
			scale down to: 6
			style: { flavor_style() }
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	flavor text out 04:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_visible() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			weight: { flavor_weight() }
			scale down to: 6
			style: { flavor_style() }
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	evolution 1 out 01:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	evolution 1 out 02:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	evolution 1 out 03:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	evolution 1 out 04:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	evolution entry out 01:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	evolution entry out 02:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	evolution entry out 03:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	evolution entry out 04:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	evolution 2 out 01:
		left: { evorule_left() }
		top: { evorule_top() }
		width: { evorule_width() }
		height: { evorule_height() }
		visible: { evorule_outline_visible() }
		alignment: { evorule_align() }
		z index: 5
		font:
			name: { evorule_font() }
			weight: { evorule_weight() }
			style: { evorule_style() }
			size: { evorule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	evolution 2 out 02:
		left: { evorule_left() }
		top: { evorule_top() }
		width: { evorule_width() }
		height: { evorule_height() }
		visible: { evorule_outline_visible() }
		alignment: { evorule_align() }
		z index: 5
		font:
			name: { evorule_font() }
			weight: { evorule_weight() }
			style: { evorule_style() }
			size: { evorule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	evolution 2 out 03:
		left: { evorule_left() }
		top: { evorule_top() }
		width: { evorule_width() }
		height: { evorule_height() }
		visible: { evorule_outline_visible() }
		alignment: { evorule_align() }
		z index: 5
		font:
			name: { evorule_font() }
			weight: { evorule_weight() }
			style: { evorule_style() }
			size: { evorule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	evolution 2 out 04:
		left: { evorule_left() }
		top: { evorule_top() }
		width: { evorule_width() }
		height: { evorule_height() }
		visible: { evorule_outline_visible() }
		alignment: { evorule_align() }
		z index: 5
		font:
			name: { evorule_font() }
			weight: { evorule_weight() }
			style: { evorule_style() }
			size: { evorule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	title 1 out 01:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	title 1 out 02:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	title 1 out 03:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	title 1 out 04:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
#################all title 2 are place in the z-index -5 to be below the frame
	title 2 out 01:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: -5
		visible: { title_2_outline_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	title 2 out 02:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: -5
		visible: { title_2_outline_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	title 2 out 03:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: -5
		visible: { title_2_outline_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	title 2 out 04:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: -5
		visible: { title_2_outline_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	pokedex text 2 out 01:
		left: { pokedex2_left() }
		top: { pokedex2_top() }
		width: { pokedex2_width() }
		height: { pokedex2_height() }
		z index: 5
		alignment: { pokedex2_align() }
		visible: { pokedex2_outline_visible() }
		font
			name: { pokedex2_font() }
			weight: { pokedex2_weight() }
			style: { pokedex2_style() }
			size: { pokedex2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	pokedex text 2 out 02:
		left: { pokedex2_left() }
		top: { pokedex2_top() }
		width: { pokedex2_width() }
		height: { pokedex2_height() }
		z index: 5
		alignment: { pokedex2_align() }
		visible: { pokedex2_outline_visible() }
		font
			name: { pokedex2_font() }
			weight: { pokedex2_weight() }
			style: { pokedex2_style() }
			size: { pokedex2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	pokedex text 2 out 03:
		left: { pokedex2_left() }
		top: { pokedex2_top() }
		width: { pokedex2_width() }
		height: { pokedex2_height() }
		z index: 5
		alignment: { pokedex2_align() }
		visible: { pokedex2_outline_visible() }
		font
			name: { pokedex2_font() }
			weight: { pokedex2_weight() }
			style: { pokedex2_style() }
			size: { pokedex2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	pokedex text 2 out 04:
		left: { pokedex2_left() }
		top: { pokedex2_top() }
		width: { pokedex2_width() }
		height: { pokedex2_height() }
		z index: 5
		alignment: { pokedex2_align() }
		visible: { pokedex2_outline_visible() }
		font
			name: { pokedex2_font() }
			weight: { pokedex2_weight() }
			style: { pokedex2_style() }
			size: { pokedex2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	special rule 1 out 01:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	special rule 1 out 02:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	special rule 1 out 03:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	special rule 1 out 04:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	ability 1 out 01:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	ability 1 out 02:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	ability 1 out 03:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	ability 1 out 04:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	ability 2 out 01:
		left: { ability_2_left() }
		top: { ability_2_top() }
		width: { ability_2_width() }
		height: { ability_2_height() }
		alignment: { ability_2_align() }
		z index: 5
		visible: { ability_2_outline_visible() }
		font:
			name: { ability_2_font() }
			weight: { ability_2_weight() }
			style: { ability_2_style() }
			size: { ability_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	ability 2 out 02:
		left: { ability_2_left() }
		top: { ability_2_top() }
		width: { ability_2_width() }
		height: { ability_2_height() }
		alignment: { ability_2_align() }
		z index: 5
		visible: { ability_2_outline_visible() }
		font:
			name: { ability_2_font() }
			weight: { ability_2_weight() }
			style: { ability_2_style() }
			size: { ability_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	ability 2 out 03:
		left: { ability_2_left() }
		top: { ability_2_top() }
		width: { ability_2_width() }
		height: { ability_2_height() }
		alignment: { ability_2_align() }
		z index: 5
		visible: { ability_2_outline_visible() }
		font:
			name: { ability_2_font() }
			weight: { ability_2_weight() }
			style: { ability_2_style() }
			size: { ability_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	ability 2 out 04:
		left: { ability_2_left() }
		top: { ability_2_top() }
		width: { ability_2_width() }
		height: { ability_2_height() }
		alignment: { ability_2_align() }
		z index: 5
		visible: { ability_2_outline_visible() }
		font:
			name: { ability_2_font() }
			weight: { ability_2_weight() }
			style: { ability_2_style() }
			size: { ability_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	rule np 1 out 01:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	rule np 1 out 02:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	rule np 1 out 03:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	rule np 1 out 04:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	damage 1 out 01:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	damage 1 out 02:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	damage 1 out 03:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	damage 1 out 04:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	rule text 1 out 01:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_all_1_height() }
		z index: 5
		visible: { rule_1_outline_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	rule text 1 out 02:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_all_1_height() }
		z index: 5
		visible: { rule_1_outline_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	rule text 1 out 03:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_all_1_height() }
		z index: 5
		visible: { rule_1_outline_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	rule text 1 out 04:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_all_1_height() }
		z index: 5
		visible: { rule_1_outline_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	damage 2 out 01:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	damage 2 out 02:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	damage 2 out 03:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	damage 2 out 04:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	rule text 2 out 01:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	rule text 2 out 02:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	rule text 2 out 03:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	rule text 2 out 04:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	damage 3 out 01:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	damage 3 out 02:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	damage 3 out 03:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	damage 3 out 04:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	rule text 3 out 01:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	rule text 3 out 02:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	rule text 3 out 03:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	rule text 3 out 04:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
############################# Duplicate text fields for outline text (for medium file size) ############################################################################
extra card field:
	type: text
	name: card number out 05
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number out 06
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number out 07
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number out 08
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator out 05
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator out 06
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator out 07
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator out 08
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright out 05
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright out 06
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright out 07
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright out 08
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay out 05
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay out 06
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay out 07
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay out 08
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay out 05
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay out 06
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay out 07
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay out 08
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay out 05
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay out 06
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay out 07
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay out 08
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name out 05
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name out 06
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name out 07
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name out 08
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp out 05
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp out 06
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp out 07
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp out 08
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness out 05
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness out 06
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness out 07
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness out 08
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance out 05
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance out 06
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance out 07
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance out 08
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: flavor text out 05
	show statistics: false
	default: card.flavor_text
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: flavor text out 06
	show statistics: false
	default: card.flavor_text
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: flavor text out 07
	show statistics: false
	default: card.flavor_text
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: flavor text out 08
	show statistics: false
	default: card.flavor_text
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: evolution 1 out 05
	show statistics: false
	default: card.evolution_reminder_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 out 06
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 out 07
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 out 08
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry out 05
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry out 06
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry out 07
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry out 08
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 2 out 05
	show statistics: false
	default: evorule_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 2 out 06
	show statistics: false
	default: evorule_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 2 out 07
	show statistics: false
	default: evorule_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 2 out 08
	show statistics: false
	default: evorule_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 out 05
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 out 06
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 out 07
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 out 08
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 out 05
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 out 06
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 out 07
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 out 08
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 2 out 05
	show statistics: false
	default: card.pokedex_text_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 2 out 06
	show statistics: false
	default: card.pokedex_text_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 2 out 07
	show statistics: false
	default: card.pokedex_text_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 2 out 08
	show statistics: false
	default: card.pokedex_text_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 out 05
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 out 06
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 out 07
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 out 08
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 2 out 05
	show statistics: false
	default: ability_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 2 out 06
	show statistics: false
	default: ability_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 2 out 07
	show statistics: false
	default: ability_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 2 out 08
	show statistics: false
	default: ability_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: special rule 1 out 05
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: special rule 1 out 06
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: special rule 1 out 07
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: special rule 1 out 08
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 out 05
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 out 06
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 out 07
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 out 08
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: damage 1 out 05
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 1 out 06
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 1 out 07
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 1 out 08
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: rule text 1 out 05
	show statistics: false
	default: rule_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 1 out 06
	show statistics: false
	default: rule_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 1 out 07
	show statistics: false
	default: rule_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 1 out 08
	show statistics: false
	default: rule_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: damage 2 out 05
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 2 out 06
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 2 out 07
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 2 out 08
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: rule text 2 out 05
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 2 out 06
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 2 out 07
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 2 out 08
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: damage 3 out 05
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 3 out 06
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 3 out 07
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 3 out 08
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: rule text 3 out 05
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 3 out 06
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 3 out 07
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 3 out 08
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card style:
	card number out 05:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_visible() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	card number out 06:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_visible() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	card number out 07:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_visible() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	card number out 08:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_visible() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	illustrator out 05:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_visible() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	illustrator out 06:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_visible() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	illustrator out 07:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_visible() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	illustrator out 08:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_visible() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	copyright out 05:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_visible() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	copyright out 06:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_visible() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	copyright out 07:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_visible() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	copyright out 08:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_visible() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	weakoverlay out 05:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	weakoverlay out 06:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	weakoverlay out 07:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	weakoverlay out 08:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	resoverlay out 05:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	resoverlay out 06:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	resoverlay out 07:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	resoverlay out 08:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	retoverlay out 05:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	retoverlay out 06:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	retoverlay out 07:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	retoverlay out 08:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	card name out 05:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_visible() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	card name out 06:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_visible() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	card name out 07:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_visible() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	card name out 08:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_visible() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	hp out 05:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	hp out 06:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	hp out 07:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	hp out 08:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	weakness out 05:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_visible() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	weakness out 06:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_visible() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	weakness out 07:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_visible() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	weakness out 08:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_visible() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	resistance out 05:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_visible() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	resistance out 06:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_visible() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	resistance out 07:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_visible() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	resistance out 08:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_visible() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	flavor text out 05:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_visible() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			scale down to: 6
			weight: { flavor_weight() }
			style: { flavor_style() }
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	flavor text out 06:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_visible() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			scale down to: 6
			weight: { flavor_weight() }
			style: { flavor_style() }
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	flavor text out 07:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_visible() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			scale down to: 6
			weight: { flavor_weight() }
			style: { flavor_style() }
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	flavor text out 08:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_visible() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			scale down to: 6
			weight: { flavor_weight() }
			style: { flavor_style() }
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	evolution 1 out 05:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	evolution 1 out 06:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	evolution 1 out 07:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	evolution 1 out 08:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	evolution entry out 05:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	evolution entry out 06:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	evolution entry out 07:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	evolution entry out 08:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	evolution 2 out 05:
		left: { evorule_left() }
		top: { evorule_top() }
		width: { evorule_width() }
		height: { evorule_height() }
		visible: { evorule_outline_visible() }
		alignment: { evorule_align() }
		z index: 5
		font:
			name: { evorule_font() }
			weight: { evorule_weight() }
			style: { evorule_style() }
			size: { evorule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	evolution 2 out 06:
		left: { evorule_left() }
		top: { evorule_top() }
		width: { evorule_width() }
		height: { evorule_height() }
		visible: { evorule_outline_visible() }
		alignment: { evorule_align() }
		z index: 5
		font:
			name: { evorule_font() }
			weight: { evorule_weight() }
			style: { evorule_style() }
			size: { evorule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	evolution 2 out 07:
		left: { evorule_left() }
		top: { evorule_top() }
		width: { evorule_width() }
		height: { evorule_height() }
		visible: { evorule_outline_visible() }
		alignment: { evorule_align() }
		z index: 5
		font:
			name: { evorule_font() }
			weight: { evorule_weight() }
			style: { evorule_style() }
			size: { evorule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	evolution 2 out 08:
		left: { evorule_left() }
		top: { evorule_top() }
		width: { evorule_width() }
		height: { evorule_height() }
		visible: { evorule_outline_visible() }
		alignment: { evorule_align() }
		z index: 5
		font:
			name: { evorule_font() }
			weight: { evorule_weight() }
			style: { evorule_style() }
			size: { evorule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	title 1 out 05:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	title 1 out 06:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	title 1 out 07:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	title 1 out 08:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
#################all title 2 are place in the z-index -5 to be below the frame
	title 2 out 05:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: -5
		visible: { title_2_outline_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	title 2 out 06:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: -5
		visible: { title_2_outline_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	title 2 out 07:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: -5
		visible: { title_2_outline_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	title 2 out 08:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: -5
		visible: { title_2_outline_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	pokedex text 2 out 05:
		left: { pokedex2_left() }
		top: { pokedex2_top() }
		width: { pokedex2_width() }
		height: { pokedex2_height() }
		z index: 5
		alignment: { pokedex2_align() }
		visible: { pokedex2_outline_visible() }
		font
			name: { pokedex2_font() }
			weight: { pokedex2_weight() }
			style: { pokedex2_style() }
			size: { pokedex2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	pokedex text 2 out 06:
		left: { pokedex2_left() }
		top: { pokedex2_top() }
		width: { pokedex2_width() }
		height: { pokedex2_height() }
		z index: 5
		alignment: { pokedex2_align() }
		visible: { pokedex2_outline_visible() }
		font
			name: { pokedex2_font() }
			weight: { pokedex2_weight() }
			style: { pokedex2_style() }
			size: { pokedex2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	pokedex text 2 out 07:
		left: { pokedex2_left() }
		top: { pokedex2_top() }
		width: { pokedex2_width() }
		height: { pokedex2_height() }
		z index: 5
		alignment: { pokedex2_align() }
		visible: { pokedex2_outline_visible() }
		font
			name: { pokedex2_font() }
			weight: { pokedex2_weight() }
			style: { pokedex2_style() }
			size: { pokedex2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	pokedex text 2 out 08:
		left: { pokedex2_left() }
		top: { pokedex2_top() }
		width: { pokedex2_width() }
		height: { pokedex2_height() }
		z index: 5
		alignment: { pokedex2_align() }
		visible: { pokedex2_outline_visible() }
		font
			name: { pokedex2_font() }
			weight: { pokedex2_weight() }
			style: { pokedex2_style() }
			size: { pokedex2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	special rule 1 out 05:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	special rule 1 out 06:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	special rule 1 out 07:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	special rule 1 out 08:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	ability 1 out 05:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	ability 1 out 06:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	ability 1 out 07:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	ability 1 out 08:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	ability 2 out 05:
		left: { ability_2_left() }
		top: { ability_2_top() }
		width: { ability_2_width() }
		height: { ability_2_height() }
		alignment: { ability_2_align() }
		z index: 5
		visible: { ability_2_outline_visible() }
		font:
			name: { ability_2_font() }
			weight: { ability_2_weight() }
			style: { ability_2_style() }
			size: { ability_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	ability 2 out 06:
		left: { ability_2_left() }
		top: { ability_2_top() }
		width: { ability_2_width() }
		height: { ability_2_height() }
		alignment: { ability_2_align() }
		z index: 5
		visible: { ability_2_outline_visible() }
		font:
			name: { ability_2_font() }
			weight: { ability_2_weight() }
			style: { ability_2_style() }
			size: { ability_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	ability 2 out 07:
		left: { ability_2_left() }
		top: { ability_2_top() }
		width: { ability_2_width() }
		height: { ability_2_height() }
		alignment: { ability_2_align() }
		z index: 5
		visible: { ability_2_outline_visible() }
		font:
			name: { ability_2_font() }
			weight: { ability_2_weight() }
			style: { ability_2_style() }
			size: { ability_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	ability 2 out 08:
		left: { ability_2_left() }
		top: { ability_2_top() }
		width: { ability_2_width() }
		height: { ability_2_height() }
		alignment: { ability_2_align() }
		z index: 5
		visible: { ability_2_outline_visible() }
		font:
			name: { ability_2_font() }
			weight: { ability_2_weight() }
			style: { ability_2_style() }
			size: { ability_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	rule np 1 out 05:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	rule np 1 out 06:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	rule np 1 out 07:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	rule np 1 out 08:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	damage 1 out 05:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	damage 1 out 06:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	damage 1 out 07:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	damage 1 out 08:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	rule text 1 out 05:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_all_1_height() }
		z index: 5
		visible: { rule_1_outline_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	rule text 1 out 06:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_all_1_height() }
		z index: 5
		visible: { rule_1_outline_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	rule text 1 out 07:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_all_1_height() }
		z index: 5
		visible: { rule_1_outline_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	rule text 1 out 08:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_all_1_height() }
		z index: 5
		visible: { rule_1_outline_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	damage 2 out 05:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	damage 2 out 06:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	damage 2 out 07:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	damage 2 out 08:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	rule text 2 out 05:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	rule text 2 out 06:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	rule text 2 out 07:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	rule text 2 out 08:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	damage 3 out 05:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	damage 3 out 06:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	damage 3 out 07:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	damage 3 out 08:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	rule text 3 out 05:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	rule text 3 out 06:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	rule text 3 out 07:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	rule text 3 out 08:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
############################# Duplicate text fields for outline text (for medium file size) ############################################################################
extra card field:
	type: text
	name: card number out 09
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number out 10
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number out 11
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number out 12
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number out 13
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number out 14
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number out 15
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number out 16
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator out 09
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator out 10
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator out 11
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator out 12
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator out 13
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator out 14
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator out 15
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator out 16
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright out 09
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright out 10
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright out 11
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright out 12
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright out 13
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright out 14
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright out 15
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright out 16
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay out 09
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay out 10
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay out 11
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay out 12
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay out 13
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay out 14
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay out 15
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay out 16
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay out 09
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay out 10
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay out 11
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay out 12
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay out 13
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay out 14
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay out 15
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay out 16
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay out 09
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay out 10
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay out 11
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay out 12
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay out 13
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay out 14
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay out 15
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay out 16
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name out 09
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name out 10
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name out 11
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name out 12
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name out 13
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name out 14
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name out 15
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name out 16
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp out 09
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp out 10
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp out 11
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp out 12
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp out 13
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp out 14
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp out 15
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp out 16
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness out 09
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness out 10
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness out 11
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness out 12
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness out 13
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness out 14
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness out 15
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness out 16
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance out 09
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance out 10
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance out 11
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance out 12
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance out 13
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance out 14
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance out 15
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance out 16
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: flavor text out 09
	show statistics: false
	default: card.flavor_text
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: flavor text out 10
	show statistics: false
	default: card.flavor_text
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: flavor text out 11
	show statistics: false
	default: card.flavor_text
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: flavor text out 12
	show statistics: false
	default: card.flavor_text
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: flavor text out 13
	show statistics: false
	default: card.flavor_text
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: flavor text out 14
	show statistics: false
	default: card.flavor_text
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: flavor text out 15
	show statistics: false
	default: card.flavor_text
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: flavor text out 16
	show statistics: false
	default: card.flavor_text
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: evolution 1 out 09
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 out 10
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 out 11
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 out 12
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 out 13
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 out 14
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 out 15
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 out 16
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry out 09
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry out 10
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry out 11
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry out 12
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry out 13
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry out 14
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry out 15
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry out 16
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 2 out 09
	show statistics: false
	default: evorule_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 2 out 10
	show statistics: false
	default: evorule_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 2 out 11
	show statistics: false
	default: evorule_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 2 out 12
	show statistics: false
	default: evorule_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 2 out 13
	show statistics: false
	default: evorule_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 2 out 14
	show statistics: false
	default: evorule_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 2 out 15
	show statistics: false
	default: evorule_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 2 out 16
	show statistics: false
	default: evorule_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 out 09
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 out 10
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 out 11
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 out 12
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 out 13
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 out 14
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 out 15
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 out 16
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 out 09
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 out 10
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 out 11
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 out 12
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 out 13
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 out 14
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 out 15
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 out 16
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 2 out 09
	show statistics: false
	default: card.pokedex_text_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 2 out 10
	show statistics: false
	default: card.pokedex_text_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 2 out 11
	show statistics: false
	default: card.pokedex_text_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 2 out 12
	show statistics: false
	default: card.pokedex_text_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 2 out 13
	show statistics: false
	default: card.pokedex_text_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 2 out 14
	show statistics: false
	default: card.pokedex_text_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 2 out 15
	show statistics: false
	default: card.pokedex_text_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 2 out 16
	show statistics: false
	default: card.pokedex_text_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 out 09
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 out 10
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 out 11
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 out 12
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 out 13
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 out 14
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 out 15
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 out 16
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 2 out 09
	show statistics: false
	default: ability_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 2 out 10
	show statistics: false
	default: ability_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 2 out 11
	show statistics: false
	default: ability_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 2 out 12
	show statistics: false
	default: ability_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 2 out 13
	show statistics: false
	default: ability_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 2 out 14
	show statistics: false
	default: ability_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 2 out 15
	show statistics: false
	default: ability_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 2 out 16
	show statistics: false
	default: ability_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: special rule 1 out 09
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: special rule 1 out 10
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: special rule 1 out 11
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: special rule 1 out 12
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: special rule 1 out 13
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: special rule 1 out 14
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: special rule 1 out 15
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: special rule 1 out 16
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 out 09
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 out 10
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 out 11
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 out 12
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 out 13
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 out 14
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 out 15
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 out 16
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: damage 1 out 09
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 1 out 10
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 1 out 11
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 1 out 12
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 1 out 13
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 1 out 14
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 1 out 15
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 1 out 16
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: rule text 1 out 09
	show statistics: false
	default: rule_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 1 out 10
	show statistics: false
	default: rule_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 1 out 11
	show statistics: false
	default: rule_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 1 out 12
	show statistics: false
	default: rule_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 1 out 13
	show statistics: false
	default: rule_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 1 out 14
	show statistics: false
	default: rule_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 1 out 15
	show statistics: false
	default: rule_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 1 out 16
	show statistics: false
	default: rule_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: damage 2 out 09
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 2 out 10
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 2 out 11
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 2 out 12
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 2 out 13
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 2 out 14
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 2 out 15
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 2 out 16
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: rule text 2 out 09
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 2 out 10
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 2 out 11
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 2 out 12
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 2 out 13
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 2 out 14
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 2 out 15
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 2 out 16
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: damage 3 out 09
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 3 out 10
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 3 out 11
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 3 out 12
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 3 out 13
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 3 out 14
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 3 out 15
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 3 out 16
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: rule text 3 out 09
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 3 out 10
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 3 out 11
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 3 out 12
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 3 out 13
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 3 out 14
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 3 out 15
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 3 out 16
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card style:
	card number out 09:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_visible() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	card number out 10:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_visible() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	card number out 11:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_visible() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	card number out 12:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_visible() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	card number out 13:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_visible() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	card number out 14:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_visible() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	card number out 15:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_visible() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	card number out 16:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_visible() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	illustrator out 09:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_visible() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	illustrator out 10:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_visible() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	illustrator out 11:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_visible() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	illustrator out 12:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_visible() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	illustrator out 13:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_visible() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	illustrator out 14:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_visible() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	illustrator out 15:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_visible() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	illustrator out 16:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_visible() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	copyright out 09:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_visible() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	copyright out 10:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_visible() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	copyright out 11:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_visible() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	copyright out 12:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_visible() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	copyright out 13:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_visible() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	copyright out 14:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_visible() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	copyright out 15:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_visible() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	copyright out 16:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_visible() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	weakoverlay out 09:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	weakoverlay out 10:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	weakoverlay out 11:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	weakoverlay out 12:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	weakoverlay out 13:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	weakoverlay out 14:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	weakoverlay out 15:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	weakoverlay out 16:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	resoverlay out 09:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	resoverlay out 10:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	resoverlay out 11:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	resoverlay out 12:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	resoverlay out 13:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	resoverlay out 14:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	resoverlay out 15:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	resoverlay out 16:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	retoverlay out 09:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	retoverlay out 10:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	retoverlay out 11:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	retoverlay out 12:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	retoverlay out 13:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	retoverlay out 14:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	retoverlay out 15:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	retoverlay out 16:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	card name out 09:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_visible() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	card name out 10:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_visible() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	card name out 11:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_visible() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	card name out 12:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_visible() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	card name out 13:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_visible() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	card name out 14:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_visible() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	card name out 15:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_visible() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	card name out 16:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_visible() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	hp out 09:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	hp out 10:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	hp out 11:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	hp out 12:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	hp out 13:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	hp out 14:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	hp out 15:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	hp out 16:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	weakness out 09:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_visible() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	weakness out 10:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_visible() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	weakness out 11:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_visible() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	weakness out 12:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_visible() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	weakness out 13:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_visible() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	weakness out 14:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_visible() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	weakness out 15:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_visible() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	weakness out 16:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_visible() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	resistance out 09:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_visible() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	resistance out 10:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_visible() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	resistance out 11:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_visible() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	resistance out 12:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_visible() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	resistance out 13:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_visible() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	resistance out 14:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_visible() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	resistance out 15:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_visible() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	resistance out 16:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_visible() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	flavor text out 09:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_visible() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			scale down to: 6
			weight: { flavor_weight() }
			style: { flavor_style() }
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	flavor text out 10:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_visible() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			scale down to: 6
			weight: { flavor_weight() }
			style: { flavor_style() }
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	flavor text out 11:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_visible() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			scale down to: 6
			weight: { flavor_weight() }
			style: { flavor_style() }
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	flavor text out 12:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_visible() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			scale down to: 6
			weight: { flavor_weight() }
			style: { flavor_style() }
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	flavor text out 13:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_visible() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			scale down to: 6
			weight: { flavor_weight() }
			style: { flavor_style() }
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	flavor text out 14:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_visible() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			scale down to: 6
			weight: { flavor_weight() }
			style: { flavor_style() }
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	flavor text out 15:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_visible() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			scale down to: 6
			weight: { flavor_weight() }
			style: { flavor_style() }
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	flavor text out 16:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_visible() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			scale down to: 6
			weight: { flavor_weight() }
			style: { flavor_style() }
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	evolution 1 out 09:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	evolution 1 out 10:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	evolution 1 out 11:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	evolution 1 out 12:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	evolution 1 out 13:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	evolution 1 out 14:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	evolution 1 out 15:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	evolution 1 out 16:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	evolution entry out 09:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	evolution entry out 10:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	evolution entry out 11:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	evolution entry out 12:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	evolution entry out 13:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	evolution entry out 14:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	evolution entry out 15:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	evolution entry out 16:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	evolution 2 out 09:
		left: { evorule_left() }
		top: { evorule_top() }
		width: { evorule_width() }
		height: { evorule_height() }
		visible: { evorule_outline_visible() }
		alignment: { evorule_align() }
		z index: 5
		font:
			name: { evorule_font() }
			weight: { evorule_weight() }
			style: { evorule_style() }
			size: { evorule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	evolution 2 out 10:
		left: { evorule_left() }
		top: { evorule_top() }
		width: { evorule_width() }
		height: { evorule_height() }
		visible: { evorule_outline_visible() }
		alignment: { evorule_align() }
		z index: 5
		font:
			name: { evorule_font() }
			weight: { evorule_weight() }
			style: { evorule_style() }
			size: { evorule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	evolution 2 out 11:
		left: { evorule_left() }
		top: { evorule_top() }
		width: { evorule_width() }
		height: { evorule_height() }
		visible: { evorule_outline_visible() }
		alignment: { evorule_align() }
		z index: 5
		font:
			name: { evorule_font() }
			weight: { evorule_weight() }
			style: { evorule_style() }
			size: { evorule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	evolution 2 out 12:
		left: { evorule_left() }
		top: { evorule_top() }
		width: { evorule_width() }
		height: { evorule_height() }
		visible: { evorule_outline_visible() }
		alignment: { evorule_align() }
		z index: 5
		font:
			name: { evorule_font() }
			weight: { evorule_weight() }
			style: { evorule_style() }
			size: { evorule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	evolution 2 out 13
		left: { evorule_left() }
		top: { evorule_top() }
		width: { evorule_width() }
		height: { evorule_height() }
		visible: { evorule_outline_visible() }
		alignment: { evorule_align() }
		z index: 5
		font:
			name: { evorule_font() }
			weight: { evorule_weight() }
			style: { evorule_style() }
			size: { evorule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	evolution 2 out 14:
		left: { evorule_left() }
		top: { evorule_top() }
		width: { evorule_width() }
		height: { evorule_height() }
		visible: { evorule_outline_visible() }
		alignment: { evorule_align() }
		z index: 5
		font:
			name: { evorule_font() }
			weight: { evorule_weight() }
			style: { evorule_style() }
			size: { evorule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	evolution 2 out 15:
		left: { evorule_left() }
		top: { evorule_top() }
		width: { evorule_width() }
		height: { evorule_height() }
		visible: { evorule_outline_visible() }
		alignment: { evorule_align() }
		z index: 5
		font:
			name: { evorule_font() }
			weight: { evorule_weight() }
			style: { evorule_style() }
			size: { evorule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	evolution 2 out 16:
		left: { evorule_left() }
		top: { evorule_top() }
		width: { evorule_width() }
		height: { evorule_height() }
		visible: { evorule_outline_visible() }
		alignment: { evorule_align() }
		z index: 5
		font:
			name: { evorule_font() }
			weight: { evorule_weight() }
			style: { evorule_style() }
			size: { evorule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	title 1 out 09:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	title 1 out 10:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	title 1 out 11:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	title 1 out 12:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	title 1 out 13:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	title 1 out 14:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	title 1 out 15:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	title 1 out 16:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
#################all title 2 are place in the z-index -5 to be below the frame
	title 2 out 09:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: -5
		visible: { title_2_outline_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	title 2 out 10:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: -5
		visible: { title_2_outline_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	title 2 out 11:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: -5
		visible: { title_2_outline_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	title 2 out 12:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: -5
		visible: { title_2_outline_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	title 2 out 13:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: -5
		visible: { title_2_outline_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	title 2 out 14:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: -5
		visible: { title_2_outline_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	title 2 out 15:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: -5
		visible: { title_2_outline_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	title 2 out 16:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: -5
		visible: { title_2_outline_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	pokedex text 2 out 09:
		left: { pokedex2_left() }
		top: { pokedex2_top() }
		width: { pokedex2_width() }
		height: { pokedex2_height() }
		z index: 5
		alignment: { pokedex2_align() }
		visible: { pokedex2_outline_visible() }
		font
			name: { pokedex2_font() }
			weight: { pokedex2_weight() }
			style: { pokedex2_style() }
			size: { pokedex2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	pokedex text 2 out 10:
		left: { pokedex2_left() }
		top: { pokedex2_top() }
		width: { pokedex2_width() }
		height: { pokedex2_height() }
		z index: 5
		alignment: { pokedex2_align() }
		visible: { pokedex2_outline_visible() }
		font
			name: { pokedex2_font() }
			weight: { pokedex2_weight() }
			style: { pokedex2_style() }
			size: { pokedex2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	pokedex text 2 out 11:
		left: { pokedex2_left() }
		top: { pokedex2_top() }
		width: { pokedex2_width() }
		height: { pokedex2_height() }
		z index: 5
		alignment: { pokedex2_align() }
		visible: { pokedex2_outline_visible() }
		font
			name: { pokedex2_font() }
			weight: { pokedex2_weight() }
			style: { pokedex2_style() }
			size: { pokedex2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	pokedex text 2 out 12:
		left: { pokedex2_left() }
		top: { pokedex2_top() }
		width: { pokedex2_width() }
		height: { pokedex2_height() }
		z index: 5
		alignment: { pokedex2_align() }
		visible: { pokedex2_outline_visible() }
		font
			name: { pokedex2_font() }
			weight: { pokedex2_weight() }
			style: { pokedex2_style() }
			size: { pokedex2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	pokedex text 2 out 13:
		left: { pokedex2_left() }
		top: { pokedex2_top() }
		width: { pokedex2_width() }
		height: { pokedex2_height() }
		z index: 5
		alignment: { pokedex2_align() }
		visible: { pokedex2_outline_visible() }
		font
			name: { pokedex2_font() }
			weight: { pokedex2_weight() }
			style: { pokedex2_style() }
			size: { pokedex2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	pokedex text 2 out 14:
		left: { pokedex2_left() }
		top: { pokedex2_top() }
		width: { pokedex2_width() }
		height: { pokedex2_height() }
		z index: 5
		alignment: { pokedex2_align() }
		visible: { pokedex2_outline_visible() }
		font
			name: { pokedex2_font() }
			weight: { pokedex2_weight() }
			style: { pokedex2_style() }
			size: { pokedex2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	pokedex text 2 out 15:
		left: { pokedex2_left() }
		top: { pokedex2_top() }
		width: { pokedex2_width() }
		height: { pokedex2_height() }
		z index: 5
		alignment: { pokedex2_align() }
		visible: { pokedex2_outline_visible() }
		font
			name: { pokedex2_font() }
			weight: { pokedex2_weight() }
			style: { pokedex2_style() }
			size: { pokedex2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	pokedex text 2 out 16:
		left: { pokedex2_left() }
		top: { pokedex2_top() }
		width: { pokedex2_width() }
		height: { pokedex2_height() }
		z index: 5
		alignment: { pokedex2_align() }
		visible: { pokedex2_outline_visible() }
		font
			name: { pokedex2_font() }
			weight: { pokedex2_weight() }
			style: { pokedex2_style() }
			size: { pokedex2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	special rule 1 out 09:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	special rule 1 out 10:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	special rule 1 out 11:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	special rule 1 out 12:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	special rule 1 out 13:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	special rule 1 out 14:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	special rule 1 out 15:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	special rule 1 out 16:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	ability 1 out 09:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	ability 1 out 10:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	ability 1 out 11:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	ability 1 out 12:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	ability 1 out 13:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	ability 1 out 14:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	ability 1 out 15:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	ability 1 out 16:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	ability 2 out 09:
		left: { ability_2_left() }
		top: { ability_2_top() }
		width: { ability_2_width() }
		height: { ability_2_height() }
		alignment: { ability_2_align() }
		z index: 5
		visible: { ability_2_outline_visible() }
		font:
			name: { ability_2_font() }
			weight: { ability_2_weight() }
			style: { ability_2_style() }
			size: { ability_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	ability 2 out 10:
		left: { ability_2_left() }
		top: { ability_2_top() }
		width: { ability_2_width() }
		height: { ability_2_height() }
		alignment: { ability_2_align() }
		z index: 5
		visible: { ability_2_outline_visible() }
		font:
			name: { ability_2_font() }
			weight: { ability_2_weight() }
			style: { ability_2_style() }
			size: { ability_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	ability 2 out 11:
		left: { ability_2_left() }
		top: { ability_2_top() }
		width: { ability_2_width() }
		height: { ability_2_height() }
		alignment: { ability_2_align() }
		z index: 5
		visible: { ability_2_outline_visible() }
		font:
			name: { ability_2_font() }
			weight: { ability_2_weight() }
			style: { ability_2_style() }
			size: { ability_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	ability 2 out 12:
		left: { ability_2_left() }
		top: { ability_2_top() }
		width: { ability_2_width() }
		height: { ability_2_height() }
		alignment: { ability_2_align() }
		z index: 5
		visible: { ability_2_outline_visible() }
		font:
			name: { ability_2_font() }
			weight: { ability_2_weight() }
			style: { ability_2_style() }
			size: { ability_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	ability 2 out 13:
		left: { ability_2_left() }
		top: { ability_2_top() }
		width: { ability_2_width() }
		height: { ability_2_height() }
		alignment: { ability_2_align() }
		z index: 5
		visible: { ability_2_outline_visible() }
		font:
			name: { ability_2_font() }
			weight: { ability_2_weight() }
			style: { ability_2_style() }
			size: { ability_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	ability 2 out 14:
		left: { ability_2_left() }
		top: { ability_2_top() }
		width: { ability_2_width() }
		height: { ability_2_height() }
		alignment: { ability_2_align() }
		z index: 5
		visible: { ability_2_outline_visible() }
		font:
			name: { ability_2_font() }
			weight: { ability_2_weight() }
			style: { ability_2_style() }
			size: { ability_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	ability 2 out 15:
		left: { ability_2_left() }
		top: { ability_2_top() }
		width: { ability_2_width() }
		height: { ability_2_height() }
		alignment: { ability_2_align() }
		z index: 5
		visible: { ability_2_outline_visible() }
		font:
			name: { ability_2_font() }
			weight: { ability_2_weight() }
			style: { ability_2_style() }
			size: { ability_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	ability 2 out 16:
		left: { ability_2_left() }
		top: { ability_2_top() }
		width: { ability_2_width() }
		height: { ability_2_height() }
		alignment: { ability_2_align() }
		z index: 5
		visible: { ability_2_outline_visible() }
		font:
			name: { ability_2_font() }
			weight: { ability_2_weight() }
			style: { ability_2_style() }
			size: { ability_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	rule np 1 out 09:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	rule np 1 out 10:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	rule np 1 out 11:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	rule np 1 out 12:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	rule np 1 out 13:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	rule np 1 out 14:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	rule np 1 out 15:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	rule np 1 out 16:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	damage 1 out 09:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	damage 1 out 10:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	damage 1 out 11:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	damage 1 out 12:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	damage 1 out 13:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	damage 1 out 14:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	damage 1 out 15:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	damage 1 out 16:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	rule text 1 out 09:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_all_1_height() }
		z index: 5
		visible: { rule_1_outline_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	rule text 1 out 10:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_all_1_height() }
		z index: 5
		visible: { rule_1_outline_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	rule text 1 out 11:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_all_1_height() }
		z index: 5
		visible: { rule_1_outline_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	rule text 1 out 12:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_all_1_height() }
		z index: 5
		visible: { rule_1_outline_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	rule text 1 out 13:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_all_1_height() }
		z index: 5
		visible: { rule_1_outline_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	rule text 1 out 14:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_all_1_height() }
		z index: 5
		visible: { rule_1_outline_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	rule text 1 out 15:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_all_1_height() }
		z index: 5
		visible: { rule_1_outline_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	rule text 1 out 16:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_all_1_height() }
		z index: 5
		visible: { rule_1_outline_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	damage 2 out 09:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	damage 2 out 10:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	damage 2 out 11:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	damage 2 out 12:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	damage 2 out 13:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	damage 2 out 14:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	damage 2 out 15:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	damage 2 out 16:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	rule text 2 out 09:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	rule text 2 out 10:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	rule text 2 out 11:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	rule text 2 out 12:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	rule text 2 out 13:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	rule text 2 out 14:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	rule text 2 out 15:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	rule text 2 out 16:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	damage 3 out 09:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	damage 3 out 10:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	damage 3 out 11:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	damage 3 out 12:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	damage 3 out 13:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	damage 3 out 14:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	damage 3 out 15:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	damage 3 out 16:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	rule text 3 out 09:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	rule text 3 out 10:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	rule text 3 out 11:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	rule text 3 out 12:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	rule text 3 out 13:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	rule text 3 out 14:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	rule text 3 out 15:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	rule text 3 out 16:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2