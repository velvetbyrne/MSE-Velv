mse version: 2.0.0
game: magic
short name: Playtest
full name: Modern
icon: card-sample.png
installer group: magic/playtest card
position hint: 700

version: 2014-07-15
depends on:
	package: magic.mse-game
	version: 2014-06-25
depends on:
	package: magic-mana-playtest.mse-symbol-font
	version: 2007-09-23
depends on:
	package: magic-mana-large.mse-symbol-font
	version: 2007-09-23

card width: 318
card height: 499
card dpi: 150
############################################################## Extra scripts
init script:
	
	# Should hybrids have a grey name?
	mask_hybrid_with_land := { styling.grey_hybrid_name }
	
	#Should multicolor lands with basic land types have a colored name?
	mask_multi_land_with_color := { styling.colored_multicolor_land_name }
	
	template_prefix := [card: "" pt: ""]
	template_suffix := [card: "card.png" pt: "pt.png"]
	template      := { template_prefix[type] + input + template_suffix[type] }
	land_template := { template_prefix[type] + (if input == "a" then "c" else input) + template_suffix[type] }
	# Use land templates for previews because they show more contrast
	hybrid_previews := "land,hybrid"
	
	# Use the normal tap symbol
	mana_t := {
		if      styling.tap_symbol == "old"        then "old"
		else if styling.tap_symbol == "diagonal T" then "older"
		else                                            "new"
	}
	
	# Use guild mana symbols?
	guild_mana := { styling.use_guild_mana_symbols }
	
	card_shape := { "normal" }

	text_filter :=
		# step 1 : remove all automatic tags
		remove_tag@(tag: "<sym-auto>") +
		remove_tag@(tag: "<i-auto>")   +
		remove_tag@(tag: "<b-auto>")   +
		remove_tag@(tag: "<error-spelling") +
		remove_tag@(tag: "<nospellcheck") +
		# step 2 : reminder text for keywords
		expand_keywords@(
			condition: {
				correct_case or (mode != "pseudo" and not used_placeholders)
			}
			default_expand: {
				chosen(choice:if correct_case then mode else "lower case", set.automatic_reminder_text)
			},
			combine: {
				keyword  := "<nospellcheck>{keyword}</nospellcheck>"
				reminder := process_english_hints(reminder)
				if mode == "pseudo" then "<i-auto>{keyword}</i-auto>"
				else keyword + if expand then "<atom-reminder-{mode}> ({reminder})</atom-reminder-{mode}>"
			}) +
		# step 2b : move action keywords' reminder text to the end of the line
		replace@(
			match: "(<atom-reminder-action>(?:(?!<kw-).)*</atom-reminder-action></kw[^>]*>)(((?!<atom-reminder| ?<kw-)[^\n(])+)",
			replace: "\\2\\1"
			) +
		# step 2c : remove duplicate reminder text
		replace@(
			match: "(<atom-reminder-[^>]*>[^)]+[)]</atom-reminder-[^>]*>)([^\n]+)\\1"
			replace: "\\2\\1"
			) +
		# step 3a : expand shortcut word CARDNAME
		replace@(
			match: "CARDNAME",
			in_context: "(^|[[:space:]]|\\()<match>", # TODO: Allow any punctuation before
			replace: "<atom-cardname></atom-cardname>"
			) +
		# step 3b : expand shortcut word LEGENDNAME
		replace@(
			match: "LEGENDNAME",
			in_context: "(^|[[:space:]]|\\()<match>", # TODO: Allow any punctuation before
			replace: "<atom-legname></atom-legname>"
			) +
		# step 3c : fill in atom fields
		tag_contents@(
			tag: "<atom-cardname>",
			contents: { "<nospellcheck>" + (if styling.cardname or card_name=="" then "CARDNAME" else card_name) + "</nospellcheck>" }
			) +
		tag_contents@(
			tag: "<atom-legname>",
			contents: { "<nospellcheck>" + (if card_name=="" then "LEGENDNAME" else legend_filter(card_name)) + "</nospellcheck>" }
			) +
		# step 4 : explict non mana symbols
		replace@(
			match: "\\][DHSCTQXYZIWUBRG0-9/|]+\\[",
			replace: {"<nosym>" + mana_filter_t() + "</nosym>"} ) +
		# step 5 : add mana & tap symbols
		replace@(
			match: "\\b[DHSCTQXYZIWUBRG0-9/|]+\\b",
			in_context: mana_context,
			replace: {"<sym-auto>" + mana_filter_t() + "</sym-auto>"} ) +
		# step 5c : add explicit mana symbols
		replace@(
			match: "\\[[DHSCTQXYZIWUBRG0-9/|]+\\]",
			replace: {"<sym>" + mana_filter_t() + "</sym>"} ) +
		# step 6 : curly quotes
		(if set.curly_quotes then curly_quotes) +
		# step 7 : italicize text in parenthesis
		replace@(
			match: "[(]([^)\n]|[(][^)\n]*[)])*[)]?",
			in_context: "(^|[[:space:]])<match>|<atom-keyword><match></",
			replace: "<i-auto>&</i-auto>") +
		# step 8 : automatic capitalization, but not after "("
		replace@(
			match: "([ ]*: |—| — )" # preceded by this
				 + "([[:lower:]])" # match this
				 + "(?![)])",      # not followed by this
			replace: { _1 + to_upper(_2) }) +
		# step 9 : spellcheck
		{ if set.mark_errors then
			check_spelling(
				language: language().spellcheck_code,
				extra_dictionary: "/magic.mse-game/magic-words",
				extra_match: additional_text_words
			)
		  else input
		}
	
############################################################## Set info fields
set info style:
	symbol:
		variation:
			name: invertedcommon
			border radius: 0.10
			fill type: solid
			fill color:   rgb(255,255,255)
			border color: rgb(0,0,0)
############################################################## Extra style options
styling field:
	type: boolean
	name: grey hybrid name
	description: Use a grey background for the name and type line on hybrid cards. This is done on real cards.
styling field:
	type: choice
	name: tap symbol
	description: What tap and untap symbols should be used on cards?
	initial: modern
	choice: modern
	choice: old
	choice: diagonal T
styling field:
	type: choice
	name: center text
	description: When to center text (short text only means only on one-line cards with no flavor text)
	choice: always
	choice: short text only
	choice: never
	initial: never
styling field:
	type: choice
	name: cardname shrink
	description: shrink text of cardname?
	choice: no
	choice: some
	choice: lots
	initial: no
styling field:
	type: boolean
	name: typeline shrink
	description: shrink text of typeline?
	initial: no
styling field:
	type: boolean
	name: cardname
	description: Leave "CARDNAME" unchanged?
	initial: yes
styling style:
	tap symbol:
		render style: both
		choice images:
			modern:     /magic-mana-large.mse-symbol-font/mana_t.png
			old:        /magic-mana-large.mse-symbol-font/mana_t_old.png
			diagonal T: /magic-mana-large.mse-symbol-font/mana_t_older.png
	center text:
		render style: both
		choice images:
			always:          /magic.mse-game/icons/center-all-text.png
			short text only: /magic.mse-game/icons/center-short-text.png
			never:           /magic.mse-game/icons/center-no-text.png
############################################################## Card fields
card style:
	############################# Background stuff
	card color:
		left:	0
		top:	0
		width:	318
		height:	499
		z index: 0
		render style: image
		popup style: in place
		image: { card_background() }
	############################# Name line
	name:
		left: 28
		top: 33
		right:  { 341 - card_style.casting_cost.content_width }
		height: 23
		alignment: middle shrink-overflow
		padding bottom: 0
		z index: 2
		font:
			name: MyriadPro-Bold
			size: { if styling.cardname_shrink == "lots" then 11 else if styling.cardname_shrink == "some" then 12.5 else 14 }
			color: black
	casting cost:
		right: 291
		top: 34
		width: { max(30, card_style.casting_cost.content_width) + 5 }
		height: 23
		alignment: middle right
		font:
			name: MPlantin
			size: 15
		symbol font:
			name: magic-mana-playtest
			size: 16
			alignment: middle right
		always symbol: true
		z index: 2
		padding top: 0
	############################# Image
	image:
		left: 22
		top: 65
		width: 274
		height:	174
		z index: 2
	############################# Card type
	type:
		left: 28
		top: 250
		width: 264
		height: 23
		alignment: top shrink-overflow
		z index: 2
		padding top: 2
		font:
			name: MyriadPro-Regular
			size: { if styling.typeline_shrink then 11.5 else 13 }
			color: black
			separator color: red
	############################# Text box
	rule text:
		left: 28
		top: 287
		width: 262
		height: 150
		font:
			name: MyriadPro-Regular
			italic name: MyriadPro-It
			size: 14
			scale down to: 6
			color: black
		symbol font:
			name: magic-mana-playtest
			size: 14
		alignment:
			script:
				if (styling.center_text == "short text only" and
				   not contains(match:"\n", card.rule_text) and
				   card.flavor_text == "<i-flavor></i-flavor>" and
				   card_style.text.content_lines <= 2) or
				   styling.center_text == "always"
				then "middle center"
				else "middle left"
		z index: 2
		# padding left: 2
		padding right: 4
		padding top: 2
		padding bottom: 2
		line height hard: 1.2
		line height line: 1.5
		line height soft: 0.9
		line height hard max: 1.3
		line height line max: 1.6
	############################# PT
	pt:
		z index: 2
		left: 246
		top: 447
		width: 49
		height:	20
		alignment: center middle shrink-overflow
		font:
			name: MyriadPro-Regular
			size: 14
			color: black
			separator color: red
	############################# Card sorting / numbering
	set code:
		left: 28
		top: 450
		width: 80
		height: 20
		z index: 2
		font:
			name: MyriadPro-BoldIt
			size: 9
			color: black
			weight: bold
	############################# Copyright stuff
	copyright:
		right: 300
		top: 480
		width: 140
		height: 10
		z index: 2
		alignment: middle right shrink-overflow
		font:
			name: MPlantin
			size: 5
			color: black
			weight: bold
############################################################## Extra card fields
extra card field:
	type: choice
	name: pt box
	script: card.card_color
	editable: false
	save value: false
extra card style:
	pt box:
		left:	0
		top:	0
		width:	318
		height:	499
		z index: 1
		visible: { has_pt() }
		render style: image
		image: { card_ptbox() }
