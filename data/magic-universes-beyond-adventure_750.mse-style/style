mse version:		2.1.2
game:				magic
short name:			UB Adventure
full name:			Universes Beyond
icon:				card_sample.png
position hint:		095

version:			2021-02-16
depends on:
	package:			magic.mse-game
	version:			2014-06-25
depends on:
	package:			magic-default-image.mse-include
	version:			2007-09-23
depends on:
	package:			magic-watermarks.mse-include
	version:			2007-09-23
depends on:
	package:			magic-identity-new.mse-include
	version:			2012-01-22
depends on:
	package:			magic-mana-large.mse-symbol-font
	version:			2007-09-23
depends on:
	package:			magic-mana-small.mse-symbol-font
	version:			2007-09-23
depends on:
	package:			magic-mainframe-extras.mse-include
	version:			2007-09-23

card width:			750
card height:		1046
card dpi:			300


### blanks by Card Conjurer, Velvet Byrne, Rachel (the Touhou brainrot one) and GenevensiS
### code by GenevensiS


############################################################## Extra scripts

init script:
	card_shape := { "adventure" }
	
	# adventure version of card hybrid
	adventure_hybrid_cell :=
	{
		do_linear_blend	:= linear_blend
		linear_blend :=
		{
			do_linear_blend(
				x1: 0.457*x1 + 0.048,
				x2: 0.457*x2 + 0.048,
				y1: 0.304*y1 + 0.62,
				y2: 0.304*y2 + 0.62
			)
		}
		card_hybrid[shape][color_count]()
	}
	adventure_hybrid_row :=
	[
		0: adventure_hybrid_cell
		1: adventure_hybrid_cell
		2: adventure_hybrid_cell
		3: adventure_hybrid_cell
		4: adventure_hybrid_cell
		5: adventure_hybrid_cell
		6: adventure_hybrid_cell
		7: adventure_hybrid_cell
	]
	adventure_hybrid :=
	[
		radial:		adventure_hybrid_row
		horizontal:	adventure_hybrid_row
		vertical:	adventure_hybrid_row
		overlay:	adventure_hybrid_row
	]
	
	template_prefix :=
	[
		card:				"card/",
		bookleft:			"bookleft/",
		bookright:			"bookright/",
		pt:					"pt/",
		crown:				"crown/",
		identity:			"/magic-identity-new.mse-include/",
		identity2:			"/magic-identity-new.mse-include/",
		alias:				"alias/",
		stamp:				"stamp/",
		nonstamp:			"nonstamp/"
	]
	template_suffix :=
	[
		card:				"card.png",
		bookleft:			"bookleft.png",
		bookright:			"bookright.png",
		pt:					"pt.png",
		crown:				"crown.png",
		identity:			"identity.png",
		identity2:			"identity.png",
		alias:				"alias.png",
		stamp:				"stamp.png",
		nonstamp:			"nonstamp.png"
	]
	template :=
	{
		template_prefix[type] +
		(if input == "c" and is_clear() then (if type == "card" then "cclear" else if type != "pt" and not contains(type, match: "book") then "a" else "c") else input) +
		template_suffix[type]
	}
	land_template :=
	{
		template_prefix[type] +
		(if input == "c" and is_clear() then (if type == "card" then "cclear" else if type != "pt" then "a" else "c") else input) +
		template_suffix[type]
	}
	
	card_background :=			{ color_background(input: card.card_color,		type: "card",				base_hybrid: card_hybrid)		}@(offset:0 )
	card_bookleft :=			{ color_background(input: card.card_color_2,	type: "bookleft",			base_hybrid: adventure_hybrid)	}@(offset:0 )
	card_bookright :=			{ color_background(input: card.card_color,		type: "bookright",			base_hybrid: card_hybrid)		}@(offset:0 )
	card_alias :=				{ color_background(input: card.card_color,		type: "alias",				base_hybrid: card_hybrid)		}@(offset:0 )
	card_crown :=				{ color_background(input: card.card_color,		type: "crown",				base_hybrid: card_hybrid)		}@(offset:0 )
	card_ptbox :=				{ color_background(input: card.card_color,		type: "pt",					base_hybrid: card_hybrid)		}@(offset:0 )
	card_stamp :=				{ color_background(input: card.card_color,		type: "stamp",				base_hybrid: card_hybrid)		}@(offset:0 )
	card_nonstamp :=			{ color_background(input: card.card_color,		type: "nonstamp",			base_hybrid: card_hybrid)		}@(offset:0 )
	
	pure_colors :=
	{
		sort_text(
			order: if card_is_wedge(input) then "(wbgur)" else "(wubrg)",
			(if chosen(card.card_color, choice:"white")	then "w") +
			(if chosen(card.card_color, choice:"blue")	then "u") +
			(if chosen(card.card_color, choice:"black")	then "b") +
			(if chosen(card.card_color, choice:"red")	then "r") +
			(if chosen(card.card_color, choice:"green")	then "g")
		)
	}
	
	mana_t :=
	{
		if      styling.tap_symbol == "old"        then "old"
		else if styling.tap_symbol == "diagonal T" then "older"
		else                                            "new"
	}
	guild_mana := { styling.use_guild_mana_symbols }
	ancestral_mana := { styling.use_ancestral_mana_symbols }
	
	has_identity := { styling.color_indicator_dot }
	has_identity_2 := { styling.adventure_color_indicator_dot }
	
	is_promo := { styling.promo }
	
	is_unsorted := { styling.remove_from_autocount }
	
	is_stamped := { card.card_stamp != "none" and (contains(styling.holofoil_stamps, match: "yes") or (styling.holofoil_stamps == "only rares and mythics" and is_rare()))}
	is_foil_stamped := { styling.holofoil_stamps == "yes, all foil" or is_rare() }
	
	is_aliased := { card.alias != "" }
	
	is_crowned := { styling.legend_crown == "yes" or (styling.legend_crown == "if legendary" and contains(card.super_type, match:"Legendary")) }
	
	is_land := { styling.land_frame == "yes" or (styling.land_frame == "if land" and contains(card.super_type, match:"Land")) }
	
	is_vehicle := { styling.vehicle_frame == "yes" or (styling.vehicle_frame == "if vehicle" and contains(card.sub_type, match:"Vehicle")) }
	
	frame_alpha :=
	{
		if styling.opacity_percentage == "" then
		(
			if pure_colors(card.card_color) == ""
			and	not contains(card.super_type, match:"Land")
			and	not contains(card.super_type, match:"Artifact")
			and	not contains(card.card_color, match:"artifact")
			and	not contains(card.card_color, match:"land")
			and	not contains(card.card_color, match:"hybrid")
			and	not contains(card.card_color, match:"multicolor")
			then 0.8
			else 1.0
		)
		else if styling.opacity_percentage == "100" then 1.0
		else clamp(to_number(styling.opacity_percentage)/100, minimum: 0.0, maximum: 1.0)
	}
	is_clear := { frame_alpha() <= 0.995 }
	clear_mask :=
	{
		grey := frame_alpha() * 255
		combine_blend(image1: recolor_image("clear_mask.png", color: rgb(grey,grey,grey)), image2: if is_crowned() then "opaque_crown_mask.png" else "opaque_mask.png", combine: "add")
	}
	
	chop_top :=		{ split := split_comma(styling.chop_rule_textbox); if length(split) > 0 and split.0 != "" and split.0 != "-" then clamp(to_number(split.0), maximum:1000, minimum:-1000) else 0 }
	chop_bottom :=	{ split := split_comma(styling.chop_rule_textbox); if length(split) > 1 and split.1 != "" and split.1 != "-" then clamp(to_number(split.1), maximum:1000, minimum:-1000) else 0 }
	
	chop_adventure_top :=		{ split := split_comma(styling.chop_adventure_rule_textbox); if length(split) > 0 and split.0 != "" and split.0 != "-" then clamp(to_number(split.0), maximum:1000, minimum:-1000) else 0 }
	chop_adventure_bottom :=	{ split := split_comma(styling.chop_adventure_rule_textbox); if length(split) > 1 and split.1 != "" and split.1 != "-" then clamp(to_number(split.1), maximum:1000, minimum:-1000) else 0 }
	
	shrink_type := { if styling.shrink_type_text != "" and styling.shrink_type_text != "-" then clamp(to_number(styling.shrink_type_text), maximum:24, minimum:-40) else 0 }
	shrink_name := { if styling.shrink_name_text != "" and styling.shrink_name_text != "-" then clamp(to_number(styling.shrink_name_text), maximum:28, minimum:-40) else 0 }
	
	shrink_adventure_type := { if styling.shrink_adventure_type_text != "" and styling.shrink_adventure_type_text != "-" then clamp(to_number(styling.shrink_adventure_type_text), maximum:24, minimum:-40) else 0 }
	shrink_adventure_name := { if styling.shrink_adventure_name_text != "" and styling.shrink_adventure_name_text != "-" then clamp(to_number(styling.shrink_adventure_name_text), maximum:28, minimum:-40) else 0 }
	
	use_main_rarity := { contains(set.mainframe_rarity_name, match: ".png") }
	
	alt_rarity := { styling.alt_rarity_color != "" }
	alt_rarity_color :=
	{
		string := "83,67,53:177,150,131:0,0,0:0,0,0:0.07:"
		if match(styling.alt_rarity_color, match:":$") then string := styling.alt_rarity_color
		colons := length(filter_text(string, match:":"))
		output := split_text(string, match:",|:")
		splits := split_text(string, match:":")
		if colons == 4
			then output := split_text(string+"0.07:", match:",|:")
		if colons == 3
			then output := split_text(string+splits[2]+"0.07:", match:",|:")
		else if colons == 2
			then output := split_text(string+"0,0,0:0,0,0:0.07:", match:",|:")
		else if colons == 1
			then output := split_text(string+splits[0]+":0,0,0:0,0,0:0.07:", match:",|:")
		output
	}
	alt_symbol :=
	{
		colors := alt_rarity_color()
		symbol_variation(
			symbol:			set.symbol,
			border_radius:	colors.12,
			fill_type:		"linear gradient",
			fill_color_1:	rgb(colors.0, colors.1, colors.2),
			fill_color_2:	rgb(colors.3, colors.4, colors.5),
			border_color_1:	rgb(colors.6, colors.7, colors.8),
			border_color_2:	rgb(colors.9, colors.10, colors.11),
			center_x:		0.5,
			center_y:		0.5,
			end_x:			1,
			end_y:			1
		)
	}
	
	rarity_right :=	{ split := split_comma(styling.rarity_coordinates); if length(split) > 0 and split.0 != "" and split.0 != "-" then clamp(split.0, maximum:1000, minimum:0) else 687 }
	rarity_top :=	{ split := split_comma(styling.rarity_coordinates); if length(split) > 1 and split.1 != "" and split.1 != "-" then clamp(split.1, maximum:1500, minimum:0) else 593 }
	rarity_size :=	{ split := split_comma(styling.rarity_coordinates); if length(split) > 2 and split.2 != "" and split.2 != "-" then clamp(split.2, maximum:1500, minimum:0) else 52 }
	rarity_left :=	{ rarity_right() - rarity_size() }
	
	popout_left :=		{ split := split_comma(styling.popout_image_coordinates); if length(split) > 3 and split.0 != "" and split.0 != "-" then clamp(split.0, maximum:1500, minimum:-500) else 0 }
	popout_top :=		{ split := split_comma(styling.popout_image_coordinates); if length(split) > 3 and split.1 != "" and split.1 != "-" then clamp(split.1, maximum:2000, minimum:-500) else 0 }
	popout_width :=		{ split := split_comma(styling.popout_image_coordinates); if length(split) > 3 and split.2 != "" and split.2 != "-" then clamp(split.2, maximum:1500, minimum:0) else 0 }
	popout_height :=	{ split := split_comma(styling.popout_image_coordinates); if length(split) > 3 and split.3 != "" and split.3 != "-" then clamp(split.3, maximum:2000, minimum:0) else 0 }
	
	split_comma := split_text@(match: " *, *")
	
	un_png := replace@(match:".png", replace: "")
	
	special_text2 := { value }
	
	bar_equation2 :=
	{
		if card_style.text_2.layout.blocks[1].bottom or else 0 > 0
		then card_style.text_2.top + 0.5*(card_style.text_2.layout.blocks[0].bottom+card_style.text_2.layout.blocks[1].top)
		else old_bar_equation()
	}
	
	clamp :=
	{
		if input < minimum then minimum
		else if input > maximum then maximum
		else input
	}


############################################################## Set info fields

set info style:
	symbol:
		variation:
			name:				invertedcommon
			border radius:		0.10
			fill type:			solid
			fill color:			rgb(255,255,255)
			border color:		rgb(0,0,0)


############################################################## Extra style options

styling field:
	type:			text
	name:			popout image coordinates
	description:	The coordinates for the popout image field, formatted as "left,top,width,height". Used to make the illustration jump in front of the frame.
styling field:
	type:			boolean
	name:			stretch image to whole card
	description:	Make the image span the whole card instead of just the visible part. Use this to help make popout effects.
	initial:		no
styling field:
	type:			text
	name:			shrink name text
	description:	Shrinks name X pixels.
styling field:
	type:			text
	name:			shrink adventure name text
	description:	Shrinks adventure name X pixels.
styling field:
	type:			text
	name:			shrink type text
	description:	Shrinks type X pixels.
styling field:
	type:			text
	name:			shrink adventure type text
	description:	Shrinks adventure type X pixels.
styling field:
	type:			text
	name:			rule text font cap
	description:	Caps the font size of the rules text and the flavor text. Default is 26.
styling field:
	type:			text
	name:			adventure rule text font cap
	description:	Caps the font size of the adventure rules text and the adventure flavor text. Default is 24.
styling field:
	type:			text
	name:			chop rule textbox
	description:	Formatted as "X,Y". Shrinks textbox X pixels from the top and Y from the bottom.
styling field:
	type:			text
	name:			chop adventure rule textbox
	description:	Formatted as "X,Y". Shrinks adventure textbox X pixels from the top and Y from the bottom.
styling field:
	type:			choice
	name:			center rule text
	description:	When to center text (short text means only on one-line cards with no flavor text)
	choice:			always
	choice:			short text only
	choice:			never
	initial:		never
styling field:
	type:			choice
	name:			center adventure rule text
	description:	When to center adventure text (short text means only on one-line cards with no flavor text)
	choice:			always
	choice:			short text only
	choice:			never
	initial:		never
styling field:
	type:			choice
	name:			PT color scheme
	description:	Use the selected color scheme for the PT box on two color cards
	choice:			gold
	choice:			hybrid
	choice:			blend
	initial:		gold
styling field:
	type:			choice
	name:			legend crown
	description:	Use the legend crown?
	choice:			yes
	choice:			if legendary
	choice:			no
	initial:		if legendary
styling field:
	type:			choice
	name:			vehicle frame
	description:	Use the vehicle frame overlay?
	choice:			yes
	choice:			if vehicle
	choice:			no
	initial:		if vehicle
styling field:
	type:			choice
	name:			land frame
	description:	Use the land frame overlay?
	choice:			yes
	choice:			if land
	choice:			no
	initial:		if land
styling field:
	type:			text
	name:			opacity percentage
	description:	Use a clear frame with the given opacity. Default is 80 for colorless non-artifact cards, and 100 for all other cards.
styling field:
	type:			boolean
	name:			flavor bar
	description:	Use the flavor bar to separate rule text from flavor text.
	initial:		yes
styling field:
	type:			boolean
	name:			color indicator dot
	description:	Use a dot in the typeline to indicate card color?
	initial:		no
styling field:
	type:			boolean
	name:			adventure color indicator dot
	description:	Use a dot in the typeline of the adventure to indicate card color?
	initial:		no
styling field:
	type:			choice
	name:			holofoil stamps
	description:	Use the security holofoil stamps?
	choice:			yes, all foil
	choice:			yes, un/commons not foil
	choice:			only rares and mythics
	choice:			no
	initial:		yes, un/commons not foil
styling field:
	type:			package choice
	name:			overlay
	description:	Should there be an overlay applied, such as foil?
	match:			magic-overlay-*.mse-include
	required:		false
styling field:
	type:			choice
	name:			corners
	description:	What should the corners of the card look like?
	choice:			rounded and antialiased
	choice:			rounded
	choice:			none
	initial:		rounded and antialiased
styling field:
	type:			boolean
	name:			inverted common symbol
	description:	Should the common rarity symbol be inverted, like in Coldsnap?
	initial:		no
styling field:
	type:			text
	name:			alt rarity color
	description:	Use a custom color for the rarity symbol. Formatted as "R1,G1,B1:R2,G2,B2:..." 1 and 2 are fill color, 3 and 4 border color
styling field:
	type:			text
	name:			rarity coordinates
	description:	The coordinates for the set symbol, formatted as "right,top,size". Default is 687,593,52.
styling field:
	type:			boolean
	name:			remove from autocount
	description:	Removes the automatic card number for specific cards, to allow for overcounted cards like in Planeswalker Decks.
	initial:		no
styling field:
	type:			boolean
	name:			promo
	description:	Is this card a promo card, with the "P" rarity?
	initial:		no
styling field:
	type:			color
	name:			copyright text color
	description:	Color of the copyright, illustrator, and set code text.
	choice:			white
	choice:			black
	initial:		white
	allow custom:	true
styling field:
	type:			boolean
	name:			use ancestral mana symbols
	description:	Enables ancestral's modified generic mana.
	initial:		no
styling field:
	type:			boolean
	name:			use guild mana symbols
	description:	Use the Ravnica guild symbols instead of the official half/half circles for hybrid mana.
	initial:		no
styling field:
	type:			choice
	name:			tap symbol
	description:	What tap and untap symbols should be used on cards?
	choice:			modern
	choice:			old
	choice:			diagonal T
	initial:		modern
styling field:
	type:			package choice
	name:			casting cost mana symbols
	description:	Symbols used in the casting cost.
	match:			magic-mana-*.mse-symbol-font
	initial:		magic-mana-large.mse-symbol-font
styling field:
	type:			package choice
	name:			text box mana symbols
	description:	Symbols used in the rule text and flavor text.
	match:			magic-mana-*.mse-symbol-font
	initial:		magic-mana-small.mse-symbol-font
styling field:
	type:			text
	name:			name font
	description:	Font used for the name and type. Hover your mouse over the font file to see it's details in a yellow popup, and write it's Title here.
styling field:
	type:			text
	name:			text font
	description:	Font used for the rule text. Hover your mouse over the font file to see it's details in a yellow popup, and write it's Title here.
styling field:
	type:			text
	name:			text italic font
	description:	Font used for the flavor text and reminder texts. Hover your mouse over the font file to see it's details in a yellow popup, and write it's Title here.
styling style:
	use guild mana symbols:
		choice images:
			yes:				/magic-mana-small.mse-symbol-font/mana_guild_rg.png
			no:					/magic-mana-small.mse-symbol-font/mana_rg.png
	tap symbol:
		render style:	both
		choice images:
			modern:				/magic-mana-large.mse-symbol-font/mana_t.png
			old:				/magic-mana-large.mse-symbol-font/mana_t_old.png
			diagonal T:			/magic-mana-large.mse-symbol-font/mana_t_older.png
	center rule text:
		render style:	both
		choice images:
			always:				/magic.mse-game/icons/center-all-text.png
			short text only:	/magic.mse-game/icons/center-short-text.png
			never:				/magic.mse-game/icons/center-no-text.png
	inverted common symbol:
		choice images:
			no:					{ symbol_variation(symbol: set.symbol, variation: "common") }
			yes:				{ symbol_variation(symbol: set.symbol, variation: "invertedcommon") }


############################################################## Card fields

card style:
	############################# Background stuff
	border color:
		left:				0
		top :				0
		width:				750
		height:				1046
		z index:			11
		mask:				border_mask.png
	card color:
		left:				0
		top:				0
		width:				750
		height:				1046
		z index:			5
		render style:		image
		popup style:		in place
		image:				{ card_background() }
		mask:				{ if is_clear() then clear_mask() else "card_mask.png" }
	card color 2:
		left:				0
		top:				0
		width:				750
		height:				1046
		z index:			8
		render style:		image
		popup style:		in place
		image:				{ card_bookleft() }
		mask:				adventure_mask.png
	############################# Name line
	name:
		left:				64
		top:				54
		right:				{ 686 - (if card_style.casting_cost.content_width == 0 then 0 else card_style.casting_cost.content_width + 7) }
		height:				52
		z index:			300
		alignment:			middle left shrink-overflow
		font:
			name:				{ if styling.name_font == "" then "Beleren Bold" else styling.name_font }
			size:				{ 30 - shrink_name() }
			color:				black
	name 2:
		left:				63
		top:				660
		right:				{ 360 - (if card_style.casting_cost_2.content_width == 0 then 0 else card_style.casting_cost_2.content_width + 7) }
		height:				41
		z index:			300
		alignment:			middle left shrink-overflow
		font:
			name:				{ if styling.name_font == "" then "Beleren Bold" else styling.name_font }
			size:				{ 24 - shrink_adventure_name() }
			color:				white
	casting cost:
		right:				693
		top:				54
		width:				{ max(70, card_style.casting_cost.content_width + 12) }
		height:				52
		z index:			310
		alignment:			middle right
		always symbol:		true
		font:
			name:				MPlantin
			size:				30
			color:				black
		symbol font:
			name:				{ styling.casting_cost_mana_symbols }
			size:				30
			#alignment:			middle right
	casting cost 2:
		right:				360
		top:				660
		width:				{ max(50, card_style.casting_cost_2.content_width + 12) }
		height:				42
		z index:			310
		alignment:			middle right
		always symbol:		true
		font:
			name:				MPlantin
			size:				26
			color:				white
		symbol font:
			name:				{ styling.casting_cost_mana_symbols }
			size:				26
			#alignment:			middle right
	alias:
		left:				108
		top:				116
		right:				641
		height:				28
		z index:			300
		alignment:			middle center shrink-overflow
		font:
			name:				MPlantin-Italic
			size:				18
			color:				white
			weight:				bold
	############################# Image
	image:
		left:				{ if styling.stretch_image_to_whole_card then 0		else if is_clear() then 30	else 57 }
		top:				{ if styling.stretch_image_to_whole_card then 0		else if is_clear() then 29	else 118 }
		width:				{ if styling.stretch_image_to_whole_card then 750	else if is_clear() then 690	else 636 }
		height:				{ if styling.stretch_image_to_whole_card then 1046	else if is_clear() then 938	else 464 }
		z index:			0
	mainframe image:
		left:				{ popout_left() }
		top:				{ popout_top() }
		width:				{ popout_width() }
		height:				{ popout_height() }
		z index:			400
	############################# Card type
	indicator:
		left:				60
		top:				603
		width:				34
		height:				34
		z index:			110
		render style:		image
		visible:			{ has_identity() }
		image:				{ card_identity() }
	indicator 2:
		left:				59
		top:				713
		width:				27
		height:				27
		z index:			110
		render style:		image
		visible:			{ has_identity_2() }
		image:				{ card_identity_2(input: card.card_color_2) }
	type:
		left:				{ if has_identity() then 100 else 63 }
		top:				591
		right:				{ if set.shorten_types_for_rarity then max(375,min(rarity_left()-7,687)) else 687 }
		height:				54
		z index:			111
		alignment:			middle left shrink-overflow
		font:
			name:				{ if styling.name_font == "" then "Beleren Bold" else styling.name_font }
			size:				{ 26 - shrink_type() }
			color:				black
			separator color:	red
	type 2:
		left:				{ if has_identity_2() then 93 else 64 }
		top:				710
		right:				362
		height:				32
		z index:			111
		alignment:			middle left shrink-overflow
		font:
			name:				{ if styling.name_font == "" then "Beleren Bold" else styling.name_font }
			size:				{ 23 - shrink_adventure_type() }
			color:				white
			separator color:	red
	rarity:
		right:				{ rarity_right() }
		top:				{ rarity_top() }
		width:				{ rarity_size() }
		height:				{ rarity_size() }
		z index:			111
		alignment:			middle right
		render style:		image
		choice images:
			# Images based on the set symbol
			basic land:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "c.png"
					else if alt_rarity() then alt_symbol()
					else if styling.inverted_common_symbol then symbol_variation(symbol: set.symbol, variation: "invertedcommon")
					else symbol_variation(symbol: set.symbol, variation: "common")
			common:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "c.png"
					else if alt_rarity() then alt_symbol()
					else if styling.inverted_common_symbol then symbol_variation(symbol: set.symbol, variation: "invertedcommon")
					else symbol_variation(symbol: set.symbol, variation: "common")
			uncommon:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "u.png"
					else if alt_rarity() then alt_symbol()
					else symbol_variation(symbol: set.symbol, variation: "uncommon")
			rare:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "r.png"
					else if alt_rarity() then alt_symbol()
					else symbol_variation(symbol: set.symbol, variation: "rare")
			mythic rare:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "m.png"
					else if alt_rarity() then alt_symbol()
					else symbol_variation(symbol: set.symbol, variation: "mythic rare")
			special:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "s.png"
					else if alt_rarity() then alt_symbol()
					else symbol_variation(symbol: set.symbol, variation: "special")
			masterpiece:
				script:
					if use_main_rarity() then "/magic-mainframe-extras.mse-include/" + un_png(set.mainframe_rarity_name) + "mp.png"
					else symbol_variation(symbol: set.masterpiece_symbol, variation: "mythic rare")
	############################# Text box
	text:
		left:				398
		top:				{ 664 + chop_top() }
		right:				697
		bottom:				{ 957 - chop_bottom() }
		z index:			100
		line height hard:	{ if is_modal(card.rule_text) then 0.9 else 1.2 }
		line height line:	1.5
		line height soft:	0.9
		line height hard max:	{ if is_modal(card.rule_text) then 1.0 else 1.3 }
		line height line max:	1.6
		alignment:
			script:
				if (styling.center_rule_text == "short text only" and
				   not contains(match:"\n", card.rule_text) and
				   card.flavor_text == "<i-flavor></i-flavor>" and
				   card_style.text.content_lines <= 2) or
				   styling.center_rule_text == "always"
				then "middle center"
				else "middle left"
		font:
			name:				{ if styling.text_font == "" then "MPlantin" else styling.text_font }
			italic name:		{ if styling.text_italic_font == "" then "MPlantin-Italic" else styling.text_italic_font }
			size:				{ if styling.rule_text_font_cap != "" then to_number(styling.rule_text_font_cap) else 26 }
			scale down to:		14
			color:				black
		symbol font:
			name:				{ styling.text_box_mana_symbols }
			size:				{ if styling.rule_text_font_cap != "" then to_number(styling.rule_text_font_cap) else 26 }
			scale down to:		14
	text 2:
		left:				62
		top:				{ 755 + chop_adventure_top() }
		right:				358
		bottom:				{ 956 - chop_adventure_bottom() }
		z index:			100
		line height hard:	{ if is_modal(card.rule_text_2) then 0.9 else 1.2 }
		line height line:	1.5
		line height soft:	0.9
		line height hard max:	{ if is_modal(card.rule_text_2) then 1.0 else 1.3 }
		line height line max:	1.6
		alignment:
			script:
				if (styling.center_adventure_rule_text == "short text only" and
				   not contains(match:"\n", card.rule_text_2) and
				   card.flavor_text_2 == "<i-flavor></i-flavor>" and
				   card_style.text_2.content_lines <= 2) or
				   styling.center_adventure_rule_text == "always"
				then "middle center"
				else "middle left"
		font:
			name:				{ if styling.text_font == "" then "MPlantin" else styling.text_font }
			italic name:		{ if styling.text_italic_font == "" then "MPlantin-Italic" else styling.text_italic_font }
			size:				{ if styling.adventure_rule_text_font_cap != "" then to_number(styling.adventure_rule_text_font_cap) else 24 }
			scale down to:		14
			color:				black
		symbol font:
			name:				{ styling.text_box_mana_symbols }
			size:				{ if styling.adventure_rule_text_font_cap != "" then to_number(styling.adventure_rule_text_font_cap) else 24 }
			scale down to:		14
	watermark:
		left:				376
		top:				676
		width:				335
		height:				271
		z index:			29
		render style:		image
		popup style:		in place
		alignment:			middle center
		include file:		/magic-watermarks.mse-include/watermarks
	watermark 2:
		left:				48
		top:				760
		width:				327
		height:				193
		z index:			29
		render style:		image
		popup style:		in place
		alignment:			middle center
		include file:		/magic-watermarks.mse-include/watermarks
	############################# PT
	pt:
		left:				599
		top:				941
		width:				93
		height:				43
		z index:			100
		alignment:			center middle shrink-overflow
		font:
			name:				Beleren Bold
			size:				30
			color:				{ if is_vehicle() then "white" else "black" }
			separator color:	red
	############################# Copyright stuff
	card stamp:
		left:				0
		top:				0
		width:				750
		height:				1046
		z index:			53
		render style:		image
		popup style:		in place
		image:				{ if is_stamped() then (if is_foil_stamped() then "stamp_foil.png" else "stamp_non_foil.png") else "" }
		mask:				stamp_mask.png
	set code:
		left:				49
		top:				994
		width:				110
		height:				21
		z index:			100
		alignment:			middle left
		font:
			name:				Relay-Medium
			size:				12.5
			color:				{ styling.copyright_text_color }
			weight:				bold
	illustrator:
		left:				{ if card.set_code == "" then 71 else 84 + card_style.set_code.content_width }
		top:				995
		width:				220
		height:				21
		z index:			100
		alignment:			middle left
		font:
			name:				Beleren Small Caps Bold
			size:				13
			color:				{ styling.copyright_text_color }
	copyright:
		right:				698
		#top:				{ if card.pt != "" then 994 else 981 }
		top:				{ if card.pt != "" or card.special_text_2 != "" then 994 else 981 }
		width:				{ if set.automatic_copyright then 0 else 220 }
		height:				21
		z index:			100
		alignment:			middle right shrink-overflow
		font:
			name:				Matrix
			size:				12
			color:				{ styling.copyright_text_color }
			weight:				bold
	special text 2:
		left:				{ 511 - if length(card.special_text_2) > 6 then 20 else 0 }
		right:				{ if card.pt != "" then 570 else 698 }
		top:				975
		height:				21
		z index:			101
		alignment:			{ if card.pt != "" then "middle left shrink-overflow" else "middle right shrink-overflow" }
		font:
			name:				Matrix
			size:				12
			color:				{ styling.copyright_text_color }
			weight:				bold


############################################################## Extra card fields

extra card field:
	type:				text
	name:				card code
	save value:			false
	show statistics:	false
	script:
		if set.automatic_card_numbers and not styling.remove_from_autocount
		then forward_editor(prefix: card_number_m15() + "/" + card_count_m15() + " " + rarity_code() + " ", field: card.card_code_text)
		else combined_editor(field1: card.custom_card_number, separator: (if card.custom_card_number != "" then " " else "") + rarity_code() + " ", field2: card.card_code_text)
extra card field:
	type:				text
	name:				auto copyright
	script:				set.copyright
	editable:			false
	save value:			false
	show statistics:	false
extra card field:
	type:				choice
	name:				artist arrow
	editable:			false
	save value:			false
	show statistics:	false
	choice:				artist arrow
extra card field:
	type:				choice
	name:				flavor bar
	editable:			false
	save value:			false
	show statistics:	false
	choice:				flavor bar
extra card field:
	type:				choice
	name:				flavor bar 2
	editable:			false
	save value:			false
	show statistics:	false
	choice:				flavor bar 2
extra card field:
	type:				choice
	name:				pt box
	script:				card.card_color
	editable:			false
	save value:			false
	show statistics:	false
extra card field:
	type:				choice
	name:				alias box
	script:				card.card_color
	editable:			false
	save value:			false
	show statistics:	false
extra card field:
	type:				choice
	name:				crown
	script:				card.card_color
	editable:			false
	save value:			false
	show statistics:	false
extra card field:
	type:				choice
	name:				crown clear shadow
	script:				card.card_color
	editable:			false
	save value:			false
	show statistics:	false
extra card field:
	type:				color
	name:				crown border
	script:				card.border_color
	editable:			false
	save value:			false
	show statistics:	false
extra card field:
	type:				choice
	name:				foil layer
	editable:			false
	save value:			false
	show statistics:	false
	choice:				foil layer
extra card field:
	type:				choice
	name:				land overlay
	editable:			false
	save value:			false
	show statistics:	false
	choice:				land overlay
extra card field:
	type:				choice
	name:				vehicle overlay
	editable:			false
	save value:			false
	show statistics:	false
	choice:				vehicle overlay
extra card field:
	type:				choice
	name:				book right
	script:				card.card_color
	editable:			false
	save value:			false
	show statistics:	false
extra card field:
	type:				color
	name:				card stamp border
	script:				card.border_color
	editable:			false
	save value:			false
	show statistics:	false
extra card field:
	type:				choice
	name:				card stamp rim
	editable:			false
	save value:			false
	show statistics:	false
	choice:				card stamp rim
extra card field:
	type:				choice
	name:				card stamp rim shadow
	editable:			false
	save value:			false
	show statistics:	false
	choice:				card stamp rim shadow
extra card field:
	type:				color
	name:				corners
	script:				rgb(255, 255, 255)
	editable:			false
	save value:			false
	show statistics:	false

extra card style:
	card code:
		left:				49
		top:				975
		width:				220
		height:				21
		z index:			100
		alignment:			middle left shrink-overflow
		font:
			name:				Relay-Medium
			size:				12.5
			color:				{ styling.copyright_text_color }
			weight:				bold
	auto copyright:
		right:				698
		#top:				{ if card.pt != "" then 994 else 981 }
		top:				{ if card.pt != "" or card.special_text_2 != "" then 994 else 981 }
		width:				{ if set.automatic_copyright then 220 else 0 }
		height:				21
		z index:			100
		alignment:			middle right shrink-overflow
		font:
			name:				Matrix
			size:				12
			color:				{ styling.copyright_text_color }
			weight:				bold
	artist arrow:
		left:				{ if card.set_code == "" then 49 else 62 + card_style.set_code.content_width }
		top:				998
		width:				20
		height:				13
		z index:			100
		render style:		image
		image:				{ recolor_image("artist_arrow.png", color: styling.copyright_text_color) }
	flavor bar:
		left:				394
		top:				{ bar_equation() + 1 }
		right:				688
		height:				5
		z index:			20
		visible:			{ styling.flavor_bar and card.rule_text != "" and remove_tags(card.flavor_text) != "" }
		render style:		image
		image:				flavor_bar.png
	flavor bar 2:
		left:				62
		top:				{ bar_equation2() + 1 }
		right:				356
		height:				4
		z index:			20
		visible:			{ styling.flavor_bar and card.rule_text_2 != "" and remove_tags(card.flavor_text_2) != "" }
		render style:		image
		image:				flavor_bar.png
	pt box:
		left:				0
		top:				0
		width:				750
		height:				1046
		z index:			60
		visible:			{ card.pt != "" }
		render style:		image
		image:
			script:
				pure := pure_colors()
				count := length(pure)
				if is_vehicle() then "vpt.png"
				else if styling.PT_color_scheme == "gold" and count > 1 then template("m", type: "pt")
				else if styling.PT_color_scheme == "hybrid" and count == 2 then masked_blend(mask: "special_blend_pt.png", dark: template(pure.0, type: "pt"), light: template(pure.1, type: "pt"))
				else card_ptbox()
	foil layer:
		left:				0
		top :				0
		width:				750
		height:				1046
		z index:			3000
		visible:			{ styling.overlay != "none" and styling.overlay != "" }
		render style:		image
		image:				{ if styling.overlay == "" then "" else styling.overlay + "/overlay.png" }
		mask:				{ "foil_mask" + (if is_stamped() then "_rare" else "") + (if card.pt != "" then "_pt" else "") + (if is_crowned() then "_crown" else "") + ".png"}
	land overlay:
		left:				0
		top:				0
		width:				750
		height:				1046
		z index:			6
		visible:			{ is_land() }
		render style:		image
		image:				loverlay.png
	vehicle overlay:
		left:				0
		top:				0
		width:				750
		height:				1046
		z index:			7
		visible:			{ is_vehicle() }
		render style:		image
		image:				voverlay.png
	alias box:
		left:				0
		top:				0
		width:				750
		height:				1046
		z index:			40
		visible:			{ is_aliased() }
		render style:		image
		image:				{ card_alias() }
	crown:
		left:				0
		top:				0
		width:				750
		height:				1046
		z index:			41
		visible:			{ is_crowned() }
		render style:		image
		image:				{ card_crown() }
	crown clear shadow:
		left:				0
		top:				0
		width:				750
		height:				1046
		z index:			42
		visible:			{ is_crowned() and is_clear() }
		render style:		image
		image:				shadow_clear_crown.png
	crown border:
		left:				0
		top:				0
		width:				750
		height:				1046
		z index:			40
		visible:			{ is_crowned() }
		mask:				crown_border_mask.png
	book right:
		left:				0
		top:				0
		width:				750
		height:				1046
		z index:			8
		render style:		image
		image:				{ card_bookright() }
	card stamp border:
		left:				0
		top:				0
		width:				750
		height:				1046
		z index:			52
		visible:			{ is_stamped() }
		mask:				stamp_border_mask.png
	card stamp rim:
		left:				0
		top:				0
		width:				750
		height:				1046
		z index:			51
		render style:		image
		image:				{ if is_stamped() then card_stamp() else card_nonstamp() }
	card stamp rim shadow:
		left:				0
		top:				0
		width:				750
		height:				1046
		z index:			50
		render style:		image
		image:				{ if is_stamped() then "stamprim_shadow.png" else "nonstamprim_shadow.png" }
	corners:
		left:				0
		top :				0
		width:				750
		height:				1046
		z index:			4000
		visible:			{ styling.corners != "none" }
		mask:				{ if styling.corners == "rounded and antialiased" then "corners_rounded_antialiased_mask.png" else "corners_rounded_mask.png" }
