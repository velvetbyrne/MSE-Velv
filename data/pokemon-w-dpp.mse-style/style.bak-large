mse version: 2.0.0
game: pokemon
full name: Diamond, Pearl, & Platinum Series
short name: DPP
icon: card-sample.jpg
position hint: 078

version: 2018-07-22
depends on:
	package: pokemon.mse-game
	version: 2018-07-22
depends on:
	package: pokemon-a-energy.mse-symbol-font
	version: 2018-06-28
depends on:
	package: pokemon-a-color.mse-symbol-font
	version: 2016-09-10
depends on:
	package: pokemon-a-lg-color.mse-symbol-font
	version: 2018-06-19
depends on:
	package: pokemon-a-title.mse-symbol-font
	version: 2018-07-02
depends on:
	package: pokemon-a-rule.mse-symbol-font
	version: 2018-06-28
depends on:
	package: pokemon-a-rule-behind.mse-symbol-font
	version: 2018-06-28
depends on:
	package: pokemon-b-common.mse-include
	version: 2018-07-04

#By: Imp Elemental Spirit Guide

#expand_size()==2
#border included
card width: 736
card height: 1026
card dpi: 294

#expand_size()==1
#card width: 368
#card height: 513
#card dpi: 147

#Actual card width is 2.5", height is 3.5" almost exactly
############################################################## Extra scripts
init script:
	diagnostic := { fun_decompress(card_style.ability_text_2.content_width)+"   "+rule_np_sizing()+"   "+length(special_rule_outline_separator())+"   "+length(card.rule_np_1) }
	##############################These two equations were originally used for centering and placing the different frames and text so that they matched the original card.
	##############################			They have been kept in here because they would allow a different resolution of card should such thing apply
	##############################                  Be careful to change the card size when altering these value
	expand_size := { 2 }
	is_not_blur := { expand_size()==2 }
	# 2 is the size of the actual images used
	# to watch 2 , card width 736, height 750, expand_size==2, slide_up == 0 or 276
	# for 2   card width: 736, card height: 1026, card dpi: 294
	# for 1.5 card width: 552, card height:  770, card dpi: 220
	# for 1.4 card width: 515, card height:  717, card dpi: 205
	# for 1   card width: 368, card height:  513, card dpi: 147
	slide_left := { 0 }
	slide_up := { 0 }
	x_left := { to_int(input * expand_size()) - slide_left() }
	y_top := { to_int(input * expand_size()) - slide_up() }
	fun_expand_size := { to_int(input * expand_size()) }
	fun_expand_font := { input * expand_size() }
	fun_decompress := { input / expand_size() }
	###############################Equations for transfering between templates
	##############################These equations make sure that the cost for the classic template and the modern template match in spite of being different fields
	cost_new_1_placekeep := { card.cost_classic_1 }
	cost_new_2_placekeep := { card.cost_classic_2 }
	cost_new_3_placekeep := { card.cost_classic_3 }
	############################### Equations for symbol text coloration
	############################### Tag equations for the symbol fonts
	is_outline_energy := { is_outline() }
	is_outline_rule := { is_outline() }
	is_wt_rule := { is_wt_text() }
	is_two_tone_rule := { is_two_tone() }
	is_outline_title := { is_outline() }
	is_wt_title := { is_wt_top() }
	is_ec_pbp := { contains(styling.Ability_and_Energy_Icons, match: "Use E-Card Poke-Body & Poke-Power Icons") }
	is_sm_ab := { not(contains(styling.Ability_and_Energy_Icons, match: "Use Black & White or XY Style Ability Icon")) }
	is_ab_gold := { false }
	is_dpp_free := { contains(styling.Ability_and_Energy_Icons, match: "Use Transparent Free Energy Icon (aka No Energy)") }
	gx_color := { "Gold" }
	two_tone_font := { "pokemon-a-rule-behind" }
	############################### Simplify multiple stage choice variables
	stage := { card.stage_levelup }
	stage_default := { if card.stage_levelup=="" or card.stage_levelup=="Level Up" then "Basic" else card.stage_base }
	text_option_filter_1 := { text_option_filter(card.text_options_2) } + replace@(match: "Default PokeBody and PokePower Color", replace: "Default Pokemon Power Color")
	text_option_filter_2 := { text_option_filter(value) }
	text_option_filter_3 := { text_option_filter(card.text_options_2) } + replace@(match: "Default PokeBody and PokePower Color", replace: "Default Ability Color")
	############################### Other diagnostic equations
	############################## Equations to centralize the mask settings for dual types
	dual_mask := { if card.dual_blend_type=="Dark EX Series" then "/pokemon-b-common.mse-include/mask-p-split-darkg1.png"
		else if card.dual_blend_type=="Metal EX Series" then "/pokemon-b-common.mse-include/mask-p-split-metalg1.png"
		else "/pokemon-b-common.mse-include/mask-p-split-ss.png" }
	dual_mask_reverse := { if card.dual_blend_type=="Dark EX Series" then "/pokemon-b-common.mse-include/mask-p-split-darkg1-reverse.png"
		else if card.dual_blend_type=="Metal EX Series" then "/pokemon-b-common.mse-include/mask-p-split-metalg1-reverse.png"
		else "/pokemon-b-common.mse-include/mask-p-split-ss-reverse.png" }
	blend_mask := { if card.dual_blend_type=="Dark EX Series" then "/pokemon-b-common.mse-include/mask-p-blend-darkg1.png"
		else if card.dual_blend_type=="Metal EX Series" then "/pokemon-b-common.mse-include/mask-p-blend-metalg1.png"
		else "/pokemon-b-common.mse-include/mask-p-split-ss.png" }
	blend_mask_reverse := { if card.dual_blend_type=="Dark EX Series" then "/pokemon-b-common.mse-include/mask-p-blend-darkg1-reverse.png"
		else if card.dual_blend_type=="Metal EX Series" then "/pokemon-b-common.mse-include/mask-p-blend-metalg1-reverse.png"
		else "/pokemon-b-common.mse-include/mask-p-split-ss-reverse.png" }
	##############################Equations for the backgrounds
	texture_type_1 := { if background_type_1()=="User Defined" then to_string(card.color_texture_1)
		else if card.texture_type_1=="Default" then "Nintendo"
		else to_string(card.texture_type_1) }
	texture_type_2 := { if background_type_2()=="User Defined" then to_string(card.color_texture_2)
		else if card.texture_type_2=="Default" then "Nintendo"
		else to_string(card.texture_type_2) }
	colored_pokemon_suffix_1 := { to_string(card.color_texture_1) } + replace@(match: " Black Text", replace: "") + replace@(match: " White Text", replace: "")
	colored_pokemon_suffix_2 := { to_string(card.color_texture_2) } + replace@(match: " Black Text", replace: "") + replace@(match: " White Text", replace: "")
	background_type_1 := { to_string(card.card_color_1) }
	background_type_2 := { to_string(card.card_color_2) }
	is_image_1 := { (is_pokemon() and contains(texture_type_1(), match: "User Image")) or (is_energy() and contains(basic_energy_suffix(), match: "User Image")) }
	is_image_2 := { (card.card_type=="Dual-Type" and contains(texture_type_2(), match: "User Image")) }
	basic_energy_suffix := { if card.basic_texture=="Default" then "Capsule"
		else to_string(card.basic_texture) } + replace@(match: " Black Text", replace: "") + replace@(match: " White Text", replace: "")
	############################### Equations for text coloration
	############################### Text color equations to determin the color and types of text
	ability_color := { if (contains(card.text_options_2, match: "Default") and (((card.card_color_1=="Fire" or card.card_color_1=="Fairy") or card.card_color_1=="Psychic") or (card.card_color_1=="Fighting" and (card.texture_type_1=="Nintendo" or card.texture_type_1=="SunMoon")))) or contains(card.text_options_2, match: "Purple") then rgb(89,46,132)
				else if contains(card.text_options_2, match: "Yellow") then rgb(255,242,19)
				else if contains(card.text_options_2, match: "Dark Red") then rgb(134,35,38)
				else if contains(card.text_options_2, match: "Green") then rgb(2,146,64)
				else rgb(198,34,12) }
	is_outline := { contains(card.text_options_2, match: "Outline Text") or (contains(card.art_options, match: "Full Art") or contains(card.art_options, match: "Popout Art (for Advanced Users)")) }
	is_two_tone := { card.card_type=="Dual-Type" and not(is_outline()) and not(is_dark_1()==is_dark_2()) and not(contains(card.text_options_2, match: "Body Fade Box")) }
	is_wt_text := { ((card.card_type=="Pokemon" and is_dark_1() and not(is_outline()) and not(contains(card.text_options_2, match: "Body Fade Box"))) or
			(card.card_type=="Dual-Type" and not(is_outline()) and (is_dark_1() and is_dark_2() and not(contains(card.text_options_2, match: "Body Fade Box"))))) or
			((is_energy() and card.energy_type=="Basic") and (contains(card.basic_texture, match: "White Text") or background_type_1()=="Dark")) }
	is_wt_top := { is_wt_text() or (is_pokemon() and is_dark_1() and not(is_outline())) }
	is_dark_1 := { is_pokemon() and
		((background_type_1()=="Dark" or 
			((background_type_1()=="Dragon" and not(texture_type_1()=="SunMoon")) or 
				(texture_type_1()=="ISG" and (background_type_1()=="Fighting" or background_type_1()=="Grass")))) or
		(contains(texture_type_1(), match: "White Text"))) }
	is_dark_2 := { ((background_type_2()=="Dark" or 
			((background_type_2()=="Dragon" and not(texture_type_2()=="SunMoon")) or 
				(texture_type_2()=="ISG" and (background_type_2()=="Fighting" or background_type_2()=="Grass")))) or
		(contains(texture_type_2(), match: "White Text"))) }
	rarity_color := { (is_wt_top() and not(card.card_type=="Dual-Type"))
			or (card.card_type=="Dual-Type" and not(is_outline())
			and ((is_dark_2() and not(card.dual_blend_type=="Dark EX Series")) or (is_dark_1() and card.dual_blend_type=="Dark EX Series"))) }
	##############################Equations to centralize the information for the pokemon attack energy symbol so that user defined and dual texts are synchronized.
	energy_left := { if is_energy() then 312 else 316 }
	energy_top := { if is_energy() then 16 else 19 }
	energy_left_difference := { 9 }
	energy_right_difference := { 9 }
	energy_width := { if is_energy() then 32 else 28 }
	###############################################Equations that define spacing and text for attack
	#is_ability_classic_1 := { false }
	#is_ability_classic_2 := { false }
	#is_ability_classic_3 := { false }
	#######Determines if the number of lines of rule text are currently being used
	#rule_line_1 := { card_style.rule_text_1.content_lines - (if length(to_text(card.rule_text_1))==0 and card_style.rule_text_1.content_lines==1 then 1 else 0) }
	#rule_line_2 := { card_style.rule_text_2.content_lines - (if length(to_text(card.rule_text_2))==0 and card_style.rule_text_2.content_lines==1 then 1 else 0) }
	#rule_line_3 := { card_style.rule_text_3.content_lines - (if length(to_text(card.rule_text_3))==0 and card_style.rule_text_3.content_lines==1 then 1 else 0) }
	#rule_lines := { rule_line_1() + rule_line_2() + rule_line_3() }
	#######Determines how many attacks have been input
	#attack_no := { if length(to_text(card.cost_classic_3))!=0 or length(to_text(card.damage_3))!=0 or length(to_text(card.rule_text_3))!=0 then 3
	#	else if length(to_text(card.cost_classic_2))!=0 or length(to_text(card.damage_2))!=0 or length(to_text(card.rule_text_2))!=0 then 2
	#	else 1 }
	#################Determines spacing for reminder text at the top (equals out left and right)
	evo_field_width_1 := { fun_decompress(card_style.evolution_reminder_1.content_width) }
	evo_field_width_evo := { fun_decompress(card_style.evolution_entry.content_width) }
	evo_total_width := { (if evo_field_width_evo()<=10 then 10 else evo_field_width_evo()) +
		(if contains(styling.Automated_Text_Usage, match: "Evolution Reminder") then if evo_field_width_1()<=10 then 10 else evo_field_width_1() else 0) }
	evo_goal := { 88 }
	evo_width_1 := { if evo_field_width_1()<=10 then 10
			else if evo_total_width()>=evo_goal() then evo_goal()*(evo_field_width_1()/evo_total_width())
			else evo_field_width_1() }
	evo_width_evo := { if evo_field_width_evo()<=10 then 10
			else if evo_total_width()>=evo_goal() then evo_goal()*(evo_field_width_evo()/evo_total_width())
			else evo_field_width_evo() }

	card_name_field_width := { fun_decompress(card_style.card_name.content_width) }
	level_field_width := { fun_decompress(card_style.title_text_2.content_width) }
	title_total_width := { (if card_name_field_width()<=40 then 40 else card_name_field_width()) +
		(if level_field_width()<=10 then 10 else level_field_width()) }
	title_total_goal := { 210 }
	card_name_title_width := { if card_name_field_width()<=40 then 40
			else if title_total_width()>=title_total_goal() then title_total_goal()*(card_name_field_width()/title_total_width())
			else card_name_field_width() }
	level_title_width := { if level_field_width()<=10 then 10
			else if title_total_width()>=title_total_goal() then title_total_goal()*(level_field_width()/title_total_width())
			else level_field_width() }
	#######The height of the attack dividers for Classic
	#top_height := { 292 }
	#divider_height_1 := { if attack_no()==1 then 392
	#	else if attack_no()==2
	#		then if (if is_ability_classic_2() then 0.77 
	#		else if length(to_text(card.damage_2))==0 then 0.83 else 1)*length(to_text(card.rule_text_2))+(if is_ability_classic_1() then 0.77 else if length(to_text(card.damage_1))==0 then 0.83 else 1)*length(to_text(card.rule_text_1))>=269 then 353-0.0153*((if is_ability_classic_2() then 0.77 else if length(to_text(card.damage_2))==0 then 0.83 else 1)*length(to_text(card.rule_text_2))-(if is_ability_classic_1() then 0.77 else if length(to_text(card.damage_1))==0 then 0.83 else 1)*length(to_text(card.rule_text_1))) else 354
	#	else 335 }
	#divider_height_2 := { if attack_no()==3 then 378 else 416 }
	#bottom_height := { if attack_no()==2 then 421 else 419 }
	###################################################### Reminder Functions
	level_rem := { "LV." }
	###################################################### Functions to centralize information for all text fields allowing two-tone & outline texts
	#######Card Name (remder size)
	card_name_left := { x_left(if is_pokemon() then 30 
		else if is_trainer() then 54 else 26) }
	card_name_top := { y_top(if is_pokemon() then 23 
		else if is_trainer() then 50.5 else 358) }
	card_name_width := { fun_expand_size(if is_trainer() then 278 else if is_energy() then 210 else card_name_title_width()) }
	card_name_height := { fun_expand_size(if is_energy() and card.energy_type=="Basic" then 0 else 24) }
	card_name_visible := { not(is_energy() and card.energy_type=="Basic") }
	card_name_outline_visible := { card_name_visible() and is_outline() and is_not_blur() }
	card_name_outline_blur := { card_name_visible() and is_outline() and not(is_not_blur()) }
	card_name_font := { if is_energy() or is_pokemon() then "PokeTitleXY" else "PokeTitleNeo" }
	card_name_weight := { "normal" }
	card_name_style := { "normal" }
	card_name_size := { fun_expand_font(if is_energy() then 15.5 
		else if is_pokemon() then 19 else 15.5) }
	card_name_align := { if is_trainer() then "bottom right shrink-overflow" else "bottom left shrink-overflow" }
	card_name_symbol_font := { "pokemon-a-title" }
	card_name_symbol_size := { fun_expand_font(140) }
	card_name_color := { if is_wt_top() and not(stage()=="Level Up") then rgb(255,255,255) else rgb(0,0,0) }

	#######Level Code look for level text (extra card field as well)
	title_2_left := { x_left(46+card_name_title_width()) }
	title_2_top := { y_top(21) }
	title_2_width := { fun_expand_size(level_title_width()) }
	title_2_height := { fun_expand_size(if is_pokemon() and not(stage()=="Level Up") then 24 else 0) }
	title_txt_2_height := { title_2_height() }
	title_2_align := { "bottom left shrink-overflow" }
	title_txt_2_visible := { is_pokemon() and not(stage()=="Level Up") }
	title_lv_2_visible := { is_pokemon() }
	title_lv_2_outline_visible := { title_lv_2_visible() and is_outline() and is_not_blur() }
	title_lv_2_outline_blur := { title_lv_2_visible() and is_outline() and not(is_not_blur()) }
	title_2_outline_separator := { card.title_text_2 }
	title_2_outline_visible := { title_txt_2_visible() and is_outline() and is_not_blur() }
	title_2_outline_blur := { title_txt_2_visible() and is_outline() and not(is_not_blur()) }
	title_2_font := { "Humanist521BDCdn" }
	title_2_weight := { "bold" }
	title_2_style := { "normal" }
	title_2_size := { fun_expand_font(12) }
	title_2_color := { if is_wt_top() and not(stage()=="Level Up") then rgb(255,255,255) else rgb(0,0,0) }

	#######HP Number
	hp_left := { x_left(265-(if card.card_type=="Dual-Type" then energy_left_difference() else 0)) }
	hp_top := { y_top(23) }
	hp_width := { fun_expand_size(50) }
	hp_height := { fun_expand_size(if is_pokemon() then 24 else 0) }
	hp_size := { fun_expand_font(17) }
	hp_font := { "PokeTitleNeo" }
	hp_visible := { is_pokemon() }
	hp_outline_visible := { hp_visible() and is_outline() and is_not_blur() }
	hp_outline_blur := { hp_visible() and is_outline() and not(is_not_blur()) }
	hp_weight := { "normal" }
	hp_style := { "normal" }
	hp_align := { "bottom right shrink-overflow" }
	hp_color := { if is_wt_top() then rgb(255,255,255) else rgb(0,0,0) }

	#######Reminder text explaining what this pokemone evolved from
	evolution_left := { x_left(122) }
	evolution_top := { y_top(48) }
	evolution_width := { fun_expand_size(evo_width_1()) }
	evolution_size := { fun_expand_font(5.5) }
	evolution_font := { "Humanist521BT" }
	evolution_weight := { "bold" }
	evolution_style := { "italic" }
	evolution_align := { "bottom left shrink-overflow" }
	evolution_color := { rgb(0,0,0) }
	evolution_visible := { is_pokemon() and not(stage()=="Basic") and contains(styling.Automated_Text_Usage, match: "Evolution Reminder") }
	evolution_outline_visible := { false }
	evolution_outline_blur := { false }
	evolution_outline_separator := { card.evolution_reminder_1 }
	evolution_two_tone_visible := { false }
	evolution_height := { fun_expand_size(if evolution_visible() then 15 else 0) }
	evolution_rem_visible := { evolution_visible() }
	evolution_rem_height := { fun_expand_size(if evolution_rem_visible() then 15 else 0) }
	evo_left := { x_left(if contains(styling.Automated_Text_Usage, match: "Evolution Reminder") then 124+evo_width_1() else 122) }
	evo_width := { fun_expand_size(evo_width_evo()) }
	evo_height := { fun_expand_size(if evo_visible() then 15 else 0) }
	evo_visible := { is_pokemon() and not(stage()=="Basic") }
	evo_outline_visible := { evo_visible() and is_outline() and is_not_blur() }
	evo_outline_blur := { evo_visible() and is_outline() and not(is_not_blur()) }
	evo_two_tone_visible := { evo_visible() and is_two_tone() }

	#######Pokemon Stage Title for pokemon / Card Sub-Type for Trainers / Special Energy Sub-Bar
	title_1_left := { x_left(if is_trainer() then 216
		else if is_energy() then 237 
		else if stage()=="Basic" then 32
		else if stage()=="Level Up" then 29
		else 76) }
	title_1_top := { y_top(if is_trainer() then 30.5
		else if is_energy() then 361 
		else if stage()=="Basic" then 52
		else if stage()=="Level Up" then 51
		else 53) }
	title_1_width := { fun_expand_size(if is_trainer() then 118
		else if is_energy() then 102 else if stage()=="Level Up" then 84 else 47) }
	title_1_font := { if is_trainer() then "Orbitron Modified" else if is_pokemon() then if stage()=="Level Up" then "Super Retro M54-Serif" else "GillSansCdn" else "Humanist521BT" }
	title_1_weight := { if is_pokemon() and not(stage()=="Level Up") then "bold" else "normal" }
	title_1_style := { if is_trainer() or (is_pokemon() and stage()=="Level Up") then "italic" else "normal" }
	title_1_size := { fun_expand_font(if is_trainer() then 8.5 else if is_energy() then 11 else if stage()=="Level Up" then 10 else 10) }
	title_1_align := { if is_trainer() or is_energy() then "bottom right shrink-overflow" else "left bottom shrink-overflow" }
	title_1_color := { if is_energy() or (is_pokemon() and stage()=="Level Up") then rgb(255,255,255) else rgb(0,0,0) }
	title_1_outline_visible := { (is_trainer() or (is_energy() and card.trainer=="Special")) and is_outline() and is_not_blur() }
	title_1_outline_blur := { (is_trainer() or (is_energy() and card.trainer=="Special")) and is_outline() and not(is_not_blur()) }
	title_1_outline_separator := { if ((is_pokemon() and contains(styling.Automated_Text_Usage, match: "Stage Title")) or (is_trainer() and not(card.trainer=="User Defined"))) or is_energy() then card.title_reminder_1_4 else card.title_text_1 }
	title_1_height := { fun_expand_size(if is_pokemon() then 14 else if is_trainer() then 14 else if is_energy() and card.energy_type=="Special" then 20 else 0) }
	title_rem_1_visible := { ((is_pokemon() and contains(styling.Automated_Text_Usage, match: "Stage Title")) or is_trainer()) or (is_energy() and card.energy_type=="Special") }
	title_rem_1_height := { fun_expand_size(if title_rem_1_visible() then if is_pokemon() then 14 else if is_trainer() then 14 else if is_energy() and card.energy_type=="Special" then 20 else 0 else 0) }
	title_txt_1_visible := { (is_pokemon() and not(contains(styling.Automated_Text_Usage, match: "Stage Title"))) or (is_trainer() and card.trainer=="User Defined") }
	title_txt_1_height := { fun_expand_size(if title_txt_1_visible() then if is_pokemon() then 14 else if is_trainer() and card.trainer=="User Defined" then 14 else 0 else 0) }

	#######Pokedex text entry
	pokedex1_left := { x_left(29) }
	pokedex1_top := { y_top(if is_trainer() then 487 else if is_energy() then 481 else 486) }
	pokedex1_width := { fun_expand_size(65) }
	pokedex1_height := { fun_expand_size(if is_pokemon() then 10 else 0) }
	pokedex1_align := { "bottom left" }
	pokedex1_visible := { is_pokemon() }
	pokedex1_outline_visible := { pokedex1_visible() and is_outline() and is_not_blur() }
	pokedex1_outline_blur := { pokedex1_visible() and is_outline() and not(is_not_blur()) }
	pokedex1_two_tone_visible := { pokedex1_visible() and is_two_tone() }
	pokedex1_font := { "GillSans" }
	pokedex1_weight := { if is_pokemon() then "bold" else "normal" }
	pokedex1_style := { if is_pokemon() then "italic" else "normal" }
	pokedex1_size := { fun_expand_font(6.5) }
	pokedex1_color := { if is_two_tone() then rgba(0,0,0,0)
		else if (is_wt_top() and not(card.card_type=="Dual-Type"))
			or (card.card_type=="Dual-Type" and not(is_outline())
			and ((is_dark_1() and not(card.dual_blend_type=="Dark EX Series")) or (is_dark_2() and card.dual_blend_type=="Dark EX Series"))) then rgb(255,255,255)
		else rgb(0,0,0) }

	#######Pokemon Stage Title pokemon
	pokedex2_left := { x_left(33) }
	pokedex2_top := { y_top(258) }
	pokedex2_width := { fun_expand_size(292) }
	pokedex2_height := { fun_expand_size(if is_pokemon() then 12 else 0) }
	pokedex2_align := { "bottom center shrink-overflow" }
	pokedex2_visible := { is_pokemon() and not(stage()=="Level Up") }
	pokedex2_outline_visible := { false }
	pokedex2_outline_blur := { false }
	pokedex2_font := { "GillSans" }
	pokedex2_weight := { "normal" }
	pokedex2_style := { "normal" }
	pokedex2_size := { fun_expand_font(6) }
	pokedex2_color := { rgb(0,0,0) }

	#######Weakness/Resistance/Retreat Cost Title Lines
	weak_ov_left := { x_left(58) }
	weak_ov_top := { y_top(456) }
	weak_ov_width := { fun_expand_size(60) }
	weak_ov_height := { fun_expand_size(12) }
	res_ov_left := { x_left(166) }
	res_ov_top := { y_top(456) }
	res_ov_width := { fun_expand_size(60) }
	res_ov_height := { fun_expand_size(12) }
	ret_ov_left := { x_left(272) }
	ret_ov_top := { y_top(456) }
	ret_ov_width := { fun_expand_size(140) }
	ret_ov_height := { fun_expand_size(14) }
	wrr_ov_size := { fun_expand_font(6.5) }
	wrr_ov_visible := { if is_pokemon() then true else false }
	wrr_ov_outline_visible := { wrr_ov_visible() and is_outline() and is_not_blur() }
	wrr_ov_outline_blur := { wrr_ov_visible() and is_outline() and not(is_not_blur()) }
	wrr_ov_align := { "left middle" }
	wrr_ov_font := { "GillSansCdn" }
	wrr_ov_weight := { "bold" }
	wrr_ov_style := { "normal" }
	ret_ov_color := { if is_two_tone() then rgba(0,0,0,0)
		else if (is_wt_top() and not(card.card_type=="Dual-Type"))
			or (card.card_type=="Dual-Type" and not(is_outline())
			and ((is_dark_1() and not(card.dual_blend_type=="Steam Siege")) or (is_dark_2() and card.dual_blend_type=="Steam Siege"))) then rgb(255,255,255)
		else rgb(0,0,0) }

	#######Weakness & Special Energy Color Field
	weak_left := { x_left(if is_pokemon() then 63 else 215) }
	weak_top := { y_top(if is_pokemon() then 464 else 16) }
	weak_width := { fun_expand_size(if is_pokemon() then 55 else 128) }
	weak_height := { fun_expand_size(if is_pokemon() then 23 else if is_energy() and card.energy_type=="Special" then 32 else 0) }
	weak_visible := { if is_pokemon() or (is_energy() and card.energy_type=="Special") then true else false }
	weak_font := { "PokeTitleXY" }
	weak_outline_visible := { weak_visible() and is_outline() and is_not_blur() }
	weak_outline_blur := { weak_visible() and is_outline() and not(is_not_blur()) }
	weak_size := { fun_expand_font(if is_pokemon() then 11 else 16) }
	weak_weight := { "normal" }
	weak_style := { "normal" }
	weak_color := { if is_two_tone() then rgba(0,0,0,0)
		else if (is_wt_top() and not(card.card_type=="Dual-Type"))
			or (card.card_type=="Dual-Type" and not(is_outline())
			and ((is_dark_1() and not(card.dual_blend_type=="Dark EX Series")) or (is_dark_2() and card.dual_blend_type=="Dark EX Series"))) then rgb(255,255,255)
		else rgb(0,0,0) }
	weak_symbol_font := { "pokemon-a-energy" }
	weak_symbol_size := { fun_expand_font(if is_energy() then 33 else if is_outline() then 18 else 20) }
	weak_align := { if is_energy() then "bottom right" else "bottom left" }

	#######Resistance
	resist_left := { x_left(175) }
	resist_top := { y_top(464) }
	resist_width := { fun_expand_size(58) }
	resist_height := { fun_expand_size(if is_pokemon() then 23 else 0) }
	resist_visible := { if is_pokemon() then true else false}
	resist_font := { "PokeTitleXY" }
	resist_outline_visible := { resist_visible() and is_outline() and is_not_blur() }
	resist_outline_blur := { resist_visible() and is_outline() and not(is_not_blur()) }
	resist_size := { fun_expand_font(11) }
	resist_weight := { "normal" }
	resist_style := { "normal" }
	resist_symbol_font := { "pokemon-a-energy" }
	resist_symbol_size := { fun_expand_font(if is_outline() then 18 else 20) }
	resist_align := { "bottom left" }
	resist_color := { if is_two_tone() then rgba(0,0,0,0)
		else if (is_wt_top() and not(card.card_type=="Dual-Type"))
			or (card.card_type=="Dual-Type" and not(is_outline()) and is_dark_2()) then rgb(255,255,255)
		else rgb(0,0,0) }

	#######Retreat Cost
	retreat_left := { x_left(261) }
	retreat_top := { y_top(464) }
	retreat_width := { fun_expand_size(68) }
	retreat_height := { fun_expand_size(if is_pokemon() then 23 else 0) }
	retreat_visible := { if is_pokemon() then true else false}
	retreat_symbol_font := { "pokemon-a-energy" }
	retreat_symbol_size := { fun_expand_font(if is_outline() then 18 else 20) }
	retreat_align := { "bottom center" }

	######Flavor Text
	flavor_left := { x_left(31) }
	flavor_top := { y_top(413) }
	flavor_width := { fun_expand_size(280) }
	flavor_height := { fun_expand_size(if flavor_visible() then 30 else 0) }
	flavor_visible := { is_pokemon() and not(stage()=="Level Up") and not(contains(card.general_options_04, match: "SP Pokemon")) and not(contains(card.general_options_04, match: "Pokemon with Held Item")) }
	flavor_align := { "top left shrink-overflow" }
	flavor_font := { "Sanvito Light Caption" }
	flavor_outline_visible := { flavor_visible() and is_outline() and is_not_blur() }
	flavor_outline_blur := { flavor_visible() and is_outline() and not(is_not_blur()) }
	flavor_weight := { "bold" }
	flavor_style := { "italic" }
	flavor_size := { fun_expand_font(8.5) }
	flavor_lh_soft := { 1 }

	#######Artist
	ill_left := { x_left(if is_trainer() then 181 else if is_energy() then 187 else 181) }
	ill_top := { y_top(if is_trainer() then 464 else if is_energy() then 461 else 446) }
	ill_width := { fun_expand_size(150) }
	ill_height := { fun_expand_size(if is_energy() and card.energy_type=="Basic" and not(basic_energy_suffix()=="Special" or basic_energy_suffix()=="User Image") then 0 else 10) }
	ill_size := { fun_expand_font(6.5) }
	ill_font := { "GillSans" }
	ill_weight := { "normal" }
	ill_style := { "italic" }
	ill_align := { "bottom right" }
	ill_color := { rgb(0,0,0) }
	ill_outline_separator := { if contains(card.text_options_2, match: "Use Primary Set Artist") then set.artist else card.illustrator }
	ill_outline_visible := { is_outline() and not(is_pokemon()) and is_not_blur() }
	ill_outline_blur := { is_outline() and not(is_pokemon()) and not(is_not_blur()) }

	#######Copyright
	copy_left := { x_left(if is_trainer() then 32 else 81) }
	copy_top := { y_top(if is_energy() then 480 else 485) }
	copy_width := { fun_expand_size(202) }
	copy_height := { fun_expand_size(10) }
	copy_size := { fun_expand_font(if is_trainer() then 6 else 5.5) }
	copy_font := { "GillSans" }
	copy_weight := { "normal" }
	copy_style := { "normal" }
	copy_align := { if is_trainer() then "bottom left" else "bottom center" }
	copy_outline_separator := { if contains(card.text_options_2, match: "Use Primary Set Artist") then set.copyright else card.copyright }
	copy_outline_visible := { is_outline() and contains(set.visibility_options, match: "Visible Copyright on all cards") and is_not_blur() }
	copy_outline_blur := { is_outline() and contains(set.visibility_options, match: "Visible Copyright on all cards") and not(is_not_blur()) }
	copy_color := { if is_two_tone() then rgba(0,0,0,0)
		else if (is_wt_top() and not(card.card_type=="Dual-Type"))
			or (card.card_type=="Dual-Type" and not(is_outline()) and is_dark_2()) then rgb(255,255,255)
		else rgb(0,0,0) }

	#######Card Number
	card_no_left := { x_left(if is_energy() or is_trainer() then 272 else 278) }
	card_no_top := { y_top(if is_energy() then 476 else 482) }
	card_no_width := { fun_expand_size(44) }
	card_no_height := { fun_expand_size(16) }
	card_no_size := { fun_expand_font(8) }
	card_no_font := { "GillSansCdn" }
	card_no_style := { "normal" }
	card_no_weight := { "bold" }
	card_no_align := { "bottom right" }
	card_no_outline_visible := { is_outline() and contains(set.visibility_options, match: "Visible Card Numbers on all cards") and is_not_blur() }
	card_no_outline_blur := { is_outline() and contains(set.visibility_options, match: "Visible Card Numbers on all cards") and not(is_not_blur()) }
	card_no_color := { if is_two_tone() then rgba(0,0,0,0)
		else if (is_wt_top() and not(card.card_type=="Dual-Type"))
			or (card.card_type=="Dual-Type" and not(is_outline())
			and ((is_dark_2() and not(card.dual_blend_type=="Dark EX Series")) or (is_dark_1() and card.dual_blend_type=="Dark EX Series"))) then rgb(255,255,255)
		else rgb(0,0,0) }

	#######Held Item Title
	ability_1_left := { x_left(93) }
	ability_1_top := { y_top(273) }
	ability_1_width := { fun_expand_size(66) }
	ability_1_size := { fun_expand_font(7.8) }
	ability_1_font := { "Humanist521BT" }
	ability_1_weight := { "bold" }
	ability_1_style := { "normal" }
	ability_1_align := { "bottom left shrink-overflow" }
	ability_1_color := { rgb(102,184,84) }
	ability_1_outline_visible := { false }
	ability_1_outline_blur := { false }
	ability_1_outline_separator := { card.ability_text_1 }
	ability_1_height := { ability_txt_1_height() }
	ability_txt_1_visible := { is_pokemon() and contains(card.general_options_04, match: "Pokemon with Held Item") }
	ability_txt_1_height := { fun_expand_size(if ability_txt_1_visible() then 15 else 0) }

	#######Ability Rule Text
	ability_rule_left := { x_left(164) }
	ability_rule_top := { y_top(275) }
	ability_rule_width := { fun_expand_size(168) }
	ability_rule_height := { fun_expand_size(if ability_txt_1_visible() then 35 else 0) }
	ability_rule_size := { fun_expand_font(7) }
	ability_rule_font := { "Humanist521BT" }
	ability_rule_weight := { "normal" }
	ability_rule_style := { "normal" }
	ability_rule_align := { "top left shrink-overflow" }
	ability_rule_symbol_font := { "pokemon-a-rule" }
	ability_rule_symbol_size := { fun_expand_font(12) }
	ability_rule_outline_visible := { false }
	ability_rule_outline_blur := { false }
	ability_rule_lh_hard := { 1 }
	ability_rule_lh_soft := { 1 }
	ability_rule_mask := { "mask-held.png" }

	########## Arceus Ability
	ability_2_left := { x_left(336-fun_decompress(ability_2_width())) }
	ability_2_top := { y_top(278) }
	ability_2_width := { fun_expand_size(if fun_decompress(card_style.ability_text_2.content_width)<=10 then 10 else if fun_decompress(card_style.ability_text_2.content_width)>=294 then 294 else fun_decompress(card_style.ability_text_2.content_width)) }
	ability_2_height := { if ability_2_visible() then 12 else 0  }
	ability_2_align := { "bottom right shrink overflow" }
	ability_2_visible := { is_pokemon() and contains(card.general_options_04, match: "Pokemon Special Ability Bar") and not(contains(card.general_options_04, match: "Pokemon with Held Item")) }
	ability_2_font := { "Humanist521BDCdn" }
	ability_2_size := { fun_expand_font(7.5) }
	ability_2_weight := { "normal" }
	ability_2_style := { "normal" }
	ability_2_color := { if is_two_tone() then rgba(0,0,0,0) else if is_wt_text() then rgb(255,255,255) else rgb(0,0,0) }
	ability_2_outline_visible := { ability_2_visible() and is_outline() and is_not_blur() }
	ability_2_outline_blur := { ability_2_visible() and is_outline() and not(is_not_blur()) }

	#######Multi-line reminder text explaining the baby pokemon's auto defense ability and explaining how to use the different trainer cards.
	special_rule_left := { x_left(if is_pokemon() then 37 else 50) }
	special_rule_top := { y_top(if is_pokemon() then 420 else 274) }
	special_rule_width := { fun_expand_size(if is_pokemon() then 291 else 265) }
	special_rule_align := { if is_pokemon() then "middle left justify" else "bottom left justify" }
	special_rule_font := { "Humanist521BT" }
	special_rule_weight := { "normal" }
	special_rule_style := { "normal" }
	special_rule_size := { fun_expand_font(if is_pokemon() then 7 else 9.5) }
	special_rule_lh_soft := { if is_pokemon() then 0.85 else 0.85 }
	special_rule_color := { rgb(0,0,0) }
	special_rule_outline_visible := { (((is_trainer() and not(card.trainer=="Item")) and is_outline()) or (is_pokemon() and stage()=="Level Up")) and is_not_blur() }
	special_rule_outline_blur := { (((is_trainer() and not(card.trainer=="Item")) and is_outline()) or (is_pokemon() and stage()=="Level Up")) and not(is_not_blur()) }
	special_rule_outline_separator := { if (is_pokemon() and not(contains(styling.Automated_Text_Usage, match: "LV X Reminder"))) or (is_trainer() and (card.trainer=="User Defined" or not(contains(styling.Automated_Text_Usage, match: "Trainer Play Rule Reminder")))) then card.special_rule_text_1 else card.special_rule_reminder_1_4 }
	special_rule_height := { fun_expand_size(if is_trainer() and not(card.trainer=="Item") then rule_np_middle()-274-4*rule_np_sizing()
		else if is_pokemon() and stage()=="Level Up" then 28 else 0) }
	special_rule_rem_visible := { (is_pokemon() and stage()=="Level Up" and contains(styling.Automated_Text_Usage, match: "LV X Reminder")) or 
		(is_trainer() and (not(card.trainer=="Item" or card.trainer=="User Defined") or contains(styling.Automated_Text_Usage, match: "Trainer Play Rule Reminder"))) }
	special_rule_rem_height := { fun_expand_size(if special_rule_rem_visible() then if is_trainer() then rule_np_middle()-274-4*rule_np_sizing()
		else if is_pokemon() then 28 else 0) }
	special_rule_txt_visible := { (is_pokemon() and stage()=="Level Up" and not(contains(styling.Automated_Text_Usage, match: "LV X Reminder"))) or 
		(is_trainer() and (card.trainer=="User Defined" or (not(card.trainer=="Item") or not(contains(styling.Automated_Text_Usage, match: "Trainer Play Rule Reminder"))))) }
	special_rule_txt_height := { fun_expand_size(if special_rule_txt_visible() then if is_trainer() then rule_np_middle()-274-4*rule_np_sizing()
		else if is_pokemon() then 28 else 0) }

	#######Rules text for trainers and energy
	rule_np_1_left := { x_left(if is_trainer() then 50 else 26) }
	rule_np_1_top := { y_top(if is_trainer() then if card.trainer=="Item" then 274 else rule_np_middle()+4*rule_np_sizing()
		else 388) }
	rule_np_1_width := { fun_expand_size(if is_trainer() then 265 else 315) }
	rule_np_1_height := { fun_expand_size(if is_pokemon() or (is_energy() and not(card.energy_type=="Special")) then 0 
		else if is_trainer() then 445-fun_decompress(rule_np_1_top()+slide_up())
		else 75) }
	rule_np_1_visible := { if (is_energy() and card.energy_type=="Special") or is_trainer() then true else false }
	rule_np_1_size := { fun_expand_font(if is_energy() then 9 else if is_trainer() then 11.5 else 13.7) }
	rule_np_1_align := { if is_trainer() and card.trainer=="Item" then "middle left justify" else "top left justify" }
	rule_np_1_font := { if is_trainer() then "Humanist521BT" else "GillSans" }
	rule_np_1_outline_visible := { rule_np_1_visible() and is_outline() and is_not_blur() }
	rule_np_1_outline_blur := { rule_np_1_visible() and is_outline() and not(is_not_blur()) }
	rule_np_1_weight := { "normal" }
	rule_np_1_style := { "normal" }
	rule_np_1_symbol_font := { "pokemon-a-rule" }
	rule_np_1_symbol_size := { fun_expand_font(if is_energy() then 14 else 12) }
	rule_np_1_lh_hard := { if is_energy() then 1 else 0.9 }
	rule_np_1_lh_soft := { if is_energy() then 1 else 0.9 }
	rule_np_middle := { 359.5+rule_np_sizing()*(if not(card.trainer=="Item") then (6/49.32*length(special_rule_outline_separator()))-(8.25/39.91*length(card.rule_np_1)) else 0) }
	rule_np_sizing := { if (445-274)>(12/49.32*length(special_rule_outline_separator()))+(16.5/39.91*length(card.rule_np_1))+8 then 1
		else (445-274)/((12/49.32*length(special_rule_outline_separator()))+(16.5/39.91*length(card.rule_np_1))+8) }

	#######Attack Costs
	cost_1_left := { x_left(if is_pokemon() then 24 else 35) }
	cost_1_top := { y_top(0) }
	#cost_1_top := { y_top(top_height()+1) }
	cost_1_width := { fun_expand_size(46) }
	cost_1_height := { fun_expand_size(0) }
	#cost_1_height := { fun_expand_size(if is_pokemon() and not(is_ability_classic_1()) then divider_height_1()-top_height() else 0) }
	cost_1_visible := { false }
	#cost_1_visible := { if is_pokemon() and not(is_ability_classic_1()) then true else false }
	cost_2_left := { x_left(24) }
	cost_2_top := { y_top(0) }
	#cost_2_top := { y_top(divider_height_1()+1) }
	cost_2_width := { fun_expand_size(46) }
	cost_2_height := { fun_expand_size(0) }
	#cost_2_height := { fun_expand_size(if is_pokemon() and not(is_ability_classic_2()) then divider_height_2()-divider_height_1() else 0) }
	cost_2_visible := { false }
	#cost_2_visible := { if is_pokemon() and not(is_ability_classic_2()) then true else false }
	cost_3_left := { x_left(24) }
	cost_3_top := { y_top(0) }
	#cost_3_top := { y_top(divider_height_2()+1) }
	cost_3_width := { fun_expand_size(46) }
	cost_3_height := { fun_expand_size(0) }
	#cost_3_height := { fun_expand_size(if is_pokemon() and not(is_ability_classic_3()) and attack_no()>=2 then bottom_height()-divider_height_2() else 0) }
	cost_3_visible := { false }
	#cost_3_visible := { if is_pokemon() and not(is_ability_classic_3()) and attack_no()>=2 then true else false }
	cost_align := { "middle center" }
	cost_symbol_font := { "pokemon-a-energy" }
	cost_symbol_size := { fun_expand_size(21) }

	##########Poke-Power / Poke-Body Titles
	attack_1_left := { x_left(153) }
	attack_1_top := { y_top(0) }
	#attack_1_top := { y_top(if is_pokemon() then divider_height_2() else if is_trainer() and card.trainer=="Tool" then 290+fun_decompress(card_style.special_rule_outline_separator().content_height) else 0) }
	attack_1_width := { fun_expand_size(155) }
	attack_1_height := { fun_expand_size(0) }
	#attack_1_height := { fun_expand_size(if is_ability_classic_1() and (is_pokemon() or (is_trainer() and card.trainer=="Tool")) then 23 else 0) }
	attack_1_visible := { false }
	#attack_1_visible := { if is_ability_classic_1() and (is_pokemon() or (is_trainer() and card.trainer=="Tool")) then true else false }
	attack_1_outline_visible := { attack_1_visible() and is_outline() and is_not_blur() }
	attack_1_outline_blur := { attack_1_visible() and is_outline() and not(is_not_blur()) }
	attack_2_left := { x_left(153) }
	attack_2_top := { y_top(0) }
	#attack_2_top := { y_top(divider_height_1()) }
	attack_2_width := { fun_expand_size(155) }
	attack_2_height := { fun_expand_size(0) }
	#attack_2_height := { fun_expand_size(if is_ability_classic_2() and is_pokemon() and not(card.stage_baby=="Baby") then 23 else 0) }
	attack_2_visible := { false }
	#attack_2_visible := { if is_ability_classic_2() and is_pokemon() and not(card.stage_baby=="Baby") then true else false }
	attack_2_outline_visible := { attack_2_visible() and is_outline() and is_not_blur() }
	attack_2_outline_blur := { attack_2_visible() and is_outline() and not(is_not_blur()) }
	attack_3_left := { x_left(153) }
	attack_3_top := { y_top(0) }
	#attack_3_top := { y_top(top_height()) }
	attack_3_width := { fun_expand_size(155) }
	attack_3_height := { fun_expand_size(0) }
	#attack_3_height := { fun_expand_size(if is_ability_classic_3() and is_pokemon() and not(card.stage_baby=="Baby") and attack_no()>=2 then 23 else 0) }
	attack_3_visible := { false }
	#attack_3_visible := { if is_ability_classic_3() and is_pokemon() and not(card.stage_baby=="Baby") and attack_no()>=2 then true else false }
	attack_3_outline_visible := { attack_3_visible() and is_outline() and is_not_blur() }
	attack_3_outline_blur := { attack_3_visible() and is_outline() and not(is_not_blur()) }
	attack_align := { "middle center" }
	attack_font := { "GillSans" }
	attack_weight := { "bold" }
	attack_style := { "normal" }
	attack_size := { fun_expand_font(11) }
	attack_color := { ability_color() }

	#######Attack Damage
	damage_1_left := { x_left(297) }
	damage_1_top := { y_top(0) }
	#damage_1_top := { y_top(top_height()+1) }
	damage_1_width := { fun_expand_size(48) }
	damage_1_height := { fun_expand_size(0) }
	#damage_1_height := { fun_expand_size(if is_pokemon() and not(is_ability_classic_1()) then divider_height_1()-top_height() else 0) }
	damage_1_visible := { false }
	#damage_1_visible := { if is_pokemon() and not(is_ability_classic_1()) then true else false }
	damage_1_outline_visible := { damage_1_visible() and is_outline() and is_not_blur() }
	damage_1_outline_blur := { damage_1_visible() and is_outline() and not(is_not_blur()) }
	damage_2_left := { x_left(297) }
	damage_2_top := { y_top(0) }
	#damage_2_top := { y_top(divider_height_1()+1) }
	damage_2_width := { fun_expand_size(48) }
	damage_2_height := { fun_expand_size(0) }
	#damage_2_height := { fun_expand_size(if is_pokemon() then if not(is_ability_classic_2()) then divider_height_2()-divider_height_1() else 0 else 0) }
	damage_2_visible := { false }
	#damage_2_visible := { if is_pokemon() and not(is_ability_classic_2()) then true else false }
	damage_2_outline_visible := { damage_2_visible() and is_outline() and is_not_blur() }
	damage_2_outline_blur := { damage_2_visible() and is_outline() and not(is_not_blur()) }
	damage_3_left := { x_left(297) }
	damage_3_top := { y_top(0) }
	#damage_3_top := { y_top(divider_height_2()+1) }
	damage_3_width := { fun_expand_size(48) }
	damage_3_height := { fun_expand_size(0) }
	#damage_3_height := { fun_expand_size(if is_pokemon() and attack_no()>=2 and not(is_ability_classic_3()) then bottom_height()-divider_height_2() else 0) }
	damage_3_visible := { false }
	#damage_3_visible := { if is_pokemon() then if attack_no()>=2 and not(is_ability_classic_3()) then true else false }
	damage_3_outline_visible := { damage_3_visible() and is_outline() and is_not_blur() }
	damage_3_outline_blur := { damage_3_visible() and is_outline() and not(is_not_blur()) }
	damage_align := { "middle left" }
	damage_font := { "GillSans" }
	damage_weight := { "normal" }
	damage_style := { "normal" }
	damage_size := { fun_expand_font(20) }

	#######Attack rules text and title
	rule_1_left := { x_left(0) }
	rule_1_top := { y_top(0) }
	rule_1_width := { fun_expand_size(0) }
	rule_1_height := { fun_expand_size(0) }
	rule_1_visible := { false }
	rule_1_align := { "bottom left" }
	rule_2_left := { x_left(0) }
	rule_2_top := { y_top(0) }
	rule_2_width := { fun_expand_size(0) }
	rule_2_height := { fun_expand_size(0) }
	rule_2_visible := { false }
	rule_2_align := { "bottom left" }
	rule_3_left := { x_left(0) }
	rule_3_top := { y_top(0) }
	rule_3_width := { fun_expand_size(0) }
	rule_3_height := { fun_expand_size(0) }
	rule_3_visible := { false }
	rule_3_align := { "bottom left" }
	#rule_1_left := { x_left(if is_ability_classic_1() then 50 else 72) }
	#rule_1_top := { y_top(top_height()+1) }
	#rule_1_width := { fun_expand_size(if is_pokemon() then if is_ability_classic_1() then 267 else 221 else 0) }
	#rule_1_height := { fun_expand_size(if is_pokemon() then divider_height_1()-top_height() else 0) }
	#rule_1_visible := { if is_pokemon() then true else false }
	#rule_1_align := { if rule_line_1()<=1 then "middle center" else "middle left" }
	rule_1_outline_visible := { rule_1_visible() and is_outline() and is_not_blur() }
	rule_1_outline_blur := { rule_1_visible() and is_outline() and not(is_not_blur()) }
	#rule_2_left := { x_left(if is_ability_classic_2() then 50 else 72) }
	#rule_2_top := { y_top(divider_height_1()+1) }
	#rule_2_width := { fun_expand_size(if is_pokemon() then if is_ability_classic_2() then 267 else 221 else 0) }
	#rule_2_height := { fun_expand_size(if is_pokemon() then divider_height_2()-divider_height_1() else 0) }
	#rule_2_visible := { if is_pokemon() then true else false }
	#rule_2_align := { if rule_line_2()<=1 then "middle center" else "middle left justify" }
	rule_2_outline_visible := { rule_2_visible() and is_outline() and is_not_blur() }
	rule_2_outline_blur := { rule_2_visible() and is_outline() and not(is_not_blur()) }
	#rule_3_left := { x_left(if is_ability_classic_3() then 50 else 72) }
	#rule_3_top := { y_top(divider_height_2()+1) }
	#rule_3_width := { fun_expand_size(if is_pokemon() then if is_ability_classic_3() then 267 else 221 else 0) }
	#rule_3_height := { fun_expand_size(if is_pokemon() and attack_no()>=2 then bottom_height()-divider_height_2() else 0) }
	#rule_3_visible := {if is_pokemon() and attack_no()>=2 then true else false }
	#rule_3_align := { if rule_line_3()<=1 then "middle center" else "middle left justify" }
	rule_3_outline_visible := { rule_3_visible() and is_outline() and is_not_blur() }
	rule_3_outline_blur := { rule_3_visible() and is_outline() and not(is_not_blur()) }
	rule_size := { fun_expand_font(13.7) }
	rule_font := { "PokeRuleClassic" }
	rule_weight := { "normal" }
	rule_style := { "normal" }
	rule_symbol_font := { "pokemon-a-rule" }
	rule_symbol_size := { fun_expand_font(18) }
	rule_lh_hard := { if is_energy() then 1 else 1.4 }
	rule_lh_soft := { 1 }
############################################################## Styling fields
#All Card Options
styling field:
	type: multiple choice
	name: General Choices
	choice: Test Image
	choice: Diagnostic Text
styling field:
	type: multiple choice
	name: Automated Text Usage
	choice: Stage Title
	choice: Evolution Reminder
	choice: LV X Reminder
	choice: Trainer Play Rule Reminder
	initial: Stage Title, Evolution Reminder, LV X Reminder, Trainer Play Rule Reminder
styling field:
	type: multiple choice
	name: Ability and Energy Icons
	choice: Use Black & White or XY Style Ability Icon
	choice: Use E-Card Poke-Body & Poke-Power Icons
	choice: Use Transparent Free Energy Icon (aka No Energy)
styling style:
	General Choices:
		render style: checklist
		direction: vertical
	Automated Text Usage:
		render style: checklist
		direction: vertical
	Ability and Energy Icons:
		render style: checklist
		direction: vertical
############################################################## Throughout this odd number layers are reserved for shading/covering up etc.
card style:
	######################## Hidden Layer -18
	######################## this layer provids a layer to place hidden buttons and images
	######################## Some of these items are found in the extra card fields
#########User defined color fields (there but not seen)
	energy color 1:
		left: { x_left(8) }
		top: { y_top(9) }
		width: { fun_expand_size(350) }
		height: { fun_expand_size(if ((is_energy() or is_pokemon()) and background_type_1()=="User Defined") or (is_trainer() and card.trainer=="User Defined") then 495 else 0) }
		visible: { if ((is_energy() or is_pokemon()) and background_type_1()=="User Defined") or (is_trainer() and card.trainer=="User Defined") then "yes" else "no" }
		mask: { if is_energy() and basic_energy_meld()=="Generations" then "/pokemon-b-common.mse-include/mask-e-generations-1.png" else if is_energy() and background_type_1()=="User Defined" then "/pokemon-b-common.mse-include/mask-top-bottom.png" else if card.card_type=="Dual-Type" then dual_mask() else if is_trainer() and card.trainer=="User Defined" then "mask-dpp-t-ud.png" else "/pokemon-b-common.mse-include/mask-blank.png" }
		z index: -19
	energy color 2:
		left: { x_left(8) }
		top: { y_top(9) }
		width: { fun_expand_size(350) }
		height: { fun_expand_size(if (card.card_type=="Dual-Type" and background_type_1()=="User Defined") or (is_energy() and basic_energy_meld()=="Generations") then 495 else 0) }
		mask: { if is_energy() and basic_energy_meld()=="Generations" then "/pokemon-b-common.mse-include/mask-e-generations-2.png" else if card.card_type=="Dual-Type" then dual_mask_reverse() else "/pokemon-b-common.mse-include/mask-blank.png" }
		visible: { if (card.card_type=="Dual-Type" and background_type_1()=="User Defined") or (is_energy() and basic_energy_meld()=="Generations") then "yes" else "no" }
		z index: -19
	energy color 3:
		left: { x_left(8) }
		top: { y_top(9) }
		width: { fun_expand_size(350) }
		height: { fun_expand_size(if is_energy() and basic_energy_meld()=="Generations" then 495 else 0) }
		mask: { if is_energy() and basic_energy_meld()=="Generations" then "/pokemon-b-common.mse-include/mask-e-generations-3.png" else "/pokemon-b-common.mse-include/mask-blank.png" }
		visible: { if is_energy() and basic_energy_meld()=="Generations" then "yes" else "no" }
		z index: -19
#########Image used for user defined background image
	background pic 1:
		left: { x_left(183)-350 }
		top: { y_top(257)-495 }
		width: { 700 }
		height: { if is_image_1() then 990 else 0 }
		visible: { if is_image_1() then "yes" else "no" }
		z index: -18
		mask: { if card.card_type=="Dual-Type" then dual_mask() else if is_energy() and background_type_1()=="User Defined" then "/pokemon-b-common.mse-include/mask-bottom-top.png" else "/pokemon-b-common.mse-include/mask-blank.png" }
#########Image used for second user defined background image
	background pic 2:
		left: { x_left(183)-350 }
		top: { y_top(257)-495 }
		width: { 700 }
		height: { if is_image_2() then 990 else 0 }
		z index: -18
		visible: { if is_image_2() then "yes" else "no" }
		mask: { dual_mask_reverse() }
	######################## Background Layer -14
	######################## this layer provids the background image modified slightly for dual type (changed some z-index)
#########Blank image to separate hidden images
	blank image:
		left: { x_left(0) }
		top: { y_top(0) }
		width: { fun_expand_size(368) }
		height: { fun_expand_size(513) }
		visible: { "yes" }
		z index: -17
		render style: image
		image: { "/pokemon-b-common.mse-include/mask-blank.png" }
#########Background image everything before this is hidden
	text popout image:
		left: { x_left(8) }
		top: { y_top(9) }
		width: { fun_expand_size(350) }
		height: { fun_expand_size(495) }
		visible: { if is_two_tone() then "yes" else "no" }
		z index: -15
		render style: image
		image: 
			script: set_combine(input: if is_dark_1() then if is_dark_2() then  "/pokemon-b-common.mse-include/mask-blank.png"
						else dual_mask()
					else if is_dark_2() then dual_mask_reverse()
					else "/pokemon-b-common.mse-include/mask-blank-reverse.png"
				, combine: "difference")
#########Primary Background Image and Background Image for Black portion of Two-Tone Text
	background:
		left: { x_left(8) }
		top: { y_top(9) }
		width: { fun_expand_size(350) }
		height: { fun_expand_size(495) }
		z index: -14
		render style: image
		mask: 
			script: if card.card_type=="Dual-Type" and is_two_tone() then if is_dark_1() and not(is_dark_2()) then	dual_mask_reverse()
					else if is_dark_2() and not(is_dark_1()) then						dual_mask()
					else "/pokemon-b-common.mse-include/mask-blank.png"
				else "/pokemon-b-common.mse-include/mask-blank.png"
		image:
			script: if card.card_type=="Pokemon" then masked_blend(light: "mask-box-image.png", dark: masked_blend(light: "/pokemon-b-common.mse-include/mask-blank.png",
						dark:	if is_image_1() then					card.background_pic_1
							else if texture_type_1()=="Color" and not(background_type_1()=="User Defined") or (colored_pokemon_suffix_1()=="Color" and background_type_1()=="User Defined") then recolor_image(input: "/pokemon-b-common.mse-include/blank-color.png", red: texture_color_1(), green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255))
							else if background_type_1()=="User Defined" then	recolor_image(input: "/pokemon-b-common.mse-include/back-p-colored-"+colored_pokemon_suffix_1()+".png", red: card.energy_color_1, green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255))
							else							"/pokemon-b-common.mse-include/back-p-"+texture_type_1()+"-"+background_type_1()+".png",
						mask: "mask-dpp-wrrswirl.png"), mask: if contains(card.text_options_2, match: "Body Fade Box") then "mask-box-fade.png" else "/pokemon-b-common.mse-include/mask-blank-reverse.png")
				else if card.card_type=="Dual-Type" then set_combine(input: masked_blend(light: "mask-box-image.png", dark: masked_blend(light: "/pokemon-b-common.mse-include/mask-blank.png", dark: masked_blend(light:
							(if is_image_1() then					card.background_pic_1
							else if texture_type_1()=="Color" and not(background_type_1()=="User Defined") or (colored_pokemon_suffix_1()=="Color" and background_type_1()=="User Defined") then recolor_image(input: "/pokemon-b-common.mse-include/blank-color.png", red: texture_color_1(), green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255))
							else if background_type_1()=="User Defined" then	recolor_image(input: "/pokemon-b-common.mse-include/back-p-colored-"+colored_pokemon_suffix_1()+".png", red: card.energy_color_1, green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255))
							else							"/pokemon-b-common.mse-include/back-p-"+texture_type_1()+"-"+background_type_1()+".png"),
						dark:	(if is_image_2() then					card.background_pic_2
							else if texture_type_2()=="Color" and not(background_type_2()=="User Defined") or (colored_pokemon_suffix_2()=="Color" and background_type_2()=="User Defined") then recolor_image(input: "/pokemon-b-common.mse-include/blank-color.png", red: texture_color_2(), green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255))
							else if background_type_2()=="User Defined" then	recolor_image(input: "/pokemon-b-common.mse-include/back-p-colored-"+colored_pokemon_suffix_2()+".png", red: card.energy_color_2, green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255))
							else							"/pokemon-b-common.mse-include/back-p-"+texture_type_2()+"-"+background_type_2()+".png"),
						mask:	blend_mask()), mask: "mask-dpp-wrrswirl.png"), mask: if contains(card.text_options_2, match: "Body Fade Box") then "mask-box-fade.png" else "/pokemon-b-common.mse-include/mask-blank-reverse.png"), combine: if is_two_tone() then "multiply" else "normal")
				else if is_energy()
					then if card.energy_type=="Basic"
						then if basic_energy_meld()=="mix" 
							then if background_type_1()=="Metal" and (card.metal_texture=="Nintendo" or card.metal_texture=="Wizards") then masked_blend(light: "/pokemon-b-common.mse-include/mask-blank.png", dark: masked_blend(light: recolor_image(input: "/pokemon-b-common.mse-include/back-e-colored-"+basic_energy_suffix()+".png", red: basic_color(), green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255)), dark: "/pokemon-b-common.mse-include/mask-blank-reverse.png", mask: "/pokemon-b-common.mse-include/back-e-metal-"+card.metal_texture+".png"), mask: "/pokemon-b-common.mse-include/blend-e-"+basic_energy_suffix()+".png")
							else 						masked_blend(light: "/pokemon-b-common.mse-include/mask-blank.png", dark: recolor_image(input: "/pokemon-b-common.mse-include/back-e-colored-"+basic_energy_suffix()+".png", red: basic_color(), green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255)), mask: "/pokemon-b-common.mse-include/blend-e-"+basic_energy_suffix()+".png")
						else if basic_energy_meld()=="blend" then		masked_blend(light: "/pokemon-b-common.mse-include/mask-blank.png", dark: if background_type_1()=="Metal" and (card.metal_texture=="Nintendo" or card.metal_texture=="Wizards") then "/pokemon-b-common.mse-include/back-e-metal-"+card.metal_texture+".png" else recolor_image(input: "/pokemon-b-common.mse-include/blank-color.png", red: basic_color(), green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255)), mask: "/pokemon-b-common.mse-include/blend-e-"+basic_energy_suffix()+".png")
						else if basic_energy_meld()=="back" then		"/pokemon-b-common.mse-include/back-e-"+basic_energy_suffix()+"-"+background_type_1()+".png"
						else if basic_energy_meld()=="mask" then		masked_blend(light: "/pokemon-b-common.mse-include/mask-blank.png", dark: "/pokemon-b-common.mse-include/back-e-"+background_type_1()+".png", mask: "/pokemon-b-common.mse-include/blend-e-"+basic_energy_suffix()+".png")
						else if basic_energy_meld()=="Generations"
							then if background_type_1()=="Metal" and (card.metal_texture=="Nintendo" or card.metal_texture=="Wizards") then		masked_blend(light: "/pokemon-b-common.mse-include/mask-blank.png", dark: masked_blend(light: "/pokemon-b-common.mse-include/back-e-metal-"+card.metal_texture+".png" , dark: "/pokemon-b-common.mse-include/mask-blank-reverse.png", mask: recolor_image(input: "/pokemon-b-common.mse-include/back-e-colored-generations.png", red: basic_color(), green: basic_color_3(), blue: basic_color_2(), white: rgb(255,255,255))), mask: "/pokemon-b-common.mse-include/blend-e-classic.png")
							else						recolor_image(input: "/pokemon-b-common.mse-include/back-e-colored-generations.png", red: basic_color(), green: basic_color_3(), blue: basic_color_2(), white: rgb(255,255,255))
						else if basic_energy_meld()=="recolor"
							then if background_type_1()=="Metal" and (card.metal_texture=="Nintendo" or card.metal_texture=="Wizards") then		masked_blend(light: "/pokemon-b-common.mse-include/mask-blank.png", dark: "/pokemon-b-common.mse-include/back-e-metal-"+card.metal_texture+".png", mask: "/pokemon-b-common.mse-include/blend-e-special.png")
							else						recolor_image(input: "/pokemon-b-common.mse-include/back-e-colored-"+basic_energy_suffix()+".png", red: basic_color(), green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255))
						else if basic_energy_meld()=="image"
							then if contains(card.basic_user_image_type, match:"Monocolor") then	masked_blend(light: "/pokemon-b-common.mse-include/mask-blank.png", dark: recolor_image(input: recolor_image(input: card.background_pic_1, red: rgb(255,0,0), green: rgb(255,0,0), blue: rgb(255,0,0), white: rgb(255,64,64)), red: basic_color(), green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255)), mask: "/pokemon-b-common.mse-include/blend-e-user"+(if contains(card.basic_user_image_type, match:"Triburst") then "-triburst" else "")+(if contains(card.basic_user_image_type, match:"Sunburst") then "-sunburst" else "")+(if contains(card.basic_user_image_type, match:"Centered") then "-centered" else "")+".png")
							else 						masked_blend(light: "/pokemon-b-common.mse-include/mask-blank.png", dark: card.background_pic_1, mask: "/pokemon-b-common.mse-include/blend-e-user"+(if contains(card.basic_user_image_type, match:"Triburst") then "-triburst" else "")+(if contains(card.basic_user_image_type, match:"Sunburst") then "-sunburst" else "")+(if contains(card.basic_user_image_type, match:"Centered") then "-centered" else "")+".png")
						else "/pokemon-b-common.mse-include/mask-blank.png"
					else if contains(card.art_options, match: "Full Art") then "back-dpp-e-fa.png"
					else "back-dpp-e.png"
				else if is_trainer() then "back-dpp-t.png"
				else "/pokemon-b-common.mse-include/blank.png"
#########Background Image for White portion of Two-Tone Text
	background 2:
		left: { x_left(8) }
		top: { y_top(9) }
		width: { fun_expand_size(350) }
		height: { fun_expand_size(if card.card_type=="Dual-Type" and is_two_tone() then 495 else 0) }
		visible: { if card.card_type=="Dual-Type" and is_two_tone() then "yes" else "no" }
		z index: -14
		render style: image
		mask: 
			script: if card.card_type=="Dual-Type" and is_two_tone() then if is_dark_1() and not(is_dark_2()) then	dual_mask()
					else if is_dark_2() and not(is_dark_1()) then						dual_mask_reverse()
					else "/pokemon-b-common.mse-include/mask-blank.png"
				else "/pokemon-b-common.mse-include/mask-blank.png"
		image:
			script: if card.card_type=="Dual-Type" then set_combine(input: masked_blend(light: "mask-box-image.png", dark: masked_blend(light: "/pokemon-b-common.mse-include/mask-blank.png", dark: masked_blend(light:
							(if is_image_1() then					card.background_pic_1
							else if texture_type_1()=="Color" and not(background_type_1()=="User Defined") or (colored_pokemon_suffix_1()=="Color" and background_type_1()=="User Defined") then recolor_image(input: "/pokemon-b-common.mse-include/blank-color.png", red: texture_color_1(), green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255))
							else if background_type_1()=="User Defined" then	recolor_image(input: "/pokemon-b-common.mse-include/back-p-colored-"+colored_pokemon_suffix_1()+".png", red: card.energy_color_1, green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255))
							else							"/pokemon-b-common.mse-include/back-p-"+texture_type_1()+"-"+background_type_1()+".png"),
						dark:	(if is_image_2() then					card.background_pic_2
							else if texture_type_2()=="Color" and not(background_type_2()=="User Defined") or (colored_pokemon_suffix_2()=="Color" and background_type_2()=="User Defined") then recolor_image(input: "/pokemon-b-common.mse-include/blank-color.png", red: texture_color_2(), green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255))
							else if background_type_2()=="User Defined" then	recolor_image(input: "/pokemon-b-common.mse-include/back-p-colored-"+colored_pokemon_suffix_2()+".png", red: card.energy_color_2, green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255))
							else							"/pokemon-b-common.mse-include/back-p-"+texture_type_2()+"-"+background_type_2()+".png"),
						mask:	blend_mask()), mask: "mask-dpp-wrrswirl.png"), mask: if contains(card.text_options_2, match: "Body Fade Box") then "mask-box-fade.png" else "/pokemon-b-common.mse-include/mask-blank-reverse.png"), combine: if is_two_tone() then "screen" else "normal")
				else "/pokemon-b-common.mse-include/blank.png"
	######################## Frame Layer -12
	######################## This layer provides the image framework underneath the image
	window:
		left: { x_left(8) }
		top: { y_top(9) }
		width: { fun_expand_size(350) }
		height: { fun_expand_size(if ((is_pokemon() and not(contains(card.art_options, match: "Full Art"))) or (is_energy() and card.energy_type=="Basic")) or (is_trainer() and not(contains(card.art_options, match: "Full Art"))) then 495 else 0) }
		visible: { ((is_pokemon() and not(contains(card.art_options, match: "Full Art"))) or (is_energy() and card.energy_type=="Basic")) or (is_trainer() and not(contains(card.art_options, match: "Full Art"))) }
		z index: -12
		render style: image
		image:
			script: if is_energy() and card.energy_type=="Basic" then recolor_image(input: "frame-dpp-basic-bottom.png", red: basic_color(), green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255))
				else if is_trainer() and not(contains(card.art_options, match: "Full Art"))
					then if card.trainer=="User Defined" then recolor_image(input: "overlay-dpp-t-colored.png", red: card.energy_color_1, green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255))
					else if card.trainer=="Stadium" or card.trainer=="Supporter" then ("overlay-dpp-t-"+card.trainer+".png")
					else "overlay-dpp-t-trainer.png"
				else if is_pokemon() then "window-dpp-p"+(if stage()=="Level Up" then "-lx" else "")+".png"
				else "/pokemon-b-common.mse-include/blank.png"
	######################## Image Layer -10
	######################## This layer is for the user input image
	card image:
		left: 
			script: x_left(if (contains(card.art_options, match: "Full Art")) then 13
					else if is_energy() then 15
					else if is_pokemon() then 30
					else 37)
		top: 
			script: y_top(if (contains(card.art_options, match: "Full Art")) then 13
					else if is_energy() then if card.energy_type=="Basic" then 52 
						else 21 
					else if is_pokemon() then 53.5
					else 78)
		width: 
			script: fun_expand_size(if (contains(card.art_options, match: "Full Art")) then 339
					else if is_energy() then 336
					else if is_pokemon() then 306
					else 290)
		height:
			script: fun_expand_size(if (contains(card.art_options, match: "Full Art")) then 486
					else if is_energy() then if card.energy_type=="Special" then 333 
						else if card.energy_type=="Basic" and basic_energy_suffix()=="Special" then 273 
						else 0 
					else if is_pokemon() then 204
					else if is_trainer() then 177
					else 0)
		visible: { not(is_energy() and card.energy_type=="Basic" and not(basic_energy_suffix()=="Special")) }
		mask: { if contains(card.art_options, match: "Faded Full Art") then "/pokemon-b-common.mse-include/mask-fade.png" else "/pokemon-b-common.mse-include/mask-blank.png" }
		z index: -10
	team logo:
		left: { x_left(24) }
		top: { y_top(21) }
		width: { fun_expand_size(175) }
		height: { fun_expand_size(if is_trainer() and card.trainer=="User Defined" and not(contains(card.general_options_04, match: "Stadium and Supporters are a Subclass of Trainers")) then 23 else 0) }
		visible: { is_trainer() and card.trainer=="User Defined" and not(contains(card.general_options_04, match: "Stadium and Supporters are a Subclass of Trainers")) }
		z index: 8
	gym leader pic:
		left: { x_left(if contains(card.general_options_04, match: "SP Popout Image") then 249 else 283) }
		top: { y_top(if contains(card.general_options_04, match: "SP Popout Image") then 197 else 235) }
		width: { fun_expand_size(if contains(card.general_options_04, match: "SP Popout Image") then 109 else 57) }
		height: { fun_expand_size(if is_pokemon() and contains(card.general_options_04, match: "SP Pokemon") then if contains(card.general_options_04, match: "SP Popout Image") then 86 else 47 else 0) }
		visible: { is_pokemon() and contains(card.general_options_04, match: "SP Pokemon") }
		mask: { if contains(card.general_options_04, match: "SP Popout Image") then "mask-dpp-p-sp.png" else "/pokemon-b-common.mse-include/mask-p-stage-evolution.png" }
		z index: -3
	######################## Team watermark is used for image for held item
	team watermark:
		left: { x_left(34) }
		top: { y_top(261) }
		width: { fun_expand_size(54) }
		height: { fun_expand_size(if is_pokemon() and contains(card.general_options_04, match: "Pokemon with Held Item") then 49 else 0) }
		visible: { is_pokemon() and contains(card.general_options_04, match: "Pokemon with Held Item") }
		mask: { "/pokemon-b-common.mse-include/mask-p-stage-evolution.png" }
		z index: -5
	######################## Overimage Under Border Frame -8
	######################## This layer is for items between the image and the border (aka might need covered up by the border)
	image overlay:
		left: { x_left(8) }
		top: { y_top(9) }
		width: { fun_expand_size(350) }
		height: { fun_expand_size(if (is_pokemon()) or (is_energy() or (is_trainer() and not(contains(card.art_options, match: "Full Art")))) then 495 else 0) }
		visible: { (is_pokemon()) or (is_energy() or (is_trainer() and not(contains(card.art_options, match: "Full Art")))) }
		z index: -8
		render style: image
		image: 
			script: if is_energy() then "frame-dpp-e.png" 
				else if is_trainer() and not(contains(card.art_options, match: "Full Art")) then "frame-dpp-t.png"
				else if is_pokemon() then "frame-dpp-p-"+stage()+".png"
				else "/pokemon-b-common.mse-include/blank.png"
	######################## Border Layer -6
	######################## This layer is for the border
	border:
		left: { x_left(0) }
		top: { y_top(0) }
		width: { fun_expand_size(368) }
		height: { fun_expand_size(513) }
		z index: -6
		render style: image
		image: { if stage()=="Level Up" then "border-dpp-lx.png" else "border-dpp.png" }
	
	######################## Overborder Frame -4
	######################## This layer is for items over the border
	border overlay:
		left: { x_left(8) }
		top: { y_top(9) }
		width: { fun_expand_size(350) }
		height: { fun_expand_size(if is_pokemon() or (is_trainer() and contains(card.art_options, match: "Full Art")) then 495 else 0) }
		visible: { is_pokemon() or (is_trainer() and contains(card.art_options, match: "Full Art")) }
		z index: -4
		render style: image
		image:
			script: if is_trainer() and contains(card.art_options, match: "Full Art")
					then if card.trainer=="User Defined" then recolor_image(input: "overlay-dpp-t-colored.png", red: card.energy_color_1, green: rgb(128,128,128), blue: rgb(128,128,128), white: rgb(255,255,255))
					else if card.trainer=="Stadium" or card.trainer=="Supporter" then ("overlay-dpp-t-"+card.trainer+".png")
					else "overlay-dpp-t-trainer.png"
				else if is_pokemon() then if not(stage()=="Level Up") and not(contains(card.general_options_04, match: "SP Pokemon")) and contains(card.general_options_04, match: "Pokemon with Held Item") then "bframe-dpp-p-held.png"
					else "bframe-dpp-p"+(if stage()=="Level Up" then "-lx" else "")+(if contains(card.general_options_04, match: "SP Pokemon") then "-sp" else "")+".png"
				else "/pokemon-b-common.mse-include/blank.png"
#########The Pokedex entry field underneath the window frame placed here so that it is underneath the popout layer
#########The text listing the pokemon statistics found below the image window
	pokedex text 1:
		left: { pokedex1_left() }
		top: { pokedex1_top() }
		width: { pokedex1_width() }
		height: { pokedex1_height() }
		z index: 6
		alignment: { pokedex1_align() }
		visible: { pokedex1_visible() }
		font
			name: { pokedex1_font() }
			weight: { pokedex1_weight() }
			style: { pokedex1_style() }
			size: { pokedex1_size() }
			color: { pokedex1_color() }
	pokedex text 2:
		left: { pokedex2_left() }
		top: { pokedex2_top() }
		width: { pokedex2_width() }
		height: { pokedex2_height() }
		z index: 6
		alignment: { pokedex2_align() }
		visible: { pokedex2_visible() }
		font
			name: { pokedex2_font() }
			weight: { pokedex2_weight() }
			style: { pokedex2_style() }
			size: { pokedex2_size() }
			color: { pokedex2_color() }
	######################## Popout layers 0
	######################## This layer is for the popout image
	card popout:
		left: { x_left(0) }
		top: { y_top(0) }
		width: { fun_expand_size(368) }
		height: { fun_expand_size(if contains(card.art_options, match: "Popout Art (for Advanced Users)") then 513 else 0) }
		z index: 0
		#mask:
		visible: { if contains(card.art_options, match: "Popout Art (for Advanced Users)") then "yes" else "no" }
	######################## Choice layers 2
	######################## This for choice tabs
	card type:
		left: { x_left(0) }
		top: { y_top(493) }
		width: { fun_expand_size(184) }
		height: { fun_expand_size(20) }
		z index: 2
		render style: image
		popup style: in place
		image: /pokemon-b-common.mse-include/blank.png
	art options:
		left: { x_left(185) }
		top: { y_top(493) }
		width: { fun_expand_size(184) }
		height: { fun_expand_size(20) }
		z index: 2
		render style: image
		popup style: in place
		image: /pokemon-b-common.mse-include/blank.png
	text options 2:
		left: { x_left(185) }
		top: { y_top(0) }
		width: { fun_expand_size(184) }
		height: { fun_expand_size(20) }
		z index: 2
		render style: image
		popup style: in place
		image: /pokemon-b-common.mse-include/blank.png
	general options 04:
		left: { x_left(0) }
		top: { y_top(0) }
		width: { fun_expand_size(184) }
		height: { fun_expand_size(20) }
		z index: 2
		render style: image
		popup style: in place
		image: /pokemon-b-common.mse-include/blank.png
	stage levelup:
		left: { x_left(0) }
		top: { y_top(20) }
		width: { fun_expand_size(70) }
		height: { if is_pokemon() then fun_expand_size(70) else 0 }
		z index: 2
		render style: image
		popup style: in place
		visible: { if is_pokemon() then "yes" else "no" }
		image: /pokemon-b-common.mse-include/blank.png
	trainer:
		left: { x_left(0) }
		top: { y_top(20) }
		width: { fun_expand_size(70) }
		height: { fun_expand_size(if is_trainer() then 70 else 0) }
		z index: 2
		render style: image
		popup style: in place
		visible: { if is_trainer() then "yes" else "no" }
		image: /pokemon-b-common.mse-include/blank.png
	energy type:
		left: { x_left(0) }
		top: { y_top(20) }
		width: { fun_expand_size(70) }
		height: { fun_expand_size(if is_energy() then 70 else 0) }
		z index: 2
		render style: image
		popup style: in place
		visible: { if is_energy() then "yes" else "no" }
		image: /pokemon-b-common.mse-include/blank.png
	card color 1:
		left: { x_left(if card.card_type=="Dual-Type" then energy_left()-energy_left_difference() else energy_left()) }
		top: { y_top(0) }
		width: { fun_expand_size(energy_width()) }
		height: { fun_expand_size(if is_pokemon() or (is_energy() and card.energy_type=="Basic") then energy_top()+energy_width() else 0) }
		visible: { if is_pokemon() or is_energy() then "yes" else "no" }
		z index: 3
		render style: image
		popup style: in place
		image: /pokemon-b-common.mse-include/blank.png
	card color 2:
		left: { x_left(energy_left()+energy_right_difference()) }
		top: { y_top(0) }
		width: { fun_expand_size(energy_width()) }
		height: { fun_expand_size(if card.card_type=="Dual-Type" then energy_top()+energy_width() else 0) }
		visible: { if card.card_type=="Dual-Type" then "yes" else "no" }
		z index: 3
		render style: image
		popup style: in place
		image: /pokemon-b-common.mse-include/blank.png
	texture type 1:
		left: { x_left(0) }
		top: { y_top(413) }
		width: { fun_expand_size(20) }
		height: { fun_expand_size(if is_pokemon() and not(background_type_1()=="User Defined") then 80 else 0) }
		z index: 2
		render style: image
		popup style: in place
		visible: { if is_pokemon() and not(background_type_1()=="User Defined") then "yes" else "no" }
		image: /pokemon-b-common.mse-include/blank.png
	texture type 2:
		left: { x_left(348) }
		top: { y_top(413) }
		width: { fun_expand_size(20) }
		height: { fun_expand_size(if card.card_type=="Dual-Type" and not(background_type_2()=="User Defined") then 80 else 0) }
		z index: 2
		render style: image
		popup style: in place
		visible: { if card.card_type=="Dual-Type" and not(background_type_2()=="User Defined") then "yes" else "no" }
		image: /pokemon-b-common.mse-include/blank.png
	color texture 1:
		left: { x_left(0) }
		top: { y_top(413) }
		width: { fun_expand_size(20) }
		height: { fun_expand_size(if is_pokemon() and background_type_1()=="User Defined" then 80 else 0) }
		z index: 2
		render style: image
		popup style: in place
		visible: { if is_pokemon() and background_type_1()=="User Defined" then "yes" else "no" }
		image: /pokemon-b-common.mse-include/blank.png
	color texture 2:
		left: { x_left(348) }
		top: { y_top(413) }
		width: { fun_expand_size(20) }
		height: { fun_expand_size(if card.card_type=="Dual-Type" and background_type_2()=="User Defined" then 80 else 0) }
		z index: 2
		render style: image
		popup style: in place
		visible: { if card.card_type=="Dual-Type" and background_type_2()=="User Defined" then "yes" else "no" }
		image: /pokemon-b-common.mse-include/blank.png
	basic texture:
		left: { x_left(0) }
		top: { y_top(413) }
		width: { fun_expand_size(20) }
		height: { fun_expand_size(if is_energy() and card.energy_type=="Basic" then 80 else 0) }
		z index: 2
		render style: image
		popup style: in place
		visible: { if is_energy() and card.energy_type=="Basic" then "yes" else "no" }
		image: /pokemon-b-common.mse-include/blank.png
	metal texture:
		left: { x_left(348) }
		top: { y_top(413) }
		width: { fun_expand_size(20) }
		height: { fun_expand_size(if is_energy() and card.energy_type=="Basic" and card.card_color_1=="Metal" then 80 else 0) }
		z index: 2
		render style: image
		popup style: in place
		visible: { if is_energy() and card.energy_type=="Basic" and card.card_color_1=="Metal" then "yes" else "no" }
		image: /pokemon-b-common.mse-include/blank.png
	basic user image type:
		left: { x_left(348) }
		top: { y_top(413) }
		width: { fun_expand_size(20) }
		height: { fun_expand_size(if is_energy() and card.energy_type=="Basic" and contains(basic_energy_suffix(), match: "User Image") then 80 else 0) }
		z index: 2
		render style: image
		popup style: in place
		visible: { if is_energy() and card.energy_type=="Basic" and contains(basic_energy_suffix(), match: "User Image") then "yes" else "no" }
	dual blend type:
		left: { x_left(0) }
		top: { y_top(90) }
		width: { fun_expand_size(20) }
		height: { fun_expand_size(if card.card_type=="Dual-Type" then 80 else 0) }
		z index: 2
		render style: image
		popup style: in place
		visible: { if card.card_type=="Dual-Type" then "yes" else "no" }
		image: /pokemon-b-common.mse-include/blank.png
	######################## Overborder Frame 4
	######################## This layer is for items needed just before the user input text.

	######################## Also has materials found in the extra card fields
#########These two fields show the pokemon energy symbol.  It was converted to a symbol font to allow easy modification in the future to alternate symbols
	color text 1:
		left: { x_left(if card.card_type=="Dual-Type" then energy_left()-energy_left_difference() else energy_left()) }
		top: { y_top(energy_top()) }
		width: { fun_expand_size(energy_width()) }
		height: { fun_expand_size(if (is_pokemon() or (is_energy() and card.energy_type=="Basic")) and not(card.card_color_1=="User Defined") then energy_width() else 0) }
		visible: { if (is_pokemon() or (is_energy() and card.energy_type=="Basic")) and not(card.card_color_1=="User Defined") then "yes" else "no" }
		z index: 5
		always symbol: true
		symbol font:
			name: pokemon-a-color
			size: { fun_expand_font(energy_width()) }
	color text 1 dup:
		left: { x_left(basic_energy_left()) }
		top: { y_top(basic_energy_top()) }
		width: { fun_expand_size(basic_energy_width()) }
		height: { fun_expand_size(if is_energy() and card.energy_type=="Basic" and not(card.card_color_1=="User Defined") then basic_energy_width() else 0) }
		visible: { is_energy() and card.energy_type=="Basic" and not(card.card_color_1=="User Defined") }
		z index: 5
		always symbol: true
		symbol font:
			name: pokemon-a-lg-color
			size: { fun_expand_font(basic_energy_width()) }
	color text 2:
		left: { x_left(energy_left()+energy_right_difference()) }
		top: { y_top(energy_top()) }
		width: { fun_expand_size(energy_width()) }
		height: { fun_expand_size(if card.card_type=="Dual-Type" and not(card.card_color_2=="User Defined") then energy_width() else 0) }
		z index: 3
		visible: { if (card.card_type=="Dual-Type" and not(card.card_color_2=="User Defined")) then "yes" else "no" }
		always symbol: true
		symbol font:
			name: pokemon-a-color
			size: { fun_expand_font(energy_width()) }
#########These two fields allow a user input energy orb image
	energy orb pic 1:
		left: { x_left(if card.card_type=="Dual-Type" then energy_left()-energy_left_difference() else energy_left()) }
		top: { y_top(energy_top()) }
		width: { fun_expand_size(energy_width()) }
		height: { fun_expand_size(if ((is_pokemon() or (is_energy() and card.energy_type=="Basic")) and card.card_color_1=="User Defined") then energy_width() else 0) }
		visible: { if ((is_pokemon() or (is_energy() and card.energy_type=="Basic")) and card.card_color_1=="User Defined") then "yes" else "no" }
		z index: 6
	energy orb pic 2:
		left: { x_left(energy_left()+energy_right_difference()) }
		top: { y_top(energy_top()) }
		width: { fun_expand_size(energy_width()) }
		height: { fun_expand_size(if card.card_type=="Dual-Type" and card.card_color_2=="User Defined" then energy_width() else 0) }
		z index: 4
		visible: { if card.card_type=="Dual-Type" and card.card_color_2=="User Defined" then "yes" else "no" }
#########Evolution Pokemon text found above the evolution image
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	title text 2:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_txt_2_height() }
		z index: 6
		visible: { title_txt_2_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: { card_name_color() }
#########Set Symbol
	set:
		left: { x_left(if is_pokemon() then 331 else if is_trainer() then 330 else 328) }
		top: { y_top(if is_pokemon() then 477 else if is_energy() then 474 else 476) }
		width: { fun_expand_size(20) }
		height: { fun_expand_size(20) }
		z index: 4
		visible: { contains(set.visibility_options, match: "Visible Set Symbol") and not(contains(set.visibility_options, match: "User image for set symbol")) }
		render style: image
		choice images:
			common: script: symbol_variation(symbol: set.symbol, border_radius: if set.include_border_on_set_symbol=="yes" then 0.1 else 0, fill_color: set.set_symbol_fill_color, border_color: set.set_symbol_border_color)
	set symbol:
		left: { x_left(if is_pokemon() then 331 else if is_trainer() then 330 else 328) }
		top: { y_top(if is_pokemon() then 477 else if is_energy() then 474 else 476) }
		width: { fun_expand_size(20) }
		height: { fun_expand_size(20) }
		z index: 4
		visible: { contains(set.visibility_options, match: "Visible Set Symbol") and contains(set.visibility_options, match: "User image for set symbol") }
		render style: image
		image: { set.symbol_image }
	######################## First Text Frame 6
	######################## This layer is for input text

	######################## Also has materials found in the extra card fields
#########card number
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	card number:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { if contains(set.visibility_options, match: "Visible Card Numbers on all cards") then card_no_height() else 0 }
		z index: 6
		alignment: { card_no_align() }
		visible: { if contains(set.visibility_options, match: "Visible Card Numbers on all cards") then "yes" else "no" }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: { card_no_color() }
#########Illustrator name
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	illustrator:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { if contains(card.text_options_2, match: "Use Primary Set Artist") then 0 else ill_height() }
		z index: 6
		alignment: { ill_align() }
		visible: { if contains(card.text_options_2, match: "Use Primary Set Artist") then "no" else "yes" }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: { ill_color() }
#########Copyright
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	copyright:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { if contains(set.visibility_options, match: "Visible Copyright on all cards") and not(contains(card.text_options_2, match: "Use Set Copyright")) then copy_height() else 0 }
		z index: 6
		alignment: { copy_align() }
		visible: { if contains(set.visibility_options, match: "Visible Copyright on all cards") and not(contains(card.text_options_2, match: "Use Set Copyright")) then "yes" else "no" }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: { copy_color() }
#########Rarity Symbol
	rarity:
		left: { x_left((if is_pokemon() then 324 else 319)-(if is_outline() then 1 else 0)) }
		top: { y_top((if is_pokemon() or is_trainer() then 488 else 483)-(if is_outline() then 1 else 0)) }
		height: { fun_expand_size(7+(if is_outline() then 2 else 0)) }
		width: { fun_expand_size(7+(if is_outline() then 2 else 0)) }
		z index: 6
		render style: image
		visible: { if contains(set.visibility_options, match: "Visible Rarity symbol on all cards") then "yes" else "no" }
		choice images:
			common:		{ if is_outline() then "/pokemon-b-common.mse-include/rarity-out-common.png" else if rarity_color() then "/pokemon-b-common.mse-include/rarity-wt-common.png" else "/pokemon-b-common.mse-include/rarity-bk-common.png" }
			uncommon:	{ if is_outline() then "/pokemon-b-common.mse-include/rarity-out-uncommon.png" else if rarity_color() then "/pokemon-b-common.mse-include/rarity-wt-uncommon.png" else "/pokemon-b-common.mse-include/rarity-bk-uncommon.png" }
			rare:		{ if is_outline() then "/pokemon-b-common.mse-include/rarity-out-rare.png" else if rarity_color() then "/pokemon-b-common.mse-include/rarity-wt-rare.png" else "/pokemon-b-common.mse-include/rarity-bk-rare.png" }
			extra rare:	{ if is_outline() then "/pokemon-b-common.mse-include/rarity-out-erare.png" else if rarity_color() then "/pokemon-b-common.mse-include/rarity-wt-erare.png" else "/pokemon-b-common.mse-include/rarity-bk-erare.png" }
#########Text overlay that says "weakness"
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	weakoverlay:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 6
		visible: { wrr_ov_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: { weak_color() }
#########Text overlay that says "resistance"
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	resoverlay:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 6
		visible: { wrr_ov_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: { resist_color() }
#########Text overlay that says "retreat cost"
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	retoverlay:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 6
		visible: { wrr_ov_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: { ret_ov_color() }
#########Card Title
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	card name:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_visible() }
		z index: 6
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: { card_name_color() }
#########HP Text
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	hp:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 6
		alignment: { hp_align() }
		visible: { hp_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: { hp_color() }
#########The Weakness for pokemon and doubles as the top energy top marker for energy
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	weakness:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 6
		always symbol: true
		visible: { weak_visible() }
		alignment: { weak_align() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: { weak_color() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
#########The resistance for pokemon
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	resistance:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 6
		always symbol: true
		visible: { resist_visible() }
		alignment: { resist_align() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: { resist_color() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
#########The retreat cost fot pokemon uses a poke-a-energy symbol font only,
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	retreat cost:
		left: { retreat_left() }
		top: { retreat_top() }
		width: { retreat_width() }
		height: { retreat_height() }
		z index: 6
		visible: { retreat_visible() }
		symbol font:
			name: { retreat_symbol_font() }
			size: { retreat_symbol_size() }
		always symbol: true
		alignment: { retreat_align() }
#########Flavor Text
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	flavor text:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 6
		visible: { flavor_visible() }
		alignment: { flavor_align() }
		font:
			name: { flavor_font() }
			weight: { flavor_weight() }
			style: { flavor_style() }
			size: { flavor_size() }
			scale down to: 6
			color: { if is_two_tone() then rgba(0,0,0,0) else if is_wt_text() then rgb(255,255,255) else rgb(0,0,0) }
		line height soft: { flavor_lh_soft() }
#########The pokemon this one evolves from
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	evolution reminder 1:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_rem_height() }
		alignment: { evolution_align() }
		z index: 6
		visible: { evolution_rem_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: { evolution_color() }
######### User input, the actual pokemon it is evolved from
	evolution entry:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 6
		visible: { evo_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: { evolution_color() }
#########Image showing the evolution line of the evolved pokemon
	evolution pic:
		left: { x_left(if is_energy() and card.energy_type=="Basic" and card.card_color_1=="User Defined" then basic_energy_left() else 26) }
		top: { y_top(if is_energy() and card.energy_type=="Basic" and card.card_color_1=="User Defined" then basic_energy_top() else 48) }
		width: { fun_expand_size(if is_energy() and card.energy_type=="Basic" and card.card_color_1=="User Defined" then basic_energy_width() else 42) }
		height: { fun_expand_size(if is_energy() and card.energy_type=="Basic" and card.card_color_1=="User Defined" then basic_energy_width() else if is_pokemon() then if stage()=="Basic" or stage()=="Level Up" then 0 else 41 else 0) }
		z index: 6
		mask: { if is_energy() and card.energy_type=="Basic" and card.card_color_1=="User Defined" then "/pokemon-b-common.mse-include/mask-e-large.png" else "/pokemon-b-common.mse-include/mask-p-stage-evolution.png" }
		visible: { if (is_pokemon() and not(stage()=="Basic") and not(stage()=="Level Up")) or (is_energy() and card.energy_type=="Basic" and card.card_color_1=="User Defined") then "yes" else "no" }
#########Text on the stage bar & basic Pokemon for Classic/Neo
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	title reminder 1 4:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_rem_1_height() }
		z index: 6
		visible: { title_rem_1_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: { title_1_color() }
	title text 1:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_txt_1_height() }
		z index: 6
		visible: { title_txt_1_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: { title_1_color() }
#########This text explains the the rules of the trainers and the larger red text for baby pokemon
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	special rule reminder 1 4:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_rem_height() }
		z index: 6
		visible: { special_rule_rem_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			style: { special_rule_style() }
			scale down to: 6
			size: { special_rule_size() }
			color: { special_rule_color() }
	special rule text 1:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_txt_height() }
		z index: 6
		visible: { special_rule_txt_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			scale down to: 6
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: { special_rule_color() }
#########This text explains that baby pokemon are also basic pokemon
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	ability text 1:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_txt_1_height() }
		alignment: { ability_1_align() }
		z index: 6
		visible: { ability_txt_1_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: { ability_1_color() }
	ability rule text 1:
		left: { ability_rule_left() }
		top: { ability_rule_top() }
		width: { ability_rule_width() }
		height: { ability_rule_height() }
		z index: 6
		visible: { ability_txt_1_visible() }
		alignment: { ability_rule_align() }
		line height hard: { ability_rule_lh_hard() }
		line height soft: { ability_rule_lh_soft() }
		mask: { ability_rule_mask() }
		symbol font:
			name: { ability_rule_symbol_font() }
			size: { ability_rule_symbol_size() }
			alignment: middle center
		font:
			name: { ability_rule_font() }
			size: { ability_rule_size() }
			weight: { ability_rule_weight() }
			style: { ability_rule_style() }
			scale down to: 6
			color: { rgb(0,0,0) }
	ability text 2:
		left: { ability_2_left() }
		top: { ability_2_top() }
		width: { ability_2_width() }
		height: { ability_2_height() }
		alignment: { ability_2_align() }
		z index: 6
		visible: { ability_2_visible() }
		font:
			name: { ability_2_font() }
			weight: { ability_2_weight() }
			style: { ability_2_style() }
			size: { ability_2_size() }
			color: { ability_2_color() }
######################## Rule Text everything that follows within this layer is Attack/Rule Text on the cards.
#########Rules text used by energy and trainers, kept separate from pokemon because of the scale down issue
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	rule np 1:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 6
		visible: { rule_np_1_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: { rgb(0,0,0) }
#########The next field lists the cost of the first attack
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	cost classic 1:
		left: { cost_1_left() }
		top: { cost_1_top() }
		width: { cost_1_width() }
		height: { cost_1_height() }
		z index: 6
		visible: { cost_1_visible() }
		alignment: { cost_align() }
		always symbol: true
		symbol font:
			name: { cost_symbol_font() }
			size: { cost_symbol_size() }
#########This shows title of the 1st poke-power or body
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	attack 1:
		left: { attack_1_left() }
		top: { attack_1_top() }
		width: { attack_1_width() }
		height: { attack_1_height() }
		z index: 6
		visible: { attack_1_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: { attack_color() }
#########This shows the 1st attacks damage
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	damage 1:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 6
		visible: { damage_1_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: { if is_two_tone() then rgba(0,0,0,0) else if is_wt_text() then rgb(255,255,255) else rgb(0,0,0) }
#########This field is the title and rules text
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	rule text 1:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_1_height() }
		z index: 6
		visible: { rule_1_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: { if is_two_tone() then rgba(0,0,0,0) else if is_wt_text() then rgb(255,255,255) else rgb(0,0,0) }
#########The next fields lists the cost of the second attack
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	cost classic 2:
		left: { cost_2_left() }
		top: { cost_2_top() }
		width: { cost_2_width() }
		height: { cost_2_height() }
		z index: 6
		visible: { cost_2_visible() }
		alignment: { cost_align() }
		always symbol: true
		symbol font:
			name: { cost_symbol_font() }
			size: { cost_symbol_size() }
#########This shows title of the 2nd poke-power or body
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	attack 2:
		left: { attack_2_left() }
		top: { attack_2_top() }
		width: { attack_2_width() }
		height: { attack_2_height() }
		z index: 6
		visible: { attack_2_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: { attack_color() }
#########This shows the 2nd attacks damage
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	damage 2:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 6
		visible: { damage_2_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: { if is_two_tone() then rgba(0,0,0,0) else if is_wt_text() then rgb(255,255,255) else rgb(0,0,0) }
#########This field is the title and rules text
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	rule text 2:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 6
		visible: { rule_2_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: { if is_two_tone() then rgba(0,0,0,0) else if is_wt_text() then rgb(255,255,255) else rgb(0,0,0) }
#########The next field lists the cost of the third attack
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	cost classic 3:
		left: { cost_3_left() }
		top: { cost_3_top() }
		width: { cost_3_width() }
		height: { cost_3_height() }
		z index: 6
		visible: { cost_3_visible() }
		alignment: { cost_align() }
		always symbol: true
		symbol font:
			name: { cost_symbol_font() }
			size: { cost_symbol_size() }
#########This shows title of the 3rd poke-power or body
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	attack 3:
		left: { attack_3_left() }
		top: { attack_3_top() }
		width: { attack_3_width() }
		height: { attack_3_height() }
		z index: 6
		visible: { attack_3_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: { attack_color() }
#########This shows the 3rd attacks damage
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	damage 3:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 6
		visible: { damage_3_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: { if is_two_tone() then rgba(0,0,0,0) else if is_wt_text() then rgb(255,255,255) else rgb(0,0,0) }
#########This field is the title and rules text
######### Do not change any values found in field specific function/variables these are used to keep the duplicate text fields the same, the duplicate fields are found in the extra card fields
	rule text 3:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 6
		visible: { rule_3_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: { if is_two_tone() then rgba(0,0,0,0) else if is_wt_text() then rgb(255,255,255) else rgb(0,0,0) }

	######################## Choice layers 8
	######################## This layer displays the informational text for the use of this tool template
#########This is the image field to show the notification for the tournament placement
	place:
		left: { x_left(if is_pokemon() then 48 else if is_trainer() then 42 else 22) }
		top: { y_top(if is_pokemon() then 241 else if is_trainer() then 240 else 337) }
		width: { fun_expand_size(94) }
		height: { fun_expand_size(if contains(card.art_options, match: "Add Tournament Place Icons") then 14 else 0) }
		visible: { if contains(card.art_options, match: "Add Tournament Place Icons") then "yes" else "no" }
		z index: 8
		render style: image
		popup style: in place
		choice images:
			1st:	/pokemon-b-common.mse-include/place-1.png
			2nd:	/pokemon-b-common.mse-include/place-2.png
			3rd:	/pokemon-b-common.mse-include/place-3.png
			4th:	/pokemon-b-common.mse-include/place-4.png
			5th:	/pokemon-b-common.mse-include/place-5.png
			6th:	/pokemon-b-common.mse-include/place-6.png
			7th:	/pokemon-b-common.mse-include/place-7.png
			8th:	/pokemon-b-common.mse-include/place-8.png
############################################################## Extra Card Fields
############################# Non-User Input Choice Fields for Images
extra card field:
	type: choice
	name: watermark overlay
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	choice: watermark overlay
extra card field:
	type: choice
	name: handheld
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	choice: handheld
extra card field:
	type: choice
	name: arceus tail
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	choice: arceus tail
extra card field:
	type: choice
	name: arceus front
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	choice: arceus front
extra card field:
	type: choice
	name: arceus top
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	choice: arceus top
extra card field:
	type: choice
	name: arceus bottom
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	choice: arceus bottom
extra card field:
	type: choice
	name: bar
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	choice: bar
extra card field:
	type: text
	name: level text
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	default: level_rem()
extra card field:
	type: choice
	name: level x
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	choice: level x
extra card style:
	######################## Background Layer -2
	watermark overlay:
		left: { x_left(if is_energy() then 216 else 8) }
		top: { y_top(if is_energy() then 8 else 9) }
		width: { fun_expand_size(if is_energy() then 135 else 190) }
		height: { fun_expand_size(if (is_trainer() and not(card.trainer=="User Defined" and not(contains(card.general_options_04, match: "Stadium and Supporters are a Subclass of Trainers")))) then 40 else if is_energy() then 41 else 0) }
		visible: { is_energy() or (is_trainer() and not(card.trainer=="User Defined" and not(contains(card.general_options_04, match: "Stadium and Supporters are a Subclass of Trainers")))) }
		z index: 8
		render style: image
		image:
			script: if is_energy() then "overlay-ex-e.png" 
				else if is_trainer() then if (card.trainer=="Supporter" or card.trainer=="Stadium") and not(contains(card.general_options_04, match: "Stadium and Supporters are a Subclass of Trainers")) then ("logo-dpp-t-"+card.trainer+".png")
					else if contains(card.general_options_04, match: "Stadium and Supporters are a Subclass of Trainers") or (card.trainer=="Item" or card.trainer=="Tool") then "logo-dpp-t-trainer.png"
					else "/pokemon-b-common.mse-include/blank.png"
				else "/pokemon-b-common.mse-include/blank.png"
	######################### Image for Handheld Items
	handheld:
		left: { x_left(8) }
		top: { y_top(9) }
		width: { fun_expand_size(350) }
		height: { fun_expand_size(if is_pokemon() and contains(card.general_options_04, match: "Pokemon with Held Item") then 495 else 0) }
		visible: { is_pokemon() and contains(card.general_options_04, match: "Pokemon with Held Item") }
		z index: -6
		render style: image
		image:
			script: "overlay-dpp-handheld.png"
	########################## "LV." in the Pokemon cards
	level text:
		left: { x_left(32+card_name_title_width()) }
		top: { y_top(19.5) }
		width: { fun_expand_size(50) }
		height: { fun_expand_size(if is_pokemon() then 24 else 0) }
		z index: 6
		alignment: { "bottom left" }
		visible: { title_lv_2_visible() }
		font
			name: { "Humanist521BDCdn" }
			weight: { "bold" }
			style: { "normal" }
			size: { fun_expand_font(8) }
			color: { card_name_color() }
	#### X Icon for Lv. X Level-Up Stage
	level x:
		left: { title_2_left() }
		top: { title_2_top()+fun_expand_size(1) }
		width: { fun_expand_size(23) }
		height: { fun_expand_size(if is_pokemon() and stage()=="Level Up" then 20 else 0) }
		visible: { is_pokemon() and stage()=="Level Up" }
		z index: 6
		render style: image
		image: { if is_outline() then "icon-lvx-outline.png" else "icon-lvx.png" }
	#### The expanding Arceus Bar
	arceus tail:
		left: { x_left(319) }
		top: { y_top(270) }
		width: { fun_expand_size(39) }
		height: { fun_expand_size(if is_pokemon() and contains(card.general_options_04, match: "Pokemon Special Ability Bar") then 28 else 0) }
		visible: { is_pokemon() and contains(card.general_options_04, match: "Pokemon Special Ability Bar") }
		z index: 5
		render style: image
		image: { "bar-arceus-tail.png" }
	arceus front:
		left: { x_left(274-(if fun_decompress(card_style.ability_text_2.content_width)<=37 then 0 else if fun_decompress(card_style.ability_text_2.content_width)>=294 then 257 else fun_decompress(card_style.ability_text_2.content_width)-37)) }
		top: { y_top(270) }
		width: { fun_expand_size(37) }
		height: { fun_expand_size(if is_pokemon() and contains(card.general_options_04, match: "Pokemon Special Ability Bar") then 28 else 0) }
		visible: { is_pokemon() and contains(card.general_options_04, match: "Pokemon Special Ability Bar") }
		z index: -13
		render style: image
		image: { "bar-arceus-front.png" }
	arceus top:
		left: { x_left(311-(if fun_decompress(card_style.ability_text_2.content_width)<=37 then 0 else if fun_decompress(card_style.ability_text_2.content_width)>=294 then 257 else fun_decompress(card_style.ability_text_2.content_width)-37)) }
		top: { y_top(270) }
		width: { fun_expand_size(8+(if fun_decompress(card_style.ability_text_2.content_width)<=37 then 0 else if fun_decompress(card_style.ability_text_2.content_width)>=294 then 257 else fun_decompress(card_style.ability_text_2.content_width)-37)) }
		height: { fun_expand_size(if is_pokemon() and contains(card.general_options_04, match: "Pokemon Special Ability Bar") then 4 else 0) }
		visible: { is_pokemon() and contains(card.general_options_04, match: "Pokemon Special Ability Bar") }
		z index: -13
		render style: image
		image: { "bar-arceus-top.png" }
	arceus bottom:
		left: { x_left(311-(if fun_decompress(card_style.ability_text_2.content_width)<=37 then 0 else if fun_decompress(card_style.ability_text_2.content_width)>=294 then 257 else fun_decompress(card_style.ability_text_2.content_width)-37)) }
		top: { y_top(295) }
		width: { fun_expand_size(8+(if fun_decompress(card_style.ability_text_2.content_width)<=37 then 0 else if fun_decompress(card_style.ability_text_2.content_width)>=294 then 257 else fun_decompress(card_style.ability_text_2.content_width)-37)) }
		height: { fun_expand_size(if is_pokemon() and contains(card.general_options_04, match: "Pokemon Special Ability Bar") then 3 else 0) }
		visible: { is_pokemon() and contains(card.general_options_04, match: "Pokemon Special Ability Bar") }
		z index: -13
		render style: image
		image: { "bar-arceus-bottom.png" }
#########These bars used for various things
	bar:
		left: { x_left(26-(if is_outline() then 1 else 0)) }
		top: { y_top(382-(if is_outline() then 1 else 0)) }
		width: { fun_expand_size(314+(if is_outline() then 2 else 0)) }
		height: { fun_expand_size(if is_energy() and card.energy_type=="Special" then 4+(if is_outline() then 2 else 0) else 0) }
		visible: { is_energy() and card.energy_type=="Special" }
		z index: 6
		render style: image
		image: { if is_outline() then "/pokemon-b-common.mse-include/bar-outline.png" else if is_wt_text() then "/pokemon-b-common.mse-include/bar-wt.png" else "/pokemon-b-common.mse-include/bar-bk.png" }
############################# Duplicate text files found behind the Text Popout Image for two-tone text
extra card field:
	type: text
	name: illustrator dup
	show statistics: false
	default: set.artist
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright dup
	show statistics: false
	default: set.copyright
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number 2t dup
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright 2t dup
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay 2t dup
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay 2t dup
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay 2t dup
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness 2t dup
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance 2t dup
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: flavor text 2t dup
	show statistics: false
	default: card.flavor_text
	card list allow: false
	multi line: true
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 2t dup
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry 2t dup
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 1 2t dup
	show statistics: false
	default: card.pokedex_text_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: rule np 1 2t dup
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: damage 1 2t dup
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: rule text 1 2t dup
	show statistics: false
	default: card.rule_text_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: damage 2 2t dup
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: rule text 2 2t dup
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: damage 3 2t dup
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: rule text 3 2t dup
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: attack 1 2t dup
	show statistics: false
	default: card.attack_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 2 2t dup
	show statistics: false
	default: card.attack_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 3 2t dup
	show statistics: false
	default: card.attack_3
	card list allow: false
	save value: false
	editable: false
extra card style:
#########Duplicate for when non-card input
	illustrator dup:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 6
		alignment: { ill_align() }
		visible: { if contains(card.text_options_2, match: "Use Primary Set Artist") then "yes" else "no" }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: { if is_two_tone() then rgba(0,0,0,0) else if is_wt_text() then rgb(255,255,255) else rgb(0,0,0) }
#########Duplicate for when non-card input
	copyright dup:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { if contains(set.visibility_options, match: "Visible Copyright on all cards") and contains(card.text_options_2, match: "Use Set Copyright") then copy_height() else 0 }
		z index: 6
		alignment: { copy_align() }
		visible: { if contains(set.visibility_options, match: "Visible Copyright on all cards") and contains(card.text_options_2, match: "Use Set Copyright") then "yes" else "no" }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: { copy_color() }
	card number 2t dup:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: -16
		alignment: { card_no_align() }
		visible: { if contains(set.visibility_options, match: "Visible Card Numbers on all cards") then "yes" else "no" }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(0,0,0)
	copyright 2t dup:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: -16
		alignment: { copy_align() }
		visible: { if contains(set.visibility_options, match: "Visible Copyright on all cards") then "yes" else "no" }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(0,0,0)
	weakoverlay 2t dup:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: -16
		visible: { is_two_tone() and wrr_ov_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(0,0,0)
	resoverlay 2t dup:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: -16
		visible: { is_two_tone() and wrr_ov_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(0,0,0)
	retoverlay 2t dup:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: -16
		visible: { is_two_tone() and wrr_ov_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(0,0,0)
	weakness 2t dup:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: -16
		always symbol: true
		visible: { is_two_tone() and weak_visible() }
		alignment: { weak_align() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(0,0,0)
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
	resistance 2t dup:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: -16
		always symbol: true
		visible: { is_two_tone() and resist_visible() }
		alignment: { resist_align() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(0,0,0)
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
	flavor text 2t dup:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: -16
		visible: { is_two_tone() and flavor_visible() }
		alignment: { flavor_align() }
		font:
			name: { flavor_font() }
			weight: { flavor_weight() }
			style: { flavor_style() }
			scale down to: 6
			size: { flavor_size() }
			color: { rgb(0,0,0) }
		line height soft: { flavor_lh_soft() }
	evolution 1 2t dup:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: -16
		visible: { evolution_two_tone_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: { rgb(0,0,0) }
	evolution entry 2t dup:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: -16
		visible: { is_two_tone() and evo_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: { rgb(0,0,0) }
	pokedex text 1 2t dup:
		left: { pokedex1_left() }
		top: { pokedex1_top() }
		width: { pokedex1_width() }
		height: { pokedex1_height() }
		z index: -16
		alignment: { pokedex1_align() }
		visible: { pokedex1_two_tone_visible() }
		font
			name: { pokedex1_font() }
			weight: { pokedex1_weight() }
			style: { pokedex1_style() }
			size: { pokedex1_size() }
			color: rgb(0,0,0)
	rule np 1 2t dup:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: -16
		visible: { is_two_tone() and rule_np_1_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { two_tone_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: { rgb(0,0,0) }
	damage 1 2t dup:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: -16
		visible: { is_two_tone() and damage_1_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: { rgb(0,0,0) }
	rule text 1 2t dup:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_1_height() }
		z index: -16
		visible: { is_two_tone() and rule_1_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { two_tone_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: { rgb(0,0,0) }
	damage 2 2t dup:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: -16
		visible: { is_two_tone() and damage_2_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: { rgb(0,0,0) }
	rule text 2 2t dup:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: -16
		visible: { is_two_tone() and rule_2_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { two_tone_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: { rgb(0,0,0) }
	damage 3 2t dup:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: -16
		visible: { is_two_tone() and damage_3_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: { rgb(0,0,0) }
	rule text 3 2t dup:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: -16
		visible: { is_two_tone() and rule_3_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { two_tone_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: { rgb(0,0,0) }
	attack 1 2t dup:
		left: { attack_1_left() }
		top: { attack_1_top() }
		width: { attack_1_width() }
		height: { attack_1_height() }
		z index: -16
		visible: { is_two_tone() and attack_1_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: { rgb(0,0,0) }
	attack 2 2t dup:
		left: { attack_2_left() }
		top: { attack_2_top() }
		width: { attack_2_width() }
		height: { attack_2_height() }
		z index: -16
		visible: { is_two_tone() and attack_2_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: { rgb(0,0,0) }
	attack 3 2t dup:
		left: { attack_3_left() }
		top: { attack_3_top() }
		width: { attack_3_width() }
		height: { attack_3_height() }
		z index: -16
		visible: { is_two_tone() and attack_3_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: { rgb(0,0,0) }
############################# Duplicate text fields for all outline text (regardless of file size, values for medium and small need to be changed to 2, from x: 2/x: -2/y: 2/y: -2 to x: 2/x: -2/y: 2/y: -2)
extra card field:
	type: text
	name: card number blur 01
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number blur 02
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number blur 03
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number blur 04
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator blur 01
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator blur 02
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator blur 03
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator blur 04
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright blur 01
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright blur 02
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright blur 03
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright blur 04
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay blur 01
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay blur 02
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay blur 03
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay blur 04
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay blur 01
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay blur 02
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay blur 03
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay blur 04
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay blur 01
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay blur 02
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay blur 03
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay blur 04
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name blur 01
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name blur 02
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name blur 03
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name blur 04
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp blur 01
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp blur 02
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp blur 03
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp blur 04
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness blur 01
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness blur 02
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness blur 03
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness blur 04
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance blur 01
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance blur 02
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance blur 03
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance blur 04
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: stuff blur 01
	show statistics: false
	default: reverse(set_filter("Extra Special Monster"))
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: flavor text blur 01
	show statistics: false
	default: card.flavor_text
	multi line: true
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: flavor text blur 02
	show statistics: false
	default: card.flavor_text
	card list allow: false
	multi line: true
	save value: false
	editable: false
extra card field:
	type: text
	name: flavor text blur 03
	show statistics: false
	multi line: true
	default: card.flavor_text
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: flavor text blur 04
	show statistics: false
	default: card.flavor_text
	multi line: true
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 blur 01
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 blur 02
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 blur 03
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 blur 04
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry blur 01
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry blur 02
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry blur 03
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry blur 04
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 blur 01
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 blur 02
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 blur 03
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 blur 04
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 blur 01
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 blur 02
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 blur 03
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 blur 04
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 1 blur 01
	show statistics: false
	default: card.pokedex_text_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 1 blur 02
	show statistics: false
	default: card.pokedex_text_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 1 blur 03
	show statistics: false
	default: card.pokedex_text_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 1 blur 04
	show statistics: false
	default: card.pokedex_text_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 blur 01
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 blur 02
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 blur 03
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 blur 04
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: special rule 1 blur 01
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: special rule 1 blur 02
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: special rule 1 blur 03
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: special rule 1 blur 04
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 blur 01
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 blur 02
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 blur 03
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 blur 04
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: damage 1 blur 01
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 1 blur 02
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 1 blur 03
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 1 blur 04
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: rule text 1 blur 01
	show statistics: false
	default: card.rule_text_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 1 blur 02
	show statistics: false
	default: card.rule_text_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 1 blur 03
	show statistics: false
	default: card.rule_text_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 1 blur 04
	show statistics: false
	default: card.rule_text_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: damage 2 blur 01
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 2 blur 02
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 2 blur 03
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 2 blur 04
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: rule text 2 blur 01
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 2 blur 02
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 2 blur 03
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 2 blur 04
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: damage 3 blur 01
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 3 blur 02
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 3 blur 03
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 3 blur 04
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: rule text 3 blur 01
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 3 blur 02
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 3 blur 03
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 3 blur 04
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: attack 1 blur 01
	show statistics: false
	default: card.attack_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 1 blur 02
	show statistics: false
	default: card.attack_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 1 blur 03
	show statistics: false
	default: card.attack_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 1 blur 04
	show statistics: false
	default: card.attack_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 2 blur 01
	show statistics: false
	default: card.attack_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 2 blur 02
	show statistics: false
	default: card.attack_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 2 blur 03
	show statistics: false
	default: card.attack_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 2 blur 04
	show statistics: false
	default: card.attack_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 3 blur 01
	show statistics: false
	default: card.attack_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 3 blur 02
	show statistics: false
	default: card.attack_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 3 blur 03
	show statistics: false
	default: card.attack_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 3 blur 04
	show statistics: false
	default: card.attack_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: level text blur 01
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	default: level_rem()
extra card field:
	type: text
	name: level text blur 02
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	default: level_rem()
extra card field:
	type: text
	name: level text blur 03
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	default: level_rem()
extra card field:
	type: text
	name: level text blur 04
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	default: level_rem()
extra card style:
	card number blur 01:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_blur() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	card number blur 02:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_blur() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	card number blur 03:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_blur() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	card number blur 04:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_blur() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	illustrator blur 01:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_blur() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	illustrator blur 02:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_blur() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	illustrator blur 03:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_blur() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	illustrator blur 04:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_blur() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	copyright blur 01:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_blur() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	copyright blur 02:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_blur() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	copyright blur 03:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_blur() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	copyright blur 04:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_blur() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	weakoverlay blur 01:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_blur() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	weakoverlay blur 02:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_blur() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	weakoverlay blur 03:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_blur() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	weakoverlay blur 04:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_blur() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	resoverlay blur 01:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_blur() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	resoverlay blur 02:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_blur() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	resoverlay blur 03:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_blur() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	resoverlay blur 04:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_blur() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	retoverlay blur 01:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_blur() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	retoverlay blur 02:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_blur() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	retoverlay blur 03:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_blur() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	retoverlay blur 04:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_blur() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	card name blur 01:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_blur() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	card name blur 02:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_blur() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	card name blur 03:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_blur() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	card name blur 04:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_blur() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	hp blur 01:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_blur() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	hp blur 02:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_blur() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	hp blur 03:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_blur() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	hp blur 04:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_blur() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	stuff blur 01:
		left: { x_left(322) }
		top: { y_top(496) }
		width: { fun_expand_size(33) }
		height: { fun_expand_size(14) }
		z index: 10
		font:
			name: "GillSansCdn"
			size: { fun_expand_font(12) }
			weight: "bold"
			color: { if stage()=="Level Up" then rgb(83,79,78) else rgb(191,186,47) }
	weakness blur 01:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_blur() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	weakness blur 02:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_blur() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	weakness blur 03:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_blur() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	weakness blur 04:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_blur() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	resistance blur 01:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_blur() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	resistance blur 02:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_blur() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	resistance blur 03:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_blur() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	resistance blur 04:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_blur() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	flavor text blur 01:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_blur() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			weight: { flavor_weight() }
			style: { flavor_style() }
			scale down to: 6
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	flavor text blur 02:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_blur() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			weight: { flavor_weight() }
			scale down to: 6
			style: { flavor_style() }
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	flavor text blur 03:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_blur() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			weight: { flavor_weight() }
			scale down to: 6
			style: { flavor_style() }
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	flavor text blur 04:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_blur() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			weight: { flavor_weight() }
			style: { flavor_style() }
			scale down to: 6
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	evolution 1 blur 01:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_blur() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	evolution 1 blur 02:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_blur() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	evolution 1 blur 03:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_blur() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	evolution 1 blur 04:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_blur() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	evolution entry blur 01:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_blur() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	evolution entry blur 02:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_blur() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	evolution entry blur 03:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_blur() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	evolution entry blur 04:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_blur() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	title 1 blur 01:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_blur() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	title 1 blur 02:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_blur() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	title 1 blur 03:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_blur() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	title 1 blur 04:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_blur() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	title 2 blur 01:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: 5
		visible: { title_2_outline_blur() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	title 2 blur 02:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: 5
		visible: { title_2_outline_blur() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	title 2 blur 03:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: 5
		visible: { title_2_outline_blur() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	title 2 blur 04:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: 5
		visible: { title_2_outline_blur() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	pokedex text 1 blur 01:
		left: { pokedex1_left() }
		top: { pokedex1_top() }
		width: { pokedex1_width() }
		height: { pokedex1_height() }
		z index: 5
		alignment: { pokedex1_align() }
		visible: { pokedex1_outline_blur() }
		font
			name: { pokedex1_font() }
			weight: { pokedex1_weight() }
			style: { pokedex1_style() }
			size: { pokedex1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	pokedex text 1 blur 02:
		left: { pokedex1_left() }
		top: { pokedex1_top() }
		width: { pokedex1_width() }
		height: { pokedex1_height() }
		z index: 5
		alignment: { pokedex1_align() }
		visible: { pokedex1_outline_blur() }
		font
			name: { pokedex1_font() }
			weight: { pokedex1_weight() }
			style: { pokedex1_style() }
			size: { pokedex1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	pokedex text 1 blur 03:
		left: { pokedex1_left() }
		top: { pokedex1_top() }
		width: { pokedex1_width() }
		height: { pokedex1_height() }
		z index: 5
		alignment: { pokedex1_align() }
		visible: { pokedex1_outline_blur() }
		font
			name: { pokedex1_font() }
			weight: { pokedex1_weight() }
			style: { pokedex1_style() }
			size: { pokedex1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	pokedex text 1 blur 04:
		left: { pokedex1_left() }
		top: { pokedex1_top() }
		width: { pokedex1_width() }
		height: { pokedex1_height() }
		z index: 5
		alignment: { pokedex1_align() }
		visible: { pokedex1_outline_blur() }
		font
			name: { pokedex1_font() }
			weight: { pokedex1_weight() }
			style: { pokedex1_style() }
			size: { pokedex1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	special rule 1 blur 01:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_blur() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			style: { special_rule_style() }
			scale down to: 6
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	special rule 1 blur 02:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_blur() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			style: { special_rule_style() }
			scale down to: 6
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	special rule 1 blur 03:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_blur() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			scale down to: 6
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	special rule 1 blur 04:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_blur() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			scale down to: 6
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	ability 1 blur 01:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_blur() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	ability 1 blur 02:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_blur() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	ability 1 blur 03:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_blur() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	ability 1 blur 04:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_blur() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	rule np 1 blur 01:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_blur() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	rule np 1 blur 02:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_blur() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	rule np 1 blur 03:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_blur() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	rule np 1 blur 04:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_blur() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	damage 1 blur 01:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_blur() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	damage 1 blur 02:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_blur() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	damage 1 blur 03:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_blur() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	damage 1 blur 04:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_blur() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	rule text 1 blur 01:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_1_height() }
		z index: 5
		visible: { rule_1_outline_blur() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	rule text 1 blur 02:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_1_height() }
		z index: 5
		visible: { rule_1_outline_blur() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	rule text 1 blur 03:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_1_height() }
		z index: 5
		visible: { rule_1_outline_blur() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	rule text 1 blur 04:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_1_height() }
		z index: 5
		visible: { rule_1_outline_blur() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	damage 2 blur 01:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_blur() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	damage 2 blur 02:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_blur() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	damage 2 blur 03:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_blur() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	damage 2 blur 04:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_blur() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	rule text 2 blur 01:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_blur() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	rule text 2 blur 02:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_blur() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	rule text 2 blur 03:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_blur() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	rule text 2 blur 04:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_blur() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	damage 3 blur 01:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_blur() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	damage 3 blur 02:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_blur() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	damage 3 blur 03:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_blur() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	damage 3 blur 04:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_blur() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	rule text 3 blur 01:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_blur() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	rule text 3 blur 02:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_blur() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	rule text 3 blur 03:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_blur() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	rule text 3 blur 04:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_blur() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	attack 1 blur 01:
		left: { attack_1_left() }
		top: { attack_1_top() }
		width: { attack_1_width() }
		height: { attack_1_height() }
		z index: 5
		visible: { attack_1_outline_blur() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	attack 1 blur 02:
		left: { attack_1_left() }
		top: { attack_1_top() }
		width: { attack_1_width() }
		height: { attack_1_height() }
		z index: 5
		visible: { attack_1_outline_blur() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	attack 1 blur 03:
		left: { attack_1_left() }
		top: { attack_1_top() }
		width: { attack_1_width() }
		height: { attack_1_height() }
		z index: 5
		visible: { attack_1_outline_blur() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	attack 1 blur 04:
		left: { attack_1_left() }
		top: { attack_1_top() }
		width: { attack_1_width() }
		height: { attack_1_height() }
		z index: 5
		visible: { attack_1_outline_blur() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	attack 2 blur 01:
		left: { attack_2_left() }
		top: { attack_2_top() }
		width: { attack_2_width() }
		height: { attack_2_height() }
		z index: 5
		visible: { attack_2_outline_blur() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	attack 2 blur 02:
		left: { attack_2_left() }
		top: { attack_2_top() }
		width: { attack_2_width() }
		height: { attack_2_height() }
		z index: 5
		visible: { attack_2_outline_blur() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	attack 2 blur 03:
		left: { attack_2_left() }
		top: { attack_2_top() }
		width: { attack_2_width() }
		height: { attack_2_height() }
		z index: 5
		visible: { attack_2_outline_blur() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	attack 2 blur 04:
		left: { attack_2_left() }
		top: { attack_2_top() }
		width: { attack_2_width() }
		height: { attack_2_height() }
		z index: 5
		visible: { attack_2_outline_blur() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	attack 3 blur 01:
		left: { attack_3_left() }
		top: { attack_3_top() }
		width: { attack_3_width() }
		height: { attack_3_height() }
		z index: 5
		visible: { attack_3_outline_blur() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	attack 3 blur 02:
		left: { attack_3_left() }
		top: { attack_3_top() }
		width: { attack_3_width() }
		height: { attack_3_height() }
		z index: 5
		visible: { attack_3_outline_blur() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	attack 3 blur 03:
		left: { attack_3_left() }
		top: { attack_3_top() }
		width: { attack_3_width() }
		height: { attack_3_height() }
		z index: 5
		visible: { attack_3_outline_blur() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	attack 3 blur 04:
		left: { attack_3_left() }
		top: { attack_3_top() }
		width: { attack_3_width() }
		height: { attack_3_height() }
		z index: 5
		visible: { attack_3_outline_blur() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
	level text blur 01:
		left: { x_left(32+card_name_title_width()) }
		top: { y_top(19.5) }
		width: { fun_expand_size(50) }
		height: { fun_expand_size(if is_pokemon() then 24 else 0) }
		z index: 5
		alignment: { "bottom left" }
		visible: { title_lv_2_outline_blur() }
		font
			name: { "Humanist521BDCdn" }
			weight: { "bold" }
			style: { "normal" }
			size: { fun_expand_font(8) }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 1
			shadow blur: 2
	level text blur 02:
		left: { x_left(32+card_name_title_width()) }
		top: { y_top(19.5) }
		width: { fun_expand_size(50) }
		height: { fun_expand_size(if is_pokemon() then 24 else 0) }
		z index: 5
		alignment: { "bottom left" }
		visible: { title_lv_2_outline_blur() }
		font
			name: { "Humanist521BDCdn" }
			weight: { "bold" }
			style: { "normal" }
			size: { fun_expand_font(8) }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -1
			shadow blur: 2
	level text blur 03:
		left: { x_left(32+card_name_title_width()) }
		top: { y_top(19.5) }
		width: { fun_expand_size(50) }
		height: { fun_expand_size(if is_pokemon() then 24 else 0) }
		z index: 5
		alignment: { "bottom left" }
		visible: { title_lv_2_outline_blur() }
		font
			name: { "Humanist521BDCdn" }
			weight: { "bold" }
			style: { "normal" }
			size: { fun_expand_font(8) }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 1
			shadow blur: 2
	level text blur 04:
		left: { x_left(32+card_name_title_width()) }
		top: { y_top(19.5) }
		width: { fun_expand_size(50) }
		height: { fun_expand_size(if is_pokemon() then 24 else 0) }
		z index: 5
		alignment: { "bottom left" }
		visible: { title_lv_2_outline_blur() }
		font
			name: { "Humanist521BDCdn" }
			weight: { "bold" }
			style: { "normal" }
			size: { fun_expand_font(8) }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -1
			shadow blur: 2
############################# Duplicate text fields for all outline text (regardless of file size, values for medium and small need to be changed to 2, from x: 2/x: -2/y: 2/y: -2 to x: 2/x: -2/y: 2/y: -2)
extra card field:
	type: text
	name: card number out 01
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number out 02
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number out 03
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number out 04
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator out 01
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator out 02
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator out 03
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator out 04
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright out 01
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright out 02
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright out 03
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright out 04
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay out 01
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay out 02
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay out 03
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay out 04
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay out 01
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay out 02
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay out 03
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay out 04
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay out 01
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay out 02
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay out 03
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay out 04
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name out 01
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name out 02
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name out 03
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name out 04
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp out 01
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp out 02
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp out 03
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp out 04
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness out 01
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness out 02
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness out 03
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness out 04
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance out 01
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance out 02
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance out 03
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance out 04
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: flavor text out 01
	show statistics: false
	default: card.flavor_text
	multi line: true
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: flavor text out 02
	show statistics: false
	default: card.flavor_text
	card list allow: false
	multi line: true
	save value: false
	editable: false
extra card field:
	type: text
	name: flavor text out 03
	show statistics: false
	multi line: true
	default: card.flavor_text
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: flavor text out 04
	show statistics: false
	default: card.flavor_text
	multi line: true
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 out 01
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 out 02
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 out 03
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 out 04
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry out 01
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry out 02
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry out 03
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry out 04
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 out 01
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 out 02
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 out 03
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 out 04
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 out 01
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 out 02
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 out 03
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 out 04
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 1 out 01
	show statistics: false
	default: card.pokedex_text_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 1 out 02
	show statistics: false
	default: card.pokedex_text_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 1 out 03
	show statistics: false
	default: card.pokedex_text_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 1 out 04
	show statistics: false
	default: card.pokedex_text_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 out 01
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 out 02
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 out 03
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 out 04
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: special rule 1 out 01
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: special rule 1 out 02
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: special rule 1 out 03
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: special rule 1 out 04
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 out 01
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 out 02
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 out 03
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 out 04
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: damage 1 out 01
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 1 out 02
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 1 out 03
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 1 out 04
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: rule text 1 out 01
	show statistics: false
	default: card.rule_text_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 1 out 02
	show statistics: false
	default: card.rule_text_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 1 out 03
	show statistics: false
	default: card.rule_text_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 1 out 04
	show statistics: false
	default: card.rule_text_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: damage 2 out 01
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 2 out 02
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 2 out 03
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 2 out 04
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: rule text 2 out 01
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 2 out 02
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 2 out 03
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 2 out 04
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: damage 3 out 01
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 3 out 02
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 3 out 03
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 3 out 04
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: rule text 3 out 01
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 3 out 02
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 3 out 03
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 3 out 04
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: attack 1 out 01
	show statistics: false
	default: card.attack_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 1 out 02
	show statistics: false
	default: card.attack_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 1 out 03
	show statistics: false
	default: card.attack_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 1 out 04
	show statistics: false
	default: card.attack_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 2 out 01
	show statistics: false
	default: card.attack_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 2 out 02
	show statistics: false
	default: card.attack_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 2 out 03
	show statistics: false
	default: card.attack_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 2 out 04
	show statistics: false
	default: card.attack_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 3 out 01
	show statistics: false
	default: card.attack_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 3 out 02
	show statistics: false
	default: card.attack_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 3 out 03
	show statistics: false
	default: card.attack_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 3 out 04
	show statistics: false
	default: card.attack_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: level text out 01
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	default: level_rem()
extra card field:
	type: text
	name: level text out 02
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	default: level_rem()
extra card field:
	type: text
	name: level text out 03
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	default: level_rem()
extra card field:
	type: text
	name: level text out 04
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	default: level_rem()
extra card style:
	card number out 01:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_visible() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	card number out 02:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_visible() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	card number out 03:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_visible() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	card number out 04:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_visible() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	illustrator out 01:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_visible() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	illustrator out 02:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_visible() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	illustrator out 03:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_visible() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	illustrator out 04:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_visible() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	copyright out 01:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_visible() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	copyright out 02:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_visible() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	copyright out 03:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_visible() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	copyright out 04:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_visible() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	weakoverlay out 01:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	weakoverlay out 02:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	weakoverlay out 03:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	weakoverlay out 04:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	resoverlay out 01:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	resoverlay out 02:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	resoverlay out 03:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	resoverlay out 04:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	retoverlay out 01:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	retoverlay out 02:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	retoverlay out 03:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	retoverlay out 04:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	card name out 01:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_visible() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	card name out 02:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_visible() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	card name out 03:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_visible() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	card name out 04:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_visible() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	hp out 01:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	hp out 02:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	hp out 03:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	hp out 04:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	weakness out 01:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_visible() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	weakness out 02:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_visible() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	weakness out 03:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_visible() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	weakness out 04:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_visible() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	resistance out 01:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_visible() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	resistance out 02:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_visible() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	resistance out 03:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_visible() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	resistance out 04:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_visible() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	flavor text out 01:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_visible() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			weight: { flavor_weight() }
			style: { flavor_style() }
			scale down to: 6
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	flavor text out 02:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_visible() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			weight: { flavor_weight() }
			scale down to: 6
			style: { flavor_style() }
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	flavor text out 03:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_visible() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			weight: { flavor_weight() }
			scale down to: 6
			style: { flavor_style() }
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	flavor text out 04:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_visible() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			weight: { flavor_weight() }
			style: { flavor_style() }
			scale down to: 6
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	evolution 1 out 01:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	evolution 1 out 02:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	evolution 1 out 03:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	evolution 1 out 04:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	evolution entry out 01:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	evolution entry out 02:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	evolution entry out 03:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	evolution entry out 04:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	title 1 out 01:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	title 1 out 02:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	title 1 out 03:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	title 1 out 04:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	title 2 out 01:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: 5
		visible: { title_2_outline_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	title 2 out 02:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: 5
		visible: { title_2_outline_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	title 2 out 03:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: 5
		visible: { title_2_outline_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	title 2 out 04:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: 5
		visible: { title_2_outline_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	pokedex text 1 out 01:
		left: { pokedex1_left() }
		top: { pokedex1_top() }
		width: { pokedex1_width() }
		height: { pokedex1_height() }
		z index: 5
		alignment: { pokedex1_align() }
		visible: { pokedex1_outline_visible() }
		font
			name: { pokedex1_font() }
			weight: { pokedex1_weight() }
			style: { pokedex1_style() }
			size: { pokedex1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	pokedex text 1 out 02:
		left: { pokedex1_left() }
		top: { pokedex1_top() }
		width: { pokedex1_width() }
		height: { pokedex1_height() }
		z index: 5
		alignment: { pokedex1_align() }
		visible: { pokedex1_outline_visible() }
		font
			name: { pokedex1_font() }
			weight: { pokedex1_weight() }
			style: { pokedex1_style() }
			size: { pokedex1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	pokedex text 1 out 03:
		left: { pokedex1_left() }
		top: { pokedex1_top() }
		width: { pokedex1_width() }
		height: { pokedex1_height() }
		z index: 5
		alignment: { pokedex1_align() }
		visible: { pokedex1_outline_visible() }
		font
			name: { pokedex1_font() }
			weight: { pokedex1_weight() }
			style: { pokedex1_style() }
			size: { pokedex1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	pokedex text 1 out 04:
		left: { pokedex1_left() }
		top: { pokedex1_top() }
		width: { pokedex1_width() }
		height: { pokedex1_height() }
		z index: 5
		alignment: { pokedex1_align() }
		visible: { pokedex1_outline_visible() }
		font
			name: { pokedex1_font() }
			weight: { pokedex1_weight() }
			style: { pokedex1_style() }
			size: { pokedex1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	special rule 1 out 01:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			style: { special_rule_style() }
			scale down to: 6
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	special rule 1 out 02:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			style: { special_rule_style() }
			scale down to: 6
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	special rule 1 out 03:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			scale down to: 6
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	special rule 1 out 04:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			scale down to: 6
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	ability 1 out 01:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	ability 1 out 02:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	ability 1 out 03:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	ability 1 out 04:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	rule np 1 out 01:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	rule np 1 out 02:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	rule np 1 out 03:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	rule np 1 out 04:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	damage 1 out 01:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	damage 1 out 02:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	damage 1 out 03:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	damage 1 out 04:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	rule text 1 out 01:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_1_height() }
		z index: 5
		visible: { rule_1_outline_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	rule text 1 out 02:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_1_height() }
		z index: 5
		visible: { rule_1_outline_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	rule text 1 out 03:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_1_height() }
		z index: 5
		visible: { rule_1_outline_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	rule text 1 out 04:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_1_height() }
		z index: 5
		visible: { rule_1_outline_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	damage 2 out 01:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	damage 2 out 02:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	damage 2 out 03:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	damage 2 out 04:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	rule text 2 out 01:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	rule text 2 out 02:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	rule text 2 out 03:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	rule text 2 out 04:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	damage 3 out 01:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	damage 3 out 02:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	damage 3 out 03:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	damage 3 out 04:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	rule text 3 out 01:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	rule text 3 out 02:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	rule text 3 out 03:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	rule text 3 out 04:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	attack 1 out 01:
		left: { attack_1_left() }
		top: { attack_1_top() }
		width: { attack_1_width() }
		height: { attack_1_height() }
		z index: 5
		visible: { attack_1_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	attack 1 out 02:
		left: { attack_1_left() }
		top: { attack_1_top() }
		width: { attack_1_width() }
		height: { attack_1_height() }
		z index: 5
		visible: { attack_1_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	attack 1 out 03:
		left: { attack_1_left() }
		top: { attack_1_top() }
		width: { attack_1_width() }
		height: { attack_1_height() }
		z index: 5
		visible: { attack_1_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	attack 1 out 04:
		left: { attack_1_left() }
		top: { attack_1_top() }
		width: { attack_1_width() }
		height: { attack_1_height() }
		z index: 5
		visible: { attack_1_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	attack 2 out 01:
		left: { attack_2_left() }
		top: { attack_2_top() }
		width: { attack_2_width() }
		height: { attack_2_height() }
		z index: 5
		visible: { attack_2_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	attack 2 out 02:
		left: { attack_2_left() }
		top: { attack_2_top() }
		width: { attack_2_width() }
		height: { attack_2_height() }
		z index: 5
		visible: { attack_2_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	attack 2 out 03:
		left: { attack_2_left() }
		top: { attack_2_top() }
		width: { attack_2_width() }
		height: { attack_2_height() }
		z index: 5
		visible: { attack_2_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	attack 2 out 04:
		left: { attack_2_left() }
		top: { attack_2_top() }
		width: { attack_2_width() }
		height: { attack_2_height() }
		z index: 5
		visible: { attack_2_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	attack 3 out 01:
		left: { attack_3_left() }
		top: { attack_3_top() }
		width: { attack_3_width() }
		height: { attack_3_height() }
		z index: 5
		visible: { attack_3_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	attack 3 out 02:
		left: { attack_3_left() }
		top: { attack_3_top() }
		width: { attack_3_width() }
		height: { attack_3_height() }
		z index: 5
		visible: { attack_3_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	attack 3 out 03:
		left: { attack_3_left() }
		top: { attack_3_top() }
		width: { attack_3_width() }
		height: { attack_3_height() }
		z index: 5
		visible: { attack_3_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	attack 3 out 04:
		left: { attack_3_left() }
		top: { attack_3_top() }
		width: { attack_3_width() }
		height: { attack_3_height() }
		z index: 5
		visible: { attack_3_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
	level text out 01:
		left: { x_left(32+card_name_title_width()) }
		top: { y_top(19.5) }
		width: { fun_expand_size(50) }
		height: { fun_expand_size(if is_pokemon() then 24 else 0) }
		z index: 5
		alignment: { "bottom left" }
		visible: { title_lv_2_outline_visible() }
		font
			name: { "Humanist521BDCdn" }
			weight: { "bold" }
			style: { "normal" }
			size: { fun_expand_font(8) }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 2
	level text out 02:
		left: { x_left(32+card_name_title_width()) }
		top: { y_top(19.5) }
		width: { fun_expand_size(50) }
		height: { fun_expand_size(if is_pokemon() then 24 else 0) }
		z index: 5
		alignment: { "bottom left" }
		visible: { title_lv_2_outline_visible() }
		font
			name: { "Humanist521BDCdn" }
			weight: { "bold" }
			style: { "normal" }
			size: { fun_expand_font(8) }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -2
	level text out 03:
		left: { x_left(32+card_name_title_width()) }
		top: { y_top(19.5) }
		width: { fun_expand_size(50) }
		height: { fun_expand_size(if is_pokemon() then 24 else 0) }
		z index: 5
		alignment: { "bottom left" }
		visible: { title_lv_2_outline_visible() }
		font
			name: { "Humanist521BDCdn" }
			weight: { "bold" }
			style: { "normal" }
			size: { fun_expand_font(8) }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 2
	level text out 04:
		left: { x_left(32+card_name_title_width()) }
		top: { y_top(19.5) }
		width: { fun_expand_size(50) }
		height: { fun_expand_size(if is_pokemon() then 24 else 0) }
		z index: 5
		alignment: { "bottom left" }
		visible: { title_lv_2_outline_visible() }
		font
			name: { "Humanist521BDCdn" }
			weight: { "bold" }
			style: { "normal" }
			size: { fun_expand_font(8) }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -2
############################# Duplicate text fields for outline text (for medium file size) ############################################################################
extra card field:
	type: text
	name: card number out 05
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number out 06
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number out 07
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number out 08
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator out 05
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator out 06
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator out 07
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator out 08
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright out 05
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright out 06
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright out 07
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright out 08
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay out 05
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay out 06
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay out 07
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay out 08
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay out 05
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay out 06
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay out 07
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay out 08
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay out 05
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay out 06
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay out 07
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay out 08
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name out 05
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name out 06
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name out 07
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name out 08
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp out 05
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp out 06
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp out 07
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp out 08
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness out 05
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness out 06
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness out 07
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness out 08
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance out 05
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance out 06
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance out 07
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance out 08
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: flavor text out 05
	show statistics: false
	default: card.flavor_text
	multi line: true
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: flavor text out 06
	show statistics: false
	default: card.flavor_text
	multi line: true
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: flavor text out 07
	show statistics: false
	default: card.flavor_text
	multi line: true
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: flavor text out 08
	show statistics: false
	default: card.flavor_text
	multi line: true
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 out 05
	show statistics: false
	default: card.evolution_reminder_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 out 06
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 out 07
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 out 08
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry out 05
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry out 06
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry out 07
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry out 08
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 out 05
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 out 06
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 out 07
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 out 08
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 out 05
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 out 06
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 out 07
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 out 08
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 1 out 05
	show statistics: false
	default: card.pokedex_text_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 1 out 06
	show statistics: false
	default: card.pokedex_text_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 1 out 07
	show statistics: false
	default: card.pokedex_text_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 1 out 08
	show statistics: false
	default: card.pokedex_text_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 out 05
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 out 06
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 out 07
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 out 08
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: special rule 1 out 05
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: special rule 1 out 06
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: special rule 1 out 07
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: special rule 1 out 08
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 out 05
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 out 06
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 out 07
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 out 08
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: damage 1 out 05
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 1 out 06
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 1 out 07
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 1 out 08
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: rule text 1 out 05
	show statistics: false
	default: card.rule_text_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 1 out 06
	show statistics: false
	default: card.rule_text_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 1 out 07
	show statistics: false
	default: card.rule_text_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 1 out 08
	show statistics: false
	default: card.rule_text_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: damage 2 out 05
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 2 out 06
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 2 out 07
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 2 out 08
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: rule text 2 out 05
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 2 out 06
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 2 out 07
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 2 out 08
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: damage 3 out 05
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 3 out 06
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 3 out 07
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 3 out 08
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: rule text 3 out 05
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 3 out 06
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 3 out 07
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 3 out 08
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: attack 1 out 05
	show statistics: false
	default: card.attack_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 1 out 06
	show statistics: false
	default: card.attack_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 1 out 07
	show statistics: false
	default: card.attack_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 1 out 08
	show statistics: false
	default: card.attack_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 2 out 05
	show statistics: false
	default: card.attack_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 2 out 06
	show statistics: false
	default: card.attack_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 2 out 07
	show statistics: false
	default: card.attack_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 2 out 08
	show statistics: false
	default: card.attack_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 3 out 05
	show statistics: false
	default: card.attack_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 3 out 06
	show statistics: false
	default: card.attack_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 3 out 07
	show statistics: false
	default: card.attack_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 3 out 08
	show statistics: false
	default: card.attack_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: level text out 05
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	default: level_rem()
extra card field:
	type: text
	name: level text out 06
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	default: level_rem()
extra card field:
	type: text
	name: level text out 07
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	default: level_rem()
extra card field:
	type: text
	name: level text out 08
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	default: level_rem()
extra card style:
	card number out 05:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_visible() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	card number out 06:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_visible() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	card number out 07:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_visible() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	card number out 08:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_visible() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	illustrator out 05:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_visible() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	illustrator out 06:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_visible() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	illustrator out 07:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_visible() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	illustrator out 08:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_visible() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	copyright out 05:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_visible() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	copyright out 06:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_visible() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	copyright out 07:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_visible() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	copyright out 08:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_visible() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	weakoverlay out 05:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	weakoverlay out 06:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	weakoverlay out 07:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	weakoverlay out 08:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	resoverlay out 05:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	resoverlay out 06:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	resoverlay out 07:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	resoverlay out 08:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	retoverlay out 05:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	retoverlay out 06:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	retoverlay out 07:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	retoverlay out 08:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	card name out 05:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_visible() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	card name out 06:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_visible() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	card name out 07:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_visible() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	card name out 08:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_visible() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	hp out 05:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	hp out 06:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	hp out 07:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	hp out 08:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	weakness out 05:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_visible() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	weakness out 06:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_visible() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	weakness out 07:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_visible() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	weakness out 08:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_visible() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	resistance out 05:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_visible() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	resistance out 06:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_visible() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	resistance out 07:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_visible() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	resistance out 08:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_visible() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	flavor text out 05:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_visible() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			weight: { flavor_weight() }
			style: { flavor_style() }
			scale down to: 6
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	flavor text out 06:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_visible() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			weight: { flavor_weight() }
			scale down to: 6
			style: { flavor_style() }
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	flavor text out 07:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_visible() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			weight: { flavor_weight() }
			scale down to: 6
			style: { flavor_style() }
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	flavor text out 08:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_visible() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			weight: { flavor_weight() }
			scale down to: 6
			style: { flavor_style() }
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	evolution 1 out 05:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	evolution 1 out 06:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	evolution 1 out 07:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	evolution 1 out 08:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	evolution entry out 05:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	evolution entry out 06:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	evolution entry out 07:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	evolution entry out 08:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	title 1 out 05:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	title 1 out 06:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	title 1 out 07:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	title 1 out 08:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	title 2 out 05:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: 5
		visible: { title_2_outline_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	title 2 out 06:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: 5
		visible: { title_2_outline_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	title 2 out 07:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: 5
		visible: { title_2_outline_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	title 2 out 08:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: 5
		visible: { title_2_outline_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	pokedex text 1 out 05:
		left: { pokedex1_left() }
		top: { pokedex1_top() }
		width: { pokedex1_width() }
		height: { pokedex1_height() }
		z index: 5
		alignment: { pokedex1_align() }
		visible: { pokedex1_outline_visible() }
		font
			name: { pokedex1_font() }
			weight: { pokedex1_weight() }
			style: { pokedex1_style() }
			size: { pokedex1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	pokedex text 1 out 06:
		left: { pokedex1_left() }
		top: { pokedex1_top() }
		width: { pokedex1_width() }
		height: { pokedex1_height() }
		z index: 5
		alignment: { pokedex1_align() }
		visible: { pokedex1_outline_visible() }
		font
			name: { pokedex1_font() }
			weight: { pokedex1_weight() }
			style: { pokedex1_style() }
			size: { pokedex1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	pokedex text 1 out 07:
		left: { pokedex1_left() }
		top: { pokedex1_top() }
		width: { pokedex1_width() }
		height: { pokedex1_height() }
		z index: 5
		alignment: { pokedex1_align() }
		visible: { pokedex1_outline_visible() }
		font
			name: { pokedex1_font() }
			weight: { pokedex1_weight() }
			style: { pokedex1_style() }
			size: { pokedex1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	pokedex text 1 out 08:
		left: { pokedex1_left() }
		top: { pokedex1_top() }
		width: { pokedex1_width() }
		height: { pokedex1_height() }
		z index: 5
		alignment: { pokedex1_align() }
		visible: { pokedex1_outline_visible() }
		font
			name: { pokedex1_font() }
			weight: { pokedex1_weight() }
			style: { pokedex1_style() }
			size: { pokedex1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	special rule 1 out 05:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			scale down to: 6
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	special rule 1 out 06:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			style: { special_rule_style() }
			scale down to: 6
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	special rule 1 out 07:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			style: { special_rule_style() }
			size: { special_rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	special rule 1 out 08:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			scale down to: 6
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	ability 1 out 05:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	ability 1 out 06:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	ability 1 out 07:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	rule np 1 out 05:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	rule np 1 out 06:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	rule np 1 out 07:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	rule np 1 out 08:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	damage 1 out 05:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	damage 1 out 06:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	damage 1 out 07:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	damage 1 out 08:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	rule text 1 out 05:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_1_height() }
		z index: 5
		visible: { rule_1_outline_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	rule text 1 out 06:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_1_height() }
		z index: 5
		visible: { rule_1_outline_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	rule text 1 out 07:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_1_height() }
		z index: 5
		visible: { rule_1_outline_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	rule text 1 out 08:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_1_height() }
		z index: 5
		visible: { rule_1_outline_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	damage 2 out 05:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	damage 2 out 06:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	damage 2 out 07:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	damage 2 out 08:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	rule text 2 out 05:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	rule text 2 out 06:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	rule text 2 out 07:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	rule text 2 out 08:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	damage 3 out 05:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	damage 3 out 06:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	damage 3 out 07:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	damage 3 out 08:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	rule text 3 out 05:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	rule text 3 out 06:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	rule text 3 out 07:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	rule text 3 out 08:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	attack 1 out 05:
		left: { attack_1_left() }
		top: { attack_1_top() }
		width: { attack_1_width() }
		height: { attack_1_height() }
		z index: 5
		visible: { attack_1_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	attack 1 out 06:
		left: { attack_1_left() }
		top: { attack_1_top() }
		width: { attack_1_width() }
		height: { attack_1_height() }
		z index: 5
		visible: { attack_1_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	attack 1 out 07:
		left: { attack_1_left() }
		top: { attack_1_top() }
		width: { attack_1_width() }
		height: { attack_1_height() }
		z index: 5
		visible: { attack_1_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	attack 1 out 08:
		left: { attack_1_left() }
		top: { attack_1_top() }
		width: { attack_1_width() }
		height: { attack_1_height() }
		z index: 5
		visible: { attack_1_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	attack 2 out 05:
		left: { attack_2_left() }
		top: { attack_2_top() }
		width: { attack_2_width() }
		height: { attack_2_height() }
		z index: 5
		visible: { attack_2_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	attack 2 out 06:
		left: { attack_2_left() }
		top: { attack_2_top() }
		width: { attack_2_width() }
		height: { attack_2_height() }
		z index: 5
		visible: { attack_2_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	attack 2 out 07:
		left: { attack_2_left() }
		top: { attack_2_top() }
		width: { attack_2_width() }
		height: { attack_2_height() }
		z index: 5
		visible: { attack_2_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	attack 2 out 08:
		left: { attack_2_left() }
		top: { attack_2_top() }
		width: { attack_2_width() }
		height: { attack_2_height() }
		z index: 5
		visible: { attack_2_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	attack 3 out 05:
		left: { attack_3_left() }
		top: { attack_3_top() }
		width: { attack_3_width() }
		height: { attack_3_height() }
		z index: 5
		visible: { attack_3_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	attack 3 out 06:
		left: { attack_3_left() }
		top: { attack_3_top() }
		width: { attack_3_width() }
		height: { attack_3_height() }
		z index: 5
		visible: { attack_3_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	attack 3 out 07:
		left: { attack_3_left() }
		top: { attack_3_top() }
		width: { attack_3_width() }
		height: { attack_3_height() }
		z index: 5
		visible: { attack_3_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	attack 3 out 08:
		left: { attack_3_left() }
		top: { attack_3_top() }
		width: { attack_3_width() }
		height: { attack_3_height() }
		z index: 5
		visible: { attack_3_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
	level text out 05:
		left: { x_left(32+card_name_title_width()) }
		top: { y_top(19.5) }
		width: { fun_expand_size(50) }
		height: { fun_expand_size(if is_pokemon() then 24 else 0) }
		z index: 5
		alignment: { "bottom left" }
		visible: { title_lv_2_outline_visible() }
		font
			name: { "Humanist521BDCdn" }
			weight: { "bold" }
			style: { "normal" }
			size: { fun_expand_font(8) }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 0
	level text out 06:
		left: { x_left(32+card_name_title_width()) }
		top: { y_top(19.5) }
		width: { fun_expand_size(50) }
		height: { fun_expand_size(if is_pokemon() then 24 else 0) }
		z index: 5
		alignment: { "bottom left" }
		visible: { title_lv_2_outline_visible() }
		font
			name: { "Humanist521BDCdn" }
			weight: { "bold" }
			style: { "normal" }
			size: { fun_expand_font(8) }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 0
	level text out 07:
		left: { x_left(32+card_name_title_width()) }
		top: { y_top(19.5) }
		width: { fun_expand_size(50) }
		height: { fun_expand_size(if is_pokemon() then 24 else 0) }
		z index: 5
		alignment: { "bottom left" }
		visible: { title_lv_2_outline_visible() }
		font
			name: { "Humanist521BDCdn" }
			weight: { "bold" }
			style: { "normal" }
			size: { fun_expand_font(8) }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: 2
	level text out 08:
		left: { x_left(32+card_name_title_width()) }
		top: { y_top(19.5) }
		width: { fun_expand_size(50) }
		height: { fun_expand_size(if is_pokemon() then 24 else 0) }
		z index: 5
		alignment: { "bottom left" }
		visible: { title_lv_2_outline_visible() }
		font
			name: { "Humanist521BDCdn" }
			weight: { "bold" }
			style: { "normal" }
			size: { fun_expand_font(8) }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 0
			shadow displacement y: -2
############################# Duplicate text fields for outline text (for medium file size) ############################################################################
extra card field:
	type: text
	name: card number out 09
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number out 10
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number out 11
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number out 12
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number out 13
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number out 14
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number out 15
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card number out 16
	show statistics: false
	default: card.card_number
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator out 09
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator out 10
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator out 11
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator out 12
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator out 13
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator out 14
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator out 15
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: illustrator out 16
	show statistics: false
	default: ill_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright out 09
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright out 10
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright out 11
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright out 12
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright out 13
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright out 14
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright out 15
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: copyright out 16
	show statistics: false
	default: copy_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay out 09
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay out 10
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay out 11
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay out 12
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay out 13
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay out 14
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay out 15
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakoverlay out 16
	show statistics: false
	default: card.weakoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay out 09
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay out 10
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay out 11
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay out 12
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay out 13
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay out 14
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay out 15
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resoverlay out 16
	show statistics: false
	default: card.resoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay out 09
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay out 10
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay out 11
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay out 12
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay out 13
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay out 14
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay out 15
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: retoverlay out 16
	show statistics: false
	default: card.retoverlay
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name out 09
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name out 10
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name out 11
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name out 12
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name out 13
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name out 14
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name out 15
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: card name out 16
	show statistics: false
	default: card.card_name
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp out 09
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp out 10
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp out 11
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp out 12
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp out 13
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp out 14
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp out 15
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: hp out 16
	show statistics: false
	default: card.hp
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness out 09
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness out 10
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness out 11
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness out 12
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness out 13
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness out 14
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness out 15
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: weakness out 16
	show statistics: false
	default: card.weakness
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance out 09
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance out 10
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance out 11
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance out 12
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance out 13
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance out 14
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance out 15
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: resistance out 16
	show statistics: false
	default: card.resistance
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: flavor text out 09
	show statistics: false
	default: card.flavor_text
	multi line: true
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: flavor text out 10
	show statistics: false
	default: card.flavor_text
	multi line: true
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: flavor text out 11
	show statistics: false
	default: card.flavor_text
	multi line: true
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: flavor text out 12
	show statistics: false
	default: card.flavor_text
	multi line: true
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: flavor text out 13
	show statistics: false
	default: card.flavor_text
	multi line: true
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: flavor text out 14
	show statistics: false
	default: card.flavor_text
	multi line: true
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: flavor text out 15
	show statistics: false
	default: card.flavor_text
	multi line: true
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: flavor text out 16
	show statistics: false
	default: card.flavor_text
	multi line: true
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 out 09
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 out 10
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 out 11
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 out 12
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 out 13
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 out 14
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 out 15
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution 1 out 16
	show statistics: false
	default: evolution_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry out 09
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry out 10
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry out 11
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry out 12
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry out 13
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry out 14
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry out 15
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: evolution entry out 16
	show statistics: false
	default: card.evolution_entry
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 out 09
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 out 10
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 out 11
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 out 12
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 out 13
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 out 14
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 out 15
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 1 out 16
	show statistics: false
	default: title_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 out 09
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 out 10
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 out 11
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 out 12
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 out 13
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 out 14
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 out 15
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: title 2 out 16
	show statistics: false
	default: title_2_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 1 out 09
	show statistics: false
	default: card.pokedex_text_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 1 out 10
	show statistics: false
	default: card.pokedex_text_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 1 out 11
	show statistics: false
	default: card.pokedex_text_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 1 out 12
	show statistics: false
	default: card.pokedex_text_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 1 out 13
	show statistics: false
	default: card.pokedex_text_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 1 out 14
	show statistics: false
	default: card.pokedex_text_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 1 out 15
	show statistics: false
	default: card.pokedex_text_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: pokedex text 1 out 16
	show statistics: false
	default: card.pokedex_text_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 out 09
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 out 10
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 out 11
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 out 12
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 out 13
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 out 14
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 out 15
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: ability 1 out 16
	show statistics: false
	default: ability_1_outline_separator()
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: special rule 1 out 09
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: special rule 1 out 10
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: special rule 1 out 11
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: special rule 1 out 12
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: special rule 1 out 13
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: special rule 1 out 14
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: special rule 1 out 15
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: special rule 1 out 16
	show statistics: false
	default: special_rule_outline_separator()
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 out 09
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 out 10
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 out 11
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 out 12
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 out 13
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 out 14
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 out 15
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule np 1 out 16
	show statistics: false
	default: card.rule_np_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: damage 1 out 09
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 1 out 10
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 1 out 11
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 1 out 12
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 1 out 13
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 1 out 14
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 1 out 15
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 1 out 16
	show statistics: false
	default: card.damage_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: rule text 1 out 09
	show statistics: false
	default: card.rule_text_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 1 out 10
	show statistics: false
	default: card.rule_text_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 1 out 11
	show statistics: false
	default: card.rule_text_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 1 out 12
	show statistics: false
	default: card.rule_text_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 1 out 13
	show statistics: false
	default: card.rule_text_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 1 out 14
	show statistics: false
	default: card.rule_text_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 1 out 15
	show statistics: false
	default: card.rule_text_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 1 out 16
	show statistics: false
	default: card.rule_text_1
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: damage 2 out 09
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 2 out 10
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 2 out 11
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 2 out 12
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 2 out 13
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 2 out 14
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 2 out 15
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 2 out 16
	show statistics: false
	default: card.damage_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: rule text 2 out 09
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 2 out 10
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 2 out 11
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 2 out 12
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 2 out 13
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 2 out 14
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 2 out 15
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 2 out 16
	show statistics: false
	default: card.rule_text_2
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: damage 3 out 09
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 3 out 10
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 3 out 11
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 3 out 12
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 3 out 13
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 3 out 14
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 3 out 15
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: damage 3 out 16
	show statistics: false
	default: card.damage_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: rule text 3 out 09
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 3 out 10
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 3 out 11
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 3 out 12
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 3 out 13
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 3 out 14
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 3 out 15
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: rule text 3 out 16
	show statistics: false
	default: card.rule_text_3
	card list allow: false
	save value: false
	editable: false
	multi line: true
extra card field:
	type: text
	name: attack 1 out 09
	show statistics: false
	default: card.attack_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 1 out 10
	show statistics: false
	default: card.attack_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 1 out 11
	show statistics: false
	default: card.attack_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 1 out 12
	show statistics: false
	default: card.attack_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 1 out 13
	show statistics: false
	default: card.attack_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 1 out 14
	show statistics: false
	default: card.attack_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 1 out 15
	show statistics: false
	default: card.attack_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 1 out 16
	show statistics: false
	default: card.attack_1
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 2 out 09
	show statistics: false
	default: card.attack_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 2 out 10
	show statistics: false
	default: card.attack_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 2 out 11
	show statistics: false
	default: card.attack_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 2 out 12
	show statistics: false
	default: card.attack_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 2 out 13
	show statistics: false
	default: card.attack_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 2 out 14
	show statistics: false
	default: card.attack_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 2 out 15
	show statistics: false
	default: card.attack_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 2 out 16
	show statistics: false
	default: card.attack_2
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 3 out 09
	show statistics: false
	default: card.attack_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 3 out 10
	show statistics: false
	default: card.attack_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 3 out 11
	show statistics: false
	default: card.attack_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 3 out 12
	show statistics: false
	default: card.attack_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 3 out 13
	show statistics: false
	default: card.attack_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 3 out 14
	show statistics: false
	default: card.attack_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 3 out 15
	show statistics: false
	default: card.attack_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: attack 3 out 16
	show statistics: false
	default: card.attack_3
	card list allow: false
	save value: false
	editable: false
extra card field:
	type: text
	name: level text out 09
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	default: level_rem()
extra card field:
	type: text
	name: level text out 10
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	default: level_rem()
extra card field:
	type: text
	name: level text out 11
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	default: level_rem()
extra card field:
	type: text
	name: level text out 12
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	default: level_rem()
extra card field:
	type: text
	name: level text out 13
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	default: level_rem()
extra card field:
	type: text
	name: level text out 14
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	default: level_rem()
extra card field:
	type: text
	name: level text out 15
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	default: level_rem()
extra card field:
	type: text
	name: level text out 16
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	default: level_rem()
extra card style:
	card number out 09:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_visible() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	card number out 10:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_visible() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	card number out 11:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_visible() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	card number out 12:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_visible() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	card number out 13:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_visible() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	card number out 14:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_visible() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	card number out 15:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_visible() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	card number out 16:
		left: { card_no_left() }
		top: { card_no_top() }
		width: { card_no_width() }
		height: { card_no_height() }
		z index: 5
		alignment: { card_no_align() }
		visible: { card_no_outline_visible() }
		font:
			name: { card_no_font() }
			size: { card_no_size() }
			weight: { card_no_weight() }
			style: { card_no_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	illustrator out 09:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_visible() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	illustrator out 10:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_visible() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	illustrator out 11:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_visible() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	illustrator out 12:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_visible() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	illustrator out 13:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_visible() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	illustrator out 14:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_visible() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	illustrator out 15:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_visible() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	illustrator out 16:
		left: { ill_left() }
		top: { ill_top() }
		width: { ill_width() }
		height: { ill_height() }
		z index: 5
		alignment: { ill_align() }
		visible: { ill_outline_visible() }
		font:
			name: { ill_font() }
			weight: { ill_weight() }
			style: { ill_style() }
			size: { ill_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	copyright out 09:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_visible() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	copyright out 10:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_visible() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	copyright out 11:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_visible() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	copyright out 12:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_visible() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	copyright out 13:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_visible() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	copyright out 14:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_visible() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	copyright out 15:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_visible() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	copyright out 16:
		left: { copy_left() }
		top: { copy_top() }
		width: { copy_width() }
		height: { copy_height() }
		z index: 5
		alignment: { copy_align() }
		visible: { copy_outline_visible() }
		font:
			name: { copy_font() }
			size: { copy_size() }
			weight: { copy_weight() }
			style: { copy_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	weakoverlay out 09:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	weakoverlay out 10:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	weakoverlay out 11:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	weakoverlay out 12:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	weakoverlay out 13:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	weakoverlay out 14:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	weakoverlay out 15:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	weakoverlay out 16:
		left: { weak_ov_left() }
		top: { weak_ov_top() }
		width: { weak_ov_width() }
		height: { weak_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	resoverlay out 09:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	resoverlay out 10:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	resoverlay out 11:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	resoverlay out 12:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	resoverlay out 13:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	resoverlay out 14:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	resoverlay out 15:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	resoverlay out 16:
		left: { res_ov_left() }
		top: { res_ov_top() }
		width: { res_ov_width() }
		height: { res_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	retoverlay out 09:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	retoverlay out 10:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	retoverlay out 11:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	retoverlay out 12:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	retoverlay out 13:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	retoverlay out 14:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	retoverlay out 15:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	retoverlay out 16:
		left: { ret_ov_left() }
		top: { ret_ov_top() }
		width: { ret_ov_width() }
		height: { ret_ov_height() }
		z index: 5
		visible: { wrr_ov_outline_visible() }
		alignment: { wrr_ov_align() }
		font:
			name: { wrr_ov_font() }
			weight: { wrr_ov_weight() }
			style: { wrr_ov_style() }
			size: { wrr_ov_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	card name out 09:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_visible() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	card name out 10:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_visible() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	card name out 11:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_visible() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	card name out 12:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_visible() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	card name out 13:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_visible() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	card name out 14:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_visible() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	card name out 15:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_visible() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	card name out 16:
		left: { card_name_left() }
		top: { card_name_top() }
		width: { card_name_width() }
		height: { card_name_height() }
		visible: { card_name_outline_visible() }
		z index: 5
		alignment: { card_name_align() }
		symbol font:
			name: { card_name_symbol_font() }
			size: { card_name_symbol_size() }
		font:
			name: { card_name_font() }
			weight: { card_name_weight() }
			style: { card_name_style() }
			size: { card_name_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	hp out 09:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	hp out 10:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	hp out 11:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	hp out 12:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	hp out 13:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	hp out 14:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	hp out 15:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	hp out 16:
		left: { hp_left() }
		top: { hp_top() }
		width: { hp_width() }
		height: { hp_height() }
		z index: 5
		alignment: { hp_align() }
		visible: { hp_outline_visible() }
		font:
			name: { hp_font() }
			weight: { hp_weight() }
			style: { hp_style() }
			size: { hp_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	weakness out 09:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_visible() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	weakness out 10:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_visible() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	weakness out 11:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_visible() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	weakness out 12:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_visible() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	weakness out 13:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_visible() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	weakness out 14:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_visible() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	weakness out 15:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_visible() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	weakness out 16:
		left: { weak_left() }
		top: { weak_top() }
		width: { weak_width() }
		height: { weak_height() }
		z index: 5
		always symbol: true
		visible: { weak_outline_visible() }
		alignment: { weak_align() }
		symbol font:
			name: { weak_symbol_font() }
			size: { weak_symbol_size() }
		font:
			name: { weak_font() }
			size: { weak_size() }
			weight: { weak_weight() }
			style: { weak_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	resistance out 09:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_visible() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	resistance out 10:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_visible() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	resistance out 11:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_visible() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	resistance out 12:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_visible() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	resistance out 13:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_visible() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	resistance out 14:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_visible() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	resistance out 15:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_visible() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	resistance out 16:
		left: { resist_left() }
		top: { resist_top() }
		width: { resist_width() }
		height: { resist_height() }
		z index: 5
		always symbol: true
		visible: { resist_outline_visible() }
		alignment: { resist_align() }
		symbol font:
			name: { resist_symbol_font() }
			size: { resist_symbol_size() }
		font:
			name: { resist_font() }
			size: { resist_size() }
			weight: { resist_weight() }
			style: { resist_style() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	flavor text out 09:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_visible() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			weight: { flavor_weight() }
			scale down to: 6
			style: { flavor_style() }
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	flavor text out 10:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_visible() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			weight: { flavor_weight() }
			scale down to: 6
			style: { flavor_style() }
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	flavor text out 11:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_visible() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			weight: { flavor_weight() }
			scale down to: 6
			style: { flavor_style() }
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	flavor text out 12:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_visible() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			weight: { flavor_weight() }
			style: { flavor_style() }
			scale down to: 6
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	flavor text out 13:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_visible() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			weight: { flavor_weight() }
			style: { flavor_style() }
			scale down to: 6
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	flavor text out 14:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_visible() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			weight: { flavor_weight() }
			style: { flavor_style() }
			scale down to: 6
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	flavor text out 15:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_visible() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			weight: { flavor_weight() }
			scale down to: 6
			style: { flavor_style() }
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	flavor text out 16:
		left: { flavor_left() }
		top: { flavor_top() }
		width: { flavor_width() }
		height: { flavor_height() }
		z index: 5
		visible: { flavor_outline_visible() }
		alignment: { flavor_align() }
		line height soft: { flavor_lh_soft() }
		font:
			name: { flavor_font() }
			weight: { flavor_weight() }
			scale down to: 6
			style: { flavor_style() }
			size: { flavor_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	evolution 1 out 09:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	evolution 1 out 10:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	evolution 1 out 11:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	evolution 1 out 12:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	evolution 1 out 13:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	evolution 1 out 14:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	evolution 1 out 15:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	evolution 1 out 16:
		left: { evolution_left() }
		top: { evolution_top() }
		width: { evolution_width() }
		height: { evolution_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evolution_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	evolution entry out 09:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	evolution entry out 10:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	evolution entry out 11:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	evolution entry out 12:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	evolution entry out 13:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	evolution entry out 14:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	evolution entry out 15:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	evolution entry out 16:
		left: { evo_left() }
		top: { evolution_top() }
		width: { evo_width() }
		height: { evo_height() }
		alignment: { evolution_align() }
		z index: 5
		visible: { evo_outline_visible() }
		font:
			name: { evolution_font() }
			weight: { evolution_weight() }
			style: { evolution_style() }
			size: { evolution_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	title 1 out 09:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	title 1 out 10:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	title 1 out 11:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	title 1 out 12:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	title 1 out 13:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	title 1 out 14:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	title 1 out 15:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	title 1 out 16:
		left: { title_1_left() }
		top: { title_1_top() }
		width: { title_1_width() }
		height: { title_1_height() }
		z index: 5
		visible: { title_1_outline_visible() }
		alignment: { title_1_align() }
		font:
			name: { title_1_font() }
			weight: { title_1_weight() }
			style: { title_1_style() }
			size: { title_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	title 2 out 09:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: 5
		visible: { title_2_outline_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	title 2 out 10:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: 5
		visible: { title_2_outline_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	title 2 out 11:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: 5
		visible: { title_2_outline_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	title 2 out 12:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: 5
		visible: { title_2_outline_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	title 2 out 13:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: 5
		visible: { title_2_outline_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	title 2 out 14:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: 5
		visible: { title_2_outline_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	title 2 out 15:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: 5
		visible: { title_2_outline_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	title 2 out 16:
		left: { title_2_left() }
		top: { title_2_top() }
		width: { title_2_width() }
		height: { title_2_height() }
		z index: 5
		visible: { title_2_outline_visible() }
		alignment: { title_2_align() }
		font:
			name: { title_2_font() }
			weight: { title_2_weight() }
			style: { title_2_style() }
			size: { title_2_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	pokedex text 1 out 09:
		left: { pokedex1_left() }
		top: { pokedex1_top() }
		width: { pokedex1_width() }
		height: { pokedex1_height() }
		z index: 5
		alignment: { pokedex1_align() }
		visible: { pokedex1_outline_visible() }
		font
			name: { pokedex1_font() }
			weight: { pokedex1_weight() }
			style: { pokedex1_style() }
			size: { pokedex1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	pokedex text 1 out 10:
		left: { pokedex1_left() }
		top: { pokedex1_top() }
		width: { pokedex1_width() }
		height: { pokedex1_height() }
		z index: 5
		alignment: { pokedex1_align() }
		visible: { pokedex1_outline_visible() }
		font
			name: { pokedex1_font() }
			weight: { pokedex1_weight() }
			style: { pokedex1_style() }
			size: { pokedex1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	pokedex text 1 out 11:
		left: { pokedex1_left() }
		top: { pokedex1_top() }
		width: { pokedex1_width() }
		height: { pokedex1_height() }
		z index: 5
		alignment: { pokedex1_align() }
		visible: { pokedex1_outline_visible() }
		font
			name: { pokedex1_font() }
			weight: { pokedex1_weight() }
			style: { pokedex1_style() }
			size: { pokedex1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	pokedex text 1 out 12:
		left: { pokedex1_left() }
		top: { pokedex1_top() }
		width: { pokedex1_width() }
		height: { pokedex1_height() }
		z index: 5
		alignment: { pokedex1_align() }
		visible: { pokedex1_outline_visible() }
		font
			name: { pokedex1_font() }
			weight: { pokedex1_weight() }
			style: { pokedex1_style() }
			size: { pokedex1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	pokedex text 1 out 13:
		left: { pokedex1_left() }
		top: { pokedex1_top() }
		width: { pokedex1_width() }
		height: { pokedex1_height() }
		z index: 5
		alignment: { pokedex1_align() }
		visible: { pokedex1_outline_visible() }
		font
			name: { pokedex1_font() }
			weight: { pokedex1_weight() }
			style: { pokedex1_style() }
			size: { pokedex1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	pokedex text 1 out 14:
		left: { pokedex1_left() }
		top: { pokedex1_top() }
		width: { pokedex1_width() }
		height: { pokedex1_height() }
		z index: 5
		alignment: { pokedex1_align() }
		visible: { pokedex1_outline_visible() }
		font
			name: { pokedex1_font() }
			weight: { pokedex1_weight() }
			style: { pokedex1_style() }
			size: { pokedex1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	pokedex text 1 out 15:
		left: { pokedex1_left() }
		top: { pokedex1_top() }
		width: { pokedex1_width() }
		height: { pokedex1_height() }
		z index: 5
		alignment: { pokedex1_align() }
		visible: { pokedex1_outline_visible() }
		font
			name: { pokedex1_font() }
			weight: { pokedex1_weight() }
			style: { pokedex1_style() }
			size: { pokedex1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	pokedex text 1 out 16:
		left: { pokedex1_left() }
		top: { pokedex1_top() }
		width: { pokedex1_width() }
		height: { pokedex1_height() }
		z index: 5
		alignment: { pokedex1_align() }
		visible: { pokedex1_outline_visible() }
		font
			name: { pokedex1_font() }
			weight: { pokedex1_weight() }
			style: { pokedex1_style() }
			size: { pokedex1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	special rule 1 out 09:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			scale down to: 6
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	special rule 1 out 10:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			scale down to: 6
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	special rule 1 out 11:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			style: { special_rule_style() }
			scale down to: 6
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	special rule 1 out 12:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			style: { special_rule_style() }
			scale down to: 6
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	special rule 1 out 13:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			scale down to: 6
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	special rule 1 out 14:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			scale down to: 6
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	special rule 1 out 15:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			weight: { special_rule_weight() }
			scale down to: 6
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	special rule 1 out 16:
		left: { special_rule_left() }
		top: { special_rule_top() }
		width: { special_rule_width() }
		height: { special_rule_height() }
		z index: 5
		visible: { special_rule_outline_visible() }
		alignment: { special_rule_align() }
		line height soft: { special_rule_lh_soft() }
		font:
			name: { special_rule_font() }
			scale down to: 6
			weight: { special_rule_weight() }
			style: { special_rule_style() }
			size: { special_rule_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	ability 1 out 09:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	ability 1 out 10:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	ability 1 out 11:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	ability 1 out 12:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	ability 1 out 13:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	ability 1 out 14:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	ability 1 out 15:
		left: { ability_1_left() }
		top: { ability_1_top() }
		width: { ability_1_width() }
		height: { ability_1_height() }
		alignment: { ability_1_align() }
		z index: 5
		visible: { ability_1_outline_visible() }
		font:
			name: { ability_1_font() }
			weight: { ability_1_weight() }
			style: { ability_1_style() }
			size: { ability_1_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	rule np 1 out 09:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	rule np 1 out 10:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	rule np 1 out 11:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	rule np 1 out 12:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	rule np 1 out 13:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	rule np 1 out 14:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	rule np 1 out 15:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	rule np 1 out 16:
		left: { rule_np_1_left() }
		top: { rule_np_1_top() }
		width: { rule_np_1_width() }
		height: { rule_np_1_height() }
		z index: 5
		visible: { rule_np_1_outline_visible() }
		alignment: { rule_np_1_align() }
		line height hard: { rule_np_1_lh_hard() }
		line height soft: { rule_np_1_lh_soft() }
		symbol font:
			name: { rule_np_1_symbol_font() }
			size: { rule_np_1_symbol_size() }
			alignment: middle center
		font:
			name: { rule_np_1_font() }
			size: { rule_np_1_size() }
			weight: { rule_np_1_weight() }
			style: { rule_np_1_style() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	damage 1 out 09:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	damage 1 out 10:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	damage 1 out 11:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	damage 1 out 12:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	damage 1 out 13:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	damage 1 out 14:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	damage 1 out 15:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	damage 1 out 16:
		left: { damage_1_left() }
		top: { damage_1_top() }
		width: { damage_1_width() }
		height: { damage_1_height() }
		z index: 5
		visible: { damage_1_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	rule text 1 out 09:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_1_height() }
		z index: 5
		visible: { rule_1_outline_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	rule text 1 out 10:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_1_height() }
		z index: 5
		visible: { rule_1_outline_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	rule text 1 out 11:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_1_height() }
		z index: 5
		visible: { rule_1_outline_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	rule text 1 out 12:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_1_height() }
		z index: 5
		visible: { rule_1_outline_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	rule text 1 out 13:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_1_height() }
		z index: 5
		visible: { rule_1_outline_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	rule text 1 out 14:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_1_height() }
		z index: 5
		visible: { rule_1_outline_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	rule text 1 out 15:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_1_height() }
		z index: 5
		visible: { rule_1_outline_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	rule text 1 out 16:
		left: { rule_1_left() }
		top: { rule_1_top() }
		width: { rule_1_width() }
		height: { rule_1_height() }
		z index: 5
		visible: { rule_1_outline_visible() }
		alignment: { rule_1_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	damage 2 out 09:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	damage 2 out 10:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	damage 2 out 11:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	damage 2 out 12:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	damage 2 out 13:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	damage 2 out 14:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	damage 2 out 15:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	damage 2 out 16:
		left: { damage_2_left() }
		top: { damage_2_top() }
		width: { damage_2_width() }
		height: { damage_2_height() }
		z index: 5
		visible: { damage_2_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	rule text 2 out 09:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	rule text 2 out 10:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	rule text 2 out 11:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	rule text 2 out 12:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	rule text 2 out 13:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	rule text 2 out 14:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	rule text 2 out 15:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	rule text 2 out 16:
		left: { rule_2_left() }
		top: { rule_2_top() }
		width: { rule_2_width() }
		height: { rule_2_height() }
		z index: 5
		visible: { rule_2_outline_visible() }
		alignment: { rule_2_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	damage 3 out 09:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	damage 3 out 10:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	damage 3 out 11:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	damage 3 out 12:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	damage 3 out 13:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	damage 3 out 14:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	damage 3 out 15:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	damage 3 out 16:
		left: { damage_3_left() }
		top: { damage_3_top() }
		width: { damage_3_width() }
		height: { damage_3_height() }
		z index: 5
		visible: { damage_3_outline_visible() }
		alignment: { damage_align() }
		font:
			name: { damage_font() }
			weight: { damage_weight() }
			style: { damage_style() }
			size: { damage_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	rule text 3 out 09:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	rule text 3 out 10:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	rule text 3 out 11:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	rule text 3 out 12:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	rule text 3 out 13:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	rule text 3 out 14:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	rule text 3 out 15:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	rule text 3 out 16:
		left: { rule_3_left() }
		top: { rule_3_top() }
		width: { rule_3_width() }
		height: { rule_3_height() }
		z index: 5
		visible: { rule_3_outline_visible() }
		alignment: { rule_3_align() }
		line height hard: { rule_lh_hard() }
		symbol font:
			name: { rule_symbol_font() }
			size: { rule_symbol_size() }
		font:
			name: { rule_font() }
			weight: { rule_weight() }
			style: { rule_style() }
			size: { rule_size() }
			scale down to: 6
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	attack 1 out 09:
		left: { attack_1_left() }
		top: { attack_1_top() }
		width: { attack_1_width() }
		height: { attack_1_height() }
		z index: 5
		visible: { attack_1_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	attack 1 out 10:
		left: { attack_1_left() }
		top: { attack_1_top() }
		width: { attack_1_width() }
		height: { attack_1_height() }
		z index: 5
		visible: { attack_1_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	attack 1 out 11:
		left: { attack_1_left() }
		top: { attack_1_top() }
		width: { attack_1_width() }
		height: { attack_1_height() }
		z index: 5
		visible: { attack_1_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	attack 1 out 12:
		left: { attack_1_left() }
		top: { attack_1_top() }
		width: { attack_1_width() }
		height: { attack_1_height() }
		z index: 5
		visible: { attack_1_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	attack 1 out 13:
		left: { attack_1_left() }
		top: { attack_1_top() }
		width: { attack_1_width() }
		height: { attack_1_height() }
		z index: 5
		visible: { attack_1_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	attack 1 out 14:
		left: { attack_1_left() }
		top: { attack_1_top() }
		width: { attack_1_width() }
		height: { attack_1_height() }
		z index: 5
		visible: { attack_1_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	attack 1 out 15:
		left: { attack_1_left() }
		top: { attack_1_top() }
		width: { attack_1_width() }
		height: { attack_1_height() }
		z index: 5
		visible: { attack_1_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	attack 1 out 16:
		left: { attack_1_left() }
		top: { attack_1_top() }
		width: { attack_1_width() }
		height: { attack_1_height() }
		z index: 5
		visible: { attack_1_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	attack 2 out 09:
		left: { attack_2_left() }
		top: { attack_2_top() }
		width: { attack_2_width() }
		height: { attack_2_height() }
		z index: 5
		visible: { attack_2_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	attack 2 out 10:
		left: { attack_2_left() }
		top: { attack_2_top() }
		width: { attack_2_width() }
		height: { attack_2_height() }
		z index: 5
		visible: { attack_2_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	attack 2 out 11:
		left: { attack_2_left() }
		top: { attack_2_top() }
		width: { attack_2_width() }
		height: { attack_2_height() }
		z index: 5
		visible: { attack_2_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	attack 2 out 12:
		left: { attack_2_left() }
		top: { attack_2_top() }
		width: { attack_2_width() }
		height: { attack_2_height() }
		z index: 5
		visible: { attack_2_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	attack 2 out 13:
		left: { attack_2_left() }
		top: { attack_2_top() }
		width: { attack_2_width() }
		height: { attack_2_height() }
		z index: 5
		visible: { attack_2_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	attack 2 out 14:
		left: { attack_2_left() }
		top: { attack_2_top() }
		width: { attack_2_width() }
		height: { attack_2_height() }
		z index: 5
		visible: { attack_2_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	attack 2 out 15:
		left: { attack_2_left() }
		top: { attack_2_top() }
		width: { attack_2_width() }
		height: { attack_2_height() }
		z index: 5
		visible: { attack_2_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	attack 2 out 16:
		left: { attack_2_left() }
		top: { attack_2_top() }
		width: { attack_2_width() }
		height: { attack_2_height() }
		z index: 5
		visible: { attack_2_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	attack 3 out 09:
		left: { attack_3_left() }
		top: { attack_3_top() }
		width: { attack_3_width() }
		height: { attack_3_height() }
		z index: 5
		visible: { attack_3_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	attack 3 out 10:
		left: { attack_3_left() }
		top: { attack_3_top() }
		width: { attack_3_width() }
		height: { attack_3_height() }
		z index: 5
		visible: { attack_3_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	attack 3 out 11:
		left: { attack_3_left() }
		top: { attack_3_top() }
		width: { attack_3_width() }
		height: { attack_3_height() }
		z index: 5
		visible: { attack_3_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	attack 3 out 12:
		left: { attack_3_left() }
		top: { attack_3_top() }
		width: { attack_3_width() }
		height: { attack_3_height() }
		z index: 5
		visible: { attack_3_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	attack 3 out 13:
		left: { attack_3_left() }
		top: { attack_3_top() }
		width: { attack_3_width() }
		height: { attack_3_height() }
		z index: 5
		visible: { attack_3_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	attack 3 out 14:
		left: { attack_3_left() }
		top: { attack_3_top() }
		width: { attack_3_width() }
		height: { attack_3_height() }
		z index: 5
		visible: { attack_3_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	attack 3 out 15:
		left: { attack_3_left() }
		top: { attack_3_top() }
		width: { attack_3_width() }
		height: { attack_3_height() }
		z index: 5
		visible: { attack_3_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	attack 3 out 16:
		left: { attack_3_left() }
		top: { attack_3_top() }
		width: { attack_3_width() }
		height: { attack_3_height() }
		z index: 5
		visible: { attack_3_outline_visible() }
		alignment: { attack_align() }
		font:
			name: { attack_font() }
			weight: { attack_weight() }
			style: { attack_style() }
			size: { attack_size() }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
	level text out 09:
		left: { x_left(32+card_name_title_width()) }
		top: { y_top(19.5) }
		width: { fun_expand_size(50) }
		height: { fun_expand_size(if is_pokemon() then 24 else 0) }
		z index: 5
		alignment: { "bottom left" }
		visible: { title_lv_2_outline_visible() }
		font
			name: { "Humanist521BDCdn" }
			weight: { "bold" }
			style: { "normal" }
			size: { fun_expand_font(8) }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: 1
	level text out 10:
		left: { x_left(32+card_name_title_width()) }
		top: { y_top(19.5) }
		width: { fun_expand_size(50) }
		height: { fun_expand_size(if is_pokemon() then 24 else 0) }
		z index: 5
		alignment: { "bottom left" }
		visible: { title_lv_2_outline_visible() }
		font
			name: { "Humanist521BDCdn" }
			weight: { "bold" }
			style: { "normal" }
			size: { fun_expand_font(8) }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: 1
	level text out 11:
		left: { x_left(32+card_name_title_width()) }
		top: { y_top(19.5) }
		width: { fun_expand_size(50) }
		height: { fun_expand_size(if is_pokemon() then 24 else 0) }
		z index: 5
		alignment: { "bottom left" }
		visible: { title_lv_2_outline_visible() }
		font
			name: { "Humanist521BDCdn" }
			weight: { "bold" }
			style: { "normal" }
			size: { fun_expand_font(8) }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: 2
	level text out 12:
		left: { x_left(32+card_name_title_width()) }
		top: { y_top(19.5) }
		width: { fun_expand_size(50) }
		height: { fun_expand_size(if is_pokemon() then 24 else 0) }
		z index: 5
		alignment: { "bottom left" }
		visible: { title_lv_2_outline_visible() }
		font
			name: { "Humanist521BDCdn" }
			weight: { "bold" }
			style: { "normal" }
			size: { fun_expand_font(8) }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 1
			shadow displacement y: -2
	level text out 13:
		left: { x_left(32+card_name_title_width()) }
		top: { y_top(19.5) }
		width: { fun_expand_size(50) }
		height: { fun_expand_size(if is_pokemon() then 24 else 0) }
		z index: 5
		alignment: { "bottom left" }
		visible: { title_lv_2_outline_visible() }
		font
			name: { "Humanist521BDCdn" }
			weight: { "bold" }
			style: { "normal" }
			size: { fun_expand_font(8) }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: 2
			shadow displacement y: -1
	level text out 14:
		left: { x_left(32+card_name_title_width()) }
		top: { y_top(19.5) }
		width: { fun_expand_size(50) }
		height: { fun_expand_size(if is_pokemon() then 24 else 0) }
		z index: 5
		alignment: { "bottom left" }
		visible: { title_lv_2_outline_visible() }
		font
			name: { "Humanist521BDCdn" }
			weight: { "bold" }
			style: { "normal" }
			size: { fun_expand_font(8) }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -2
			shadow displacement y: -1
	level text out 15:
		left: { x_left(32+card_name_title_width()) }
		top: { y_top(19.5) }
		width: { fun_expand_size(50) }
		height: { fun_expand_size(if is_pokemon() then 24 else 0) }
		z index: 5
		alignment: { "bottom left" }
		visible: { title_lv_2_outline_visible() }
		font
			name: { "Humanist521BDCdn" }
			weight: { "bold" }
			style: { "normal" }
			size: { fun_expand_font(8) }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: 2
	level text out 16:
		left: { x_left(32+card_name_title_width()) }
		top: { y_top(19.5) }
		width: { fun_expand_size(50) }
		height: { fun_expand_size(if is_pokemon() then 24 else 0) }
		z index: 5
		alignment: { "bottom left" }
		visible: { title_lv_2_outline_visible() }
		font
			name: { "Humanist521BDCdn" }
			weight: { "bold" }
			style: { "normal" }
			size: { fun_expand_font(8) }
			color: rgb(255,255,255)
			shadow color: rgb(255,255,255)
			shadow displacement x: -1
			shadow displacement y: -2
extra card field:
	type: choice
	name: test image
	show statistics: false
	card list allow: false
	save value: false
	editable: false
	choice: trainer overlay
extra card field:
	type: text
	name: info text
	show statistics: false
	default: diagnostic()
	card list allow: false
	save value: false
	editable: false
extra card style:
	test image:
		left: { x_left(8) }
		top: { y_top(9) }
		width: { fun_expand_size(350) }
		height: { fun_expand_size(495) }
		visible: { contains(styling.General_Choices, match: "Test Image") }
		render style: image
		z index: 3
		image: { "!test-image.png" }
	info text:
		left: { x_left(50) }
		top: { y_top(50)+slide_up() }
		width: { fun_expand_size(200) }
		height: { fun_expand_size(50) }
		z index: 5
		visible: { contains(styling.General_Choices, match: "Diagnostic Text") }
		font:
			name: { "GillSans" }
			weight: { "bold" }
			style: { "normal" }
			size: { fun_expand_font(10) }
			color: rgb(255,0,0)